[{"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\SelectBox\\SelectBox.tsx":"1","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminPlayListUpdateModal.tsx":"2","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminPlayListMainManage.tsx":"3","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminPlayListManage.tsx":"4","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\_actions\\user_action.tsx":"5","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\HeaderAdminPlayList.tsx":"6","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Function\\AsyncFunction.tsx":"7","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminClickPlayList.tsx":"8","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminClickPlayListAddButton.tsx":"9","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\styles\\theme.ts":"10","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\student\\StudentCourseMoreViewPage.tsx":"11","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminCategory\\HeaderAdminCategory.tsx":"12","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminBanner\\HeaderAdminBanner.tsx":"13","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\components\\Navigation.tsx":"14","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Calendar\\Calendar.jsx":"15","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\App.tsx":"16","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\teacher\\DashBoard\\DashBoardPage.tsx":"17","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminBanner\\AdminBannerManageMain.tsx":"18","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\MyPage\\AdminMyPage.tsx":"19","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Register\\RegisterMain\\RegisterMain.tsx":"20","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminCategoryModule.tsx":"21","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\_actions\\types.ts":"22","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminCategory\\AdminCategoryCreateModal.tsx":"23","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\ContentManageInAdminNaviLeft.tsx":"24","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminMemberManage\\AdminMemberManage.tsx":"25","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminNaviLeft.tsx":"26","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\AdminNaviContentManage\\AdminNaviContentMake.tsx":"27","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\AdminNaviContentManage\\AdminNaviOtherThings.tsx":"28","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\CheckBox\\CheckBoxCustom.tsx":"29","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminContentManage\\AdminContentManageMain.tsx":"30","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminContentManage\\AdminContentManage.tsx":"31","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminContentManage\\HeaderAdminContentManage.tsx":"32","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\ToggleMenuBar\\ToggleButton.tsx":"33","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\MyPage\\MyPage.tsx":"34","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\components\\NavigationStudent.tsx":"35","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminPlayListCreateModal.tsx":"36","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\LandingPage.tsx":"37","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Register\\RegisterUserInfo\\RegisterUserInfoPage.tsx":"38","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\teacher\\DashBoard\\Banner.tsx":"39","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminHomeworkManage\\AdminHomeworkManageMain.tsx":"40","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Category\\CategoryModule.tsx":"41","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\teacher\\DashBoard\\CourseManage.tsx":"42","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\index.tsx":"43","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminHomeworkManage\\AdminHomeworkManage.tsx":"44","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminOrganizationManage\\AdminOrganizationMainManage.tsx":"45","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminHomeworkManage\\AdminHomeworkManageMainComponent\\AdminHomeworkDeadline.tsx":"46","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminHomeworkManage\\HeaderAdminHomeworkManage.tsx":"47","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\student\\StudentMyPage.tsx":"48","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\_reducers\\user_reducer.tsx":"49","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\components\\NavigationAdmin.tsx":"50","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminBanner\\AdminBannerManage.tsx":"51","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Register\\RegisterUserInfo\\RegisterUserInfoStyle.tsx":"52","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminContentMake\\AdminContentMakeManageMain.tsx":"53","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminContentMake\\AdminContentContainer\\MediaToolManageComponent.tsx":"54","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminContentMake\\Utils\\CategoryModule.tsx":"55","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminContentMake\\AdminContentMakeManage.tsx":"56","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminContentMake\\Utils\\InputModule.tsx":"57","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Button1.tsx":"58","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminContentMake\\Utils\\TextAreaModule.tsx":"59","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminCategory\\AdminCategoryManage.tsx":"60","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Login\\LoginStyle.tsx":"61","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminMemberManage\\HeaderAdmin.tsx":"62","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminMode.tsx":"63","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\hoc\\auth.tsx":"64","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\hooks\\useInput.tsx":"65","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Login\\Login.tsx":"66","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminOrganizationManage\\HeaderAdminOrganization.tsx":"67","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\student\\StudentMainPage.tsx":"68","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\teacher\\DashBoard\\CourseMoreViewPage.tsx":"69","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Input\\Input.tsx":"70","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\YoutubeApi\\YoutubeApi.tsx":"71","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminOrganizationManage\\AdminOrganizationManage.tsx":"72","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Logo\\Logo.tsx":"73","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Button\\PublicButton.tsx":"74"},{"size":1140,"mtime":1609391387429,"results":"75","hashOfConfig":"76"},{"size":9259,"mtime":1609729239493,"results":"77","hashOfConfig":"76"},{"size":5803,"mtime":1609399479277,"results":"78","hashOfConfig":"76"},{"size":1916,"mtime":1609727254937,"results":"79","hashOfConfig":"76"},{"size":5924,"mtime":1609392328571,"results":"80","hashOfConfig":"76"},{"size":2417,"mtime":1609398768655,"results":"81","hashOfConfig":"76"},{"size":1261,"mtime":1609829883993,"results":"82","hashOfConfig":"76"},{"size":4411,"mtime":1609739623137,"results":"83","hashOfConfig":"76"},{"size":5474,"mtime":1609758376407,"results":"84","hashOfConfig":"76"},{"size":234,"mtime":1607958538321,"results":"85","hashOfConfig":"76"},{"size":7382,"mtime":1608711052933,"results":"86","hashOfConfig":"76"},{"size":1324,"mtime":1609245500145,"results":"87","hashOfConfig":"76"},{"size":1602,"mtime":1609158808166,"results":"88","hashOfConfig":"76"},{"size":3450,"mtime":1608799598410,"results":"89","hashOfConfig":"76"},{"size":1446,"mtime":1608729803197,"results":"90","hashOfConfig":"76"},{"size":5341,"mtime":1609827775958,"results":"91","hashOfConfig":"76"},{"size":8163,"mtime":1608793468903,"results":"92","hashOfConfig":"76"},{"size":9647,"mtime":1609827369063,"results":"93","hashOfConfig":"76"},{"size":5754,"mtime":1609833706645,"results":"94","hashOfConfig":"76"},{"size":8643,"mtime":1609238708972,"results":"95","hashOfConfig":"76"},{"size":2089,"mtime":1609728784904,"results":"96","hashOfConfig":"76"},{"size":548,"mtime":1608785784211,"results":"97","hashOfConfig":"76"},{"size":8461,"mtime":1609324549039,"results":"98","hashOfConfig":"76"},{"size":2138,"mtime":1609821783786,"results":"99","hashOfConfig":"76"},{"size":1944,"mtime":1609726743970,"results":"100","hashOfConfig":"76"},{"size":1722,"mtime":1609762215690,"results":"101","hashOfConfig":"76"},{"size":2660,"mtime":1609827843151,"results":"102","hashOfConfig":"76"},{"size":1972,"mtime":1609728450355,"results":"103","hashOfConfig":"76"},{"size":1312,"mtime":1609821915218,"results":"104","hashOfConfig":"76"},{"size":10518,"mtime":1609762638025,"results":"105","hashOfConfig":"76"},{"size":2638,"mtime":1609760476965,"results":"106","hashOfConfig":"76"},{"size":2782,"mtime":1609761038792,"results":"107","hashOfConfig":"76"},{"size":2871,"mtime":1609762685947,"results":"108","hashOfConfig":"76"},{"size":5728,"mtime":1608720419961,"results":"109","hashOfConfig":"76"},{"size":3060,"mtime":1608713689152,"results":"110","hashOfConfig":"76"},{"size":5698,"mtime":1609325673984,"results":"111","hashOfConfig":"76"},{"size":1337,"mtime":1608004224837,"results":"112","hashOfConfig":"76"},{"size":5175,"mtime":1608721964093,"results":"113","hashOfConfig":"76"},{"size":1467,"mtime":1608269102898,"results":"114","hashOfConfig":"76"},{"size":463,"mtime":1609826239396,"results":"115","hashOfConfig":"76"},{"size":2070,"mtime":1609821945892,"results":"116","hashOfConfig":"76"},{"size":6527,"mtime":1609821985757,"results":"117","hashOfConfig":"76"},{"size":839,"mtime":1608283737809,"results":"118","hashOfConfig":"76"},{"size":1833,"mtime":1609823316912,"results":"119","hashOfConfig":"76"},{"size":5312,"mtime":1609158133951,"results":"120","hashOfConfig":"76"},{"size":9149,"mtime":1609825426636,"results":"121","hashOfConfig":"76"},{"size":1753,"mtime":1609824441618,"results":"122","hashOfConfig":"76"},{"size":7233,"mtime":1608721591312,"results":"123","hashOfConfig":"76"},{"size":1825,"mtime":1608795633012,"results":"124","hashOfConfig":"76"},{"size":3571,"mtime":1608802251355,"results":"125","hashOfConfig":"76"},{"size":1761,"mtime":1609726743970,"results":"126","hashOfConfig":"76"},{"size":751,"mtime":1608102662223,"results":"127","hashOfConfig":"76"},{"size":705,"mtime":1609829210029,"results":"128","hashOfConfig":"76"},{"size":6129,"mtime":1609921939080,"results":"129","hashOfConfig":"76"},{"size":2823,"mtime":1609919637610,"results":"130","hashOfConfig":"76"},{"size":2442,"mtime":1609842792308,"results":"131","hashOfConfig":"76"},{"size":1151,"mtime":1609849387545,"results":"132","hashOfConfig":"76"},{"size":1199,"mtime":1609839681168,"results":"133","hashOfConfig":"76"},{"size":1121,"mtime":1609842770912,"results":"134","hashOfConfig":"76"},{"size":1366,"mtime":1609726743971,"results":"135","hashOfConfig":"76"},{"size":1285,"mtime":1608081936419,"results":"136","hashOfConfig":"76"},{"size":1917,"mtime":1609143315219,"results":"137","hashOfConfig":"76"},{"size":753,"mtime":1609726743970,"results":"138","hashOfConfig":"76"},{"size":2578,"mtime":1608799218267,"results":"139","hashOfConfig":"76"},{"size":328,"mtime":1609238389186,"results":"140","hashOfConfig":"76"},{"size":4288,"mtime":1608796807728,"results":"141","hashOfConfig":"76"},{"size":1759,"mtime":1609156498039,"results":"142","hashOfConfig":"76"},{"size":7732,"mtime":1608711476510,"results":"143","hashOfConfig":"76"},{"size":7328,"mtime":1608705939335,"results":"144","hashOfConfig":"76"},{"size":839,"mtime":1608177666041,"results":"145","hashOfConfig":"76"},{"size":497,"mtime":1609911550657,"results":"146","hashOfConfig":"76"},{"size":1878,"mtime":1609726743971,"results":"147","hashOfConfig":"76"},{"size":141,"mtime":1608004107621,"results":"148","hashOfConfig":"76"},{"size":1245,"mtime":1609383933514,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},"1y71ck4",{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"153"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"173"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"188"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"159"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"159"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"236"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"173"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"236"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"185"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"182"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"188"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"182"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"153"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"236"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"185"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\SelectBox\\SelectBox.tsx",["331"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport chevronDown from '../../Images/images/images/Icon feather-chevron-down.png';\r\n\r\n\r\n\r\nconst DesignSelectBox = styled.select`\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    appearance: none;\r\n    width:50pt;\r\n    border:none;\r\n    background-color:0% 0% no-repeat padding-box padding-box rgb(244,244,244);\r\n    font-family: inherit;\r\n    background: url(${chevronDown}) no-repeat 95% 50%;\r\n    border-radius: 0px;\r\n    background-size: 12pt;\r\n    background-color: #a0988d6b;\r\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px;\r\n`;\r\n\r\ntype SelectBoxProps = {\r\n    data?: any\r\n    onChangeIndex?: any\r\n}\r\n\r\nconst SelectBox = ({data,onChangeIndex}:SelectBoxProps) => {\r\n    \r\n    console.log(data,\"dadada\");\r\n    \r\n   \r\n    \r\n\r\n    return(\r\n        <DesignSelectBox onChange={onChangeIndex}>\r\n            {data.map((item:any) => (\r\n                <option key={item.index} value={item.index}>\r\n                    {item.index}\r\n                </option>\r\n            ))}\r\n        </DesignSelectBox>\r\n    );\r\n}\r\n\r\nexport default SelectBox;\r\n",["332","333"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminPlayListUpdateModal.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminPlayListMainManage.tsx",["334","335"],"import React,{ useEffect, useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport pencil from '../../Images/images/images/IconMaterialEdit.png';\r\nimport axios from 'axios';\r\nimport Button1 from '../../utils/Button1';\r\nimport AdminPlayListCreateModal from './AdminPlayListCreateModal';\r\nimport PublicButton from '../../utils/Button/PublicButton';\r\nimport AdminPlayListUpdateModal from './AdminPlayListUpdateModal';\r\nimport AdminClickPlayList from './AdminClickPlayList';\r\n\r\nconst SearchSection = styled.div`\r\n    margin-Top: 10px;\r\n    display: flex;\r\n    position: relative;\r\n    height: 50px;\r\n`;\r\nconst InputAlign = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n`;\r\n\r\nconst Table = styled.table`\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    color: rgb(44, 44, 44);\r\n    font: 13px / 15px \"Helvetica Neue\";\r\n`;\r\n\r\nconst Thead = styled.thead `\r\n    font: bold 14px / 17px \"Helvetica Neue\";\r\n    box-sizing: border-box;\r\n    outline: none;\r\n`;\r\n\r\nconst Tbody = styled.tbody`\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    color: rgb(44, 44, 44);\r\n    font: 13px / 15px \"Helvetica Neue\";\r\n`;\r\n\r\n\r\n\r\ntype Props = {\r\n    CookieValue: Number;\r\n    IsClickContent: boolean;\r\n    PlayListItems: any;\r\n}\r\n\r\nconst AdminPlayListMainManage:React.FC<Props> = ({PlayListItems,IsClickContent,CookieValue}) => {\r\n\r\n    const [PlayListData, setPlayListData] = useState<Object[]>([]);\r\n    const [page, setPage] = useState<number>(1);\r\n    const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n    const [isModalUpdateOpen, setIsModalUpdateOpen] = useState<boolean>(false);\r\n    const [specificPlayList, setSpecificplaylist] = useState<Object[]>([]);\r\n\r\n    async function getPlayList() {\r\n        await axios.get(`https://1hour.school/api/v1/playlist/load/${page}`, {\r\n            headers: {\r\n                Authorization: CookieValue\r\n            }\r\n        }).then(response => {\r\n            if(response.data.status === 200) {\r\n                console.log(response.data.data.rows);\r\n                setPlayListData(response.data.data.rows)\r\n            }\r\n        });\r\n    } \r\n\r\n    useEffect(() => {\r\n        getPlayList();\r\n    },[isModalOpen,isModalUpdateOpen,IsClickContent])\r\n\r\n    const onPlayListCreate = () => {\r\n        setIsModalOpen(true);\r\n    }\r\n\r\n    //목록 메인화면 노출 클릭\r\n    const PublicButtonChange = (playlist:any) => {\r\n        let hidden = playlist.hidden;\r\n        let body = {\r\n            pk: playlist.pk,\r\n            name: playlist.playlist_name,\r\n            hidden: !hidden,\r\n            index: playlist.index\r\n        }\r\n        axios.post(`https://1hour.school/api/v1/playlist/update`,body, {\r\n            headers: {\r\n                Authorization: CookieValue\r\n            }\r\n        }).then(response => {\r\n            if(response.data.status === 200) {\r\n                getPlayList();\r\n            } else {\r\n                alert(\"메인화면 노출 업데이트 하는데 실패했습니다\");\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    const PlayListUpdateModalHandler = (playlist:any) => {\r\n        setIsModalUpdateOpen(true);\r\n        setSpecificplaylist(playlist);\r\n    }\r\n\r\n    //플레이리스트\r\n    if(IsClickContent === false) {\r\n        return(\r\n            <AdminClickPlayList CookieValue={CookieValue} PlayListItems={PlayListItems} />\r\n        );\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {isModalUpdateOpen ? \r\n                <>\r\n                    <AdminPlayListUpdateModal data={PlayListData} playlist={specificPlayList} CookieValue={CookieValue} setIsModalUpdateOpen={setIsModalUpdateOpen} />\r\n                </> : null\r\n            }\r\n            {isModalOpen ? \r\n                <>\r\n                    <AdminPlayListCreateModal setIsModalOpen={setIsModalOpen} CookieValue={CookieValue} />\r\n                </> : null\r\n            }\r\n            <SearchSection>\r\n                <InputAlign>\r\n                    <Button1 size=\"130pt\" heightSize=\"20pt\" onClick={() => onPlayListCreate()} text=\"플레이리스트 생성하기\"  />\r\n                </InputAlign>\r\n            </SearchSection>\r\n            <div>\r\n                <Table>\r\n                    <Thead>\r\n                        <tr>\r\n                            <td>플레이리스트 이름</td>\r\n                            <td>화면순서</td>\r\n                            <td>메인화면 노출</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </Thead>\r\n                    <Tbody>\r\n                        {PlayListData ? \r\n                            PlayListData.map((playlist:any,index:any) => {\r\n                                return(\r\n                                    <tr key={index}>\r\n                                        <td>{playlist.playlist_name}</td>\r\n                                        <td>{playlist.index}</td>\r\n                                        <td>\r\n                                            <PublicButton \r\n                                                state={playlist.hidden}\r\n                                                PublicButtonChange={() => PublicButtonChange(playlist)}\r\n                                            />\r\n                                        </td>\r\n                                        <td onClick={() => PlayListUpdateModalHandler(playlist)} style={{cursor:'pointer'}}><img src={pencil} alt=\"logo\" width=\"11px\" height=\"11px\" /></td>\r\n                                    </tr>\r\n                                );\r\n                            })\r\n                            : \r\n                            <div>데이터없당</div>\r\n                        }\r\n                    </Tbody>\r\n                </Table>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AdminPlayListMainManage;\r\n",["336","337"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminPlayListManage.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\_actions\\user_action.tsx",[],["338","339"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\HeaderAdminPlayList.tsx",["340"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { getPlayList } from '../../utils/Function/AsyncFunction';\r\nconst Wrapper = styled.section`\r\n    height: 10%;\r\n`;\r\n\r\nconst HeadTitle = styled.div`\r\n    padding-top: 72px;\r\n    padding-left: 20px;\r\n`;\r\n\r\nconst HeadFont = styled.p`\r\n    font-size: 26px;\r\n    font-weight: Bold;\r\n    font-family: Helvetica Neue;\r\n    text-align: left;\r\n`;\r\n\r\nconst HeadCategory = styled.div`\r\n    display: flex;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border-bottom: 1px solid black;\r\n`;\r\n\r\nconst HeadCategorySpan = styled.span`\r\n    width: 10%;\r\n    display: inline-flex;\r\n    font-size: 18px;\r\n    font-weight:bold;\r\n    min-width:60pt;\r\n    margin-left:20pt;\r\n    letter-spacing:0px;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    &:hover {\r\n        color: yellow;\r\n    }\r\n`;\r\n\r\ntype HeaderProps = {\r\n    CookieValue:number;\r\n    ContentButton: (event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\r\n    OnClickPlayListButton: (event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\r\n}\r\n\r\n\r\nconst HeaderAdminPlayList = ({CookieValue,ContentButton,OnClickPlayListButton}:HeaderProps) => {\r\n\r\n    const [Data,setData] = useState<[]>([]);\r\n    \r\n    useEffect(() => {\r\n        getPlayList(1,CookieValue).then(function(data) {\r\n            if(data.status === 200) {\r\n                setData(data.data.rows);\r\n            }\r\n        }).catch(function(err) {\r\n            alert(\"데이터 불러오는데 실패했습니다\");\r\n            console.log(err);\r\n        })\r\n    },[])\r\n\r\n    \r\n\r\n    return(\r\n        <Wrapper>\r\n            <HeadTitle>\r\n                <HeadFont>\r\n                    플레이리스트\r\n                </HeadFont>\r\n            </HeadTitle>\r\n            <HeadCategory>\r\n                <HeadCategorySpan onClick={ContentButton}>\r\n                    목록\r\n                </HeadCategorySpan>\r\n                {Data.map((items:any,index) => {\r\n                    return(\r\n                        <HeadCategorySpan onClick={() => OnClickPlayListButton(items)} key={index}>\r\n                            {items.playlist_name}\r\n                        </HeadCategorySpan>\r\n                    );\r\n                })}\r\n            </HeadCategory>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default HeaderAdminPlayList;","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Function\\AsyncFunction.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminClickPlayList.tsx",["341"],"import React,{useEffect,useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { getClickPlayListData } from '../../utils/Function/AsyncFunction';\r\nimport AdminClickplayListAddButton from './AdminClickPlayListAddButton';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    box-sizing: border-box;\r\n    width: calc(100% - 77pt);\r\n`;\r\n\r\nconst Title = styled.p`\r\n    font-size: 14px;\r\n    font-family: \"Helvetica Neue\";\r\n    font-weight: bold;\r\n    margin-top: 100pt;\r\n    padding-left: 6pt;\r\n    text-align: left;\r\n`;\r\n\r\nconst MainBody = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    width: 330px;\r\n    height: 31px;\r\n    background: 0% 0% no-repeat padding-box padding-box rgb(255, 255, 255);\r\n    border: 0.5px solid rgb(112, 112, 112);\r\n    padding-left:8pt;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n`;\r\n\r\nconst RightBody = styled.div`\r\n    width: 418px;\r\n    height: 238px;\r\n    overflow-y: auto;\r\n    background: 0% 0% no-repeat padding-box padding-box rgb(255, 255, 255);\r\n    border: 0.5px solid rgb(112, 112, 112);\r\n    margin-bottom: 22pt;\r\n`;\r\n\r\n\r\nconst Content = styled.div`\r\n    width:100%;\r\n    padding:8px;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n`;\r\n\r\nconst ContentIn = styled.div`\r\n   padding-left: 12pt;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n`;\r\n\r\nconst SPan = styled.span`\r\n    padding: 8px 0px;\r\n    display: flex;\r\n    -webkit-box-pack: justify;\r\n    justify-content: space-between;\r\n    font: 13px / 15px \"Helvetica Neue\";\r\n    letter-spacing: 0px;\r\n    color: rgb(44, 44, 44);\r\n`;\r\n\r\nconst Button = styled.button`\r\n    background-color: rgb(255, 227, 25);\r\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px;\r\n    border-radius: 6px;\r\n    border: 0px;\r\n    font: 15px / 17px \"Helvetica Neue\";\r\n    letter-spacing: 0px;\r\n    padding: 8px 14px;\r\n`;\r\n\r\ntype Props = {\r\n    PlayListItems: any;\r\n    CookieValue: Number;\r\n}\r\n\r\ntype contentProps = {\r\n    title: string;\r\n    playlist_name: string;\r\n}\r\n\r\nconst AdminClickPlayList = ({PlayListItems,CookieValue}:Props) => {\r\n    const [ContentData, setContentData] = useState<[]>([]);\r\n    const [IsShowPlayList, setIsShowPlayList] = useState<boolean>(false);\r\n    console.log(PlayListItems,\"dskj\");\r\n    \r\n    useEffect(() => {\r\n        getClickPlayListData(PlayListItems.pk, CookieValue).then(function(data) {\r\n            if(data.status === 200) {\r\n                console.log(data.data,\"뭐가있을까나 data.data에는\");\r\n                setContentData(data.data.contents);\r\n            }\r\n        }).catch(function(err) {\r\n            alert(\"데이터를 불러오는데 실패했습니다\");\r\n            console.log(err);\r\n        })\r\n    },[PlayListItems])\r\n\r\n    const ShowPlayList = () => {\r\n        setIsShowPlayList(true);\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Title>플레이리스트 이름</Title>\r\n            <div style={{display:'flex', flexDirection:'column', textAlign:'center'}}>\r\n                <div style={{display:'flex'}}>\r\n                    <MainBody>\r\n                        <Input readOnly value={PlayListItems.playlist_name} />\r\n                    </MainBody>\r\n                    <RightBody>\r\n                    {ContentData.map((content:contentProps,index) => {\r\n                        return(\r\n                            <Content key={index}>\r\n                                <ContentIn>\r\n                                    <SPan>{content.title}</SPan>\r\n                                </ContentIn>\r\n                            </Content>\r\n                        );\r\n                    })}\r\n                    </RightBody>\r\n                </div>\r\n                {IsShowPlayList \r\n                    ?\r\n                    <>\r\n                        <div style={{marginBottom:'20px'}}>\r\n                            <Button onClick={ShowPlayList}>수정하기</Button>\r\n                        </div>\r\n                        <AdminClickplayListAddButton ContentData={ContentData} CookieValue={CookieValue} />\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Button onClick={ShowPlayList}>플레이리스트에 추가하기</Button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default AdminClickPlayList;",["342","343"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminClickPlayListAddButton.tsx",["344","345"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\styles\\theme.ts",[],["346","347"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\student\\StudentCourseMoreViewPage.tsx",["348","349"],"import React,{useState, useEffect} from 'react';\r\nimport queryString from 'query-string';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport NavigationStudent from '../components/NavigationStudent';\r\nimport { SearchByCategory, SearchData } from '../_actions/user_action';\r\nimport Input1 from '../utils/Input/Input';\r\nimport Banner from '../teacher/DashBoard/Banner';\r\nimport { RootState } from '../_reducers';\r\nimport Button1 from '../utils/Button1';\r\n\r\n\r\nconst Container = styled.div`\r\n    overflow-y:scroll;\r\n`;\r\n\r\nconst SearchSection = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 50px;\r\n    :nth-child(2) {\r\n        margin-right:10px;\r\n    }\r\n    :last-child {\r\n        margin-left:10px;\r\n    }\r\n`;\r\n\r\nconst MainSection = styled.div`\r\n    margin-bottom: 10px;\r\n    margin-left: 10%;\r\n    margin-right: 10%;\r\n`;\r\n\r\nconst MainTitle = styled.div`\r\n    height: 50px;\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst MainBody = styled.div`\r\n    display:flex;\r\n`;\r\n\r\n\r\n\r\n\r\nconst StudentCourseMoreViewPage:React.FC = (props:any) => {\r\n\r\n    const query = queryString.parse(props.location.search);\r\n\r\n    const dispatch = useDispatch();\r\n    const Data = useSelector((state:RootState) => state?.user?.data?.data?.contents);\r\n    const CategoryData = useSelector((state:RootState) => state?.user.searchCategory?.data?.contents);\r\n\r\n    console.log(CategoryData,\"이거잉너아나\"); //category일때옴\r\n    \r\n    \r\n    \r\n    // auth hoc만들어서 한번에 검증해버릴거임 귀차나\r\n    const cookieValue = document.cookie.split('=');\r\n    \r\n    const [search, setSearch] = useState<string>(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        const selected = 0;\r\n        {query.keyword ? dispatch(SearchData(cookieValue[1],query.keyword)) :\r\n            dispatch(SearchByCategory(cookieValue[1],selected ,query.categoriespk));\r\n        }  \r\n    },[dispatch,SearchByCategory,SearchData])\r\n\r\n\r\n    const onSearch = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    //검색하면 데이터 불러옴\r\n    const onSearchButton = (e:any) => {\r\n        dispatch(SearchData(cookieValue[1],search))\r\n        props.history.push(`/student/StudentCourseMoreViewPage?categoriespk=&categoriesname=&keyword=${search}&type=KEYWORD`);\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <NavigationStudent />\r\n            <Container>\r\n                <Banner cookieValue={cookieValue}/> \r\n                <SearchSection>\r\n                    <div style={{\r\n                        border:\"1px solid black\",\r\n                        marginRight: \"10px\",\r\n                        padding: \"1px\"\r\n                    }}>\r\n                        <Input1 placeholder=\"검색어를 입력하세요\" size=\"500px\" onChange={onSearch} type=\"text\" value={search}/>\r\n                    </div>\r\n                    <Button1 onClick={onSearchButton} size=\"10%\" text=\"검색\" />\r\n                </SearchSection>\r\n                <MainSection>\r\n                    <>\r\n                        {query.keyword ? <>\r\n                        <MainTitle>\r\n                            <p>{query?.keyword}의 검색결과</p>\r\n                            <p>더보기</p>\r\n                        </MainTitle>\r\n                        <MainBody>\r\n                            <div style={{\r\n                                height:\"300px\",\r\n                                display:\"flex\",\r\n                                flexDirection:\"row\",\r\n                            }}>\r\n                                {Data && Data.map((content:any,index:any) => {\r\n                                    const suburl = content.url.slice(32,43);\r\n\r\n                                    return(\r\n                                        <div \r\n                                            key={index}\r\n                                        >\r\n                                            <img width=\"100%\" src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"Logo\" height=\"150px\" \r\n                                                style={{\r\n                                                    margin:\"10px\",\r\n                                                    padding:\"10px\"\r\n                                                }}/>\r\n                                            <p>{content?.title}</p>\r\n                                            <p>{content?.youtubeTitle?.slice(0,31)}...</p>\r\n                                            <div>\r\n                                                <label>단어</label>\r\n                                                <label>문장</label>\r\n                                                <label>더빙</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </MainBody></> :\r\n                            <>\r\n                            <MainTitle>\r\n                                <p>{query?.categoriesname}의 검색결과</p>\r\n                                <p>더보기</p>\r\n                            </MainTitle>\r\n                            <MainBody>\r\n                                <div style={{\r\n                                    height:\"300px\",\r\n                                    display:\"flex\",\r\n                                    flexDirection:\"row\",\r\n                                }}>\r\n                                    {CategoryData && CategoryData.map((content:any,index:any) => {\r\n                                        const suburl = content.url.slice(32,43);\r\n    \r\n                                        return(\r\n                                            <div \r\n                                                key={index}\r\n                                            >\r\n                                                <img width=\"100%\" src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"Logo\" height=\"150px\" \r\n                                                    style={{\r\n                                                        margin:\"10px\",\r\n                                                        padding:\"10px\",\r\n                                                        maxWidth:\"220pt\"\r\n                                                    }}/>\r\n                                                <p>{content?.title}</p>\r\n                                                <p>{content?.youtubeTitle?.slice(0,31)}...</p>\r\n                                                <div>\r\n                                                    <label>단어</label>\r\n                                                    <label>문장</label>\r\n                                                    <label>더빙</label>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            </MainBody></>\r\n                        }\r\n                        </>\r\n                    </MainSection>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StudentCourseMoreViewPage;",["350","351"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminCategory\\HeaderAdminCategory.tsx",[],["352","353"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminBanner\\HeaderAdminBanner.tsx",[],["354","355"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\components\\Navigation.tsx",["356"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Calendar\\Calendar.jsx",[],["357","358"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\App.tsx",["359","360"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\teacher\\DashBoard\\DashBoardPage.tsx",["361","362","363","364","365"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminBanner\\AdminBannerManageMain.tsx",["366","367","368","369"],"import React,{useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport settingImg from '../../Images/images/images/setting.png';\r\nimport MovingButton from '../../utils/Button/MovingButton';\r\n\r\n\r\ninterface SizeUrl {\r\n    size: string\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n    height: 800px;\r\n`;\r\n\r\nconst Banner = styled.div`\r\n    height: 30%;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 74pt);\r\n    padding-left: 9pt;\r\n    padding-top: 80pt;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst SetImg = styled.img`\r\n    cursor: pointer;\r\n`;\r\n\r\nconst UpdateBannerWrap = styled.div`\r\n    box-sizing: border-box;\r\n    width: calc(100% - 95pt);\r\n    margin-top: 98.5px;\r\n    margin-left: 35px;\r\n    height: 800px;\r\n    display:flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst BannerUploadWrap = styled.div`\r\n    display:'flex';\r\n    width:100%;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst UploadImage = styled.div`\r\n    width: 100%;\r\n    height: 128px;\r\n    margin-bottom: 21px;\r\n    background-image: url(${(props:SizeUrl) => props.size});\r\n    background-color: #F4F4F4;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    box-shadow: 0pt 3pt 6pt #00000029;\r\n`;\r\n\r\nconst InputUrl = styled.input`\r\n    background: #F4F4F4 0% 0% no-repeat padding-box;\r\n    box-shadow: 0px 3px 6px #00000029;\r\n    border-radius: 5px;\r\n    width: 100%;\r\n    height: 47px;\r\n    border: 0;\r\n    margin-bottom: 62pt;\r\n    padding: 0 18pt;\r\n    font: normal normal 300 13px/16px Helvetica Neue;\r\n`;\r\n\r\nconst SPAN = styled.span`\r\n    &:hover {\r\n        color: white;\r\n        background-color: black;\r\n    }\r\n`;\r\n\r\ntype Props = {\r\n    type: boolean;\r\n    CookieValue: Number;\r\n    setState:any;\r\n}\r\n\r\n\r\nconst AdminBannerManageMain:React.FC<Props> = ({type,setState, CookieValue}) => {\r\n\r\n    const [page, setPage] = useState<number>(1);\r\n    const [bannerData, setBannerData] = useState<Object[]>([]);\r\n    const [isMenuOpen, setIsMenuOpen] = useState<number>(-1); //setting Menu bar\r\n    const [files, setFiles] = useState([]);\r\n    const [UploadData, setUploadFiles] = useState([]); //body에넣을것\r\n    const [url, setUploadFilesUrl] = useState<string>(\"\");\r\n    const [pk, setUploadFilesPk] = useState<number>(0);\r\n    const [Link, setLink] = useState<string>(\"\");\r\n\r\n    //취소버튼\r\n    const clickCancelHandler = () => {\r\n        // console.log(\"누름\");\r\n        setState(false);\r\n    }\r\n    \r\n   //위의 업로드버튼\r\n    const fileChangedHandler = (e:any) => {\r\n        // console.log(e.target.files[0]);\r\n        setFiles(e.target.filse);\r\n        const formData = new FormData();\r\n        formData.append(\"file\",e.target.files[0]);\r\n        \r\n        axios.post(`https://1hour.school/api/v1/file/upload`,formData,{\r\n            headers: {\r\n                Authorization: CookieValue\r\n            }\r\n        })\r\n            .then(response => {\r\n                if(response.data.status === 200) {\r\n                    setUploadFiles(response.data.data);\r\n                    setUploadFilesUrl(response.data.data.url);\r\n                    setUploadFilesPk(response.data.data.pk);\r\n                } else {\r\n                    console.log(\"Data를 업로드하는데 실패했습니다\");\r\n                }\r\n            });\r\n    }\r\n\r\n    const valueChangeHandler = (e:any) => {\r\n        setLink(e.target.value);\r\n    }\r\n    //배너 업로드\r\n    const onCreateBannerHandler = () => {\r\n        let body = {\r\n            banner_img: pk,\r\n            ref:Link\r\n        }\r\n        axios.post(`https://1hour.school/api/v1/banner/create`,body, {\r\n            headers: {\r\n                Authorization: CookieValue\r\n            }\r\n        }).then(response => {console.log(response.data)}); \r\n    }\r\n   \r\n    \r\n    const UpdateBannerComponent = () => {\r\n        return(\r\n            <>\r\n                <Helmet>\r\n                    <title>Admin | 배너관리 | 올리기</title>\r\n                </Helmet>\r\n                <UpdateBannerWrap>\r\n                    <BannerUploadWrap>\r\n                        <h3>배너올리기*</h3>\r\n                        <p>사이즈는 000 x 00 픽셀에 맞춰주세요</p>\r\n                        <UploadImage size={url}></UploadImage>\r\n                        <div style={{position:'relative'}}>\r\n                            <input onChange={fileChangedHandler} type=\"file\" name=\"add\" id=\"add\" style={{display:'none'}} multiple  />\r\n                            <label htmlFor=\"add\">\r\n                                <div style={{position:'absolute', border:'1px solid black',cursor:'pointer', right:'0px'}}>파일선택</div>\r\n                            </label>\r\n                        </div>\r\n                    </BannerUploadWrap>\r\n                    <BannerUploadWrap>\r\n                        <h3>연결링크*</h3>\r\n                        <InputUrl value={Link} onChange={valueChangeHandler} />\r\n                        <div style={{justifyContent:'space-between', display:'flex'}}>\r\n                            <button onClick={clickCancelHandler}>취소하기</button>\r\n                            <button onClick={onCreateBannerHandler}>등록하기</button>\r\n                        </div>\r\n                    </BannerUploadWrap>\r\n                </UpdateBannerWrap>\r\n            </>\r\n        );\r\n    }\r\n    \r\n    \r\n\r\n    // 배너 관리 목록\r\n    const request = async function getBanner() {\r\n        await axios.get(`https://1hour.school/api/v1/banner/list/${page}`, {\r\n            headers: {\r\n                Authorization: CookieValue\r\n            }\r\n        }).then(response => {\r\n            if(response.data.status === 200 ) {\r\n                setBannerData([...response.data.data.rows]);\r\n            } else {\r\n                alert(\"배너데이터 불러오는데 실패했습니다\");\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        request();\r\n    },[type])\r\n    \r\n\r\n    const settingClickHandler = (index:number) => {\r\n        setIsMenuOpen(index);\r\n        if(index === isMenuOpen) {\r\n            setIsMenuOpen(-1);\r\n        }\r\n    }\r\n\r\n    \r\n   const IsBannerPublicHandler = (pk:number) => {\r\n        let body = {\r\n            banner:pk\r\n        }\r\n        axios.post(`https://1hour.school/api/v1/banner/update/shown`,body, {\r\n            headers: {\r\n                Authorization: CookieValue\r\n            }\r\n        }).then(response => {\r\n            if(response.data.status === 200) {\r\n                request();\r\n            } else {\r\n                alert(\"데이터를 수정하는데 실패했습니다\");\r\n            }\r\n        });\r\n   }\r\n\r\n   //배너삭제하기\r\n   const BannerDelete = (pk:number) => {\r\n       let body = {\r\n           banner:pk\r\n       }\r\n       axios.post(`https://1hour.school/api/v1/banner/delete`, body, {\r\n            headers: {\r\n                Authorization: CookieValue\r\n            }\r\n       }).then(response => {console.log(response.data)}); //삭제성공 if response.data.status === 200 성공 else if 실패\r\n   }\r\n\r\n    //배너 목록 눌렀을때 보여주는 페이지\r\n    const ShowCurrentBannerComponent = () => {\r\n        return(\r\n            <>\r\n                <Helmet>\r\n                    <title>Admin | 배너관리 | 목록</title>\r\n                </Helmet>\r\n                <Banner>\r\n                    {bannerData && bannerData.map((Data:any,index) => {\r\n                        console.log(bannerData,\"배너배너\");\r\n                        return(\r\n                            <div key={index}>\r\n                                <div style={{display:'flex', justifyContent:'space-between', margin:'20pt auto', alignItems:'center'}}>\r\n                                    <div>\r\n                                        <span>#{index}</span>&nbsp;\r\n                                        <span>{Data.created} 생성</span>\r\n                                    </div>\r\n                                    <div style={{display:'flex',width:'250px',justifyContent:'space-evenly', position:'relative', marginBottom:'10pt', alignItems: 'center'}}>\r\n                                        <span>{Data.hidden === false ? \"배너 공개중\" : \"배너 비공개중\" }</span>\r\n                                        <div onClick={() => IsBannerPublicHandler(Data.pk)}><MovingButton hidden={Data.hidden} /></div>\r\n                                            <div>\r\n                                                <SetImg src={settingImg} alt=\"logo\" onClick={() => settingClickHandler(index)} />\r\n                                                {isMenuOpen !== index ? null : <div style={{display:'flex',flexDirection:'column',cursor:'pointer' ,border:'1px solid black',position:'absolute',top:'30px',right:'35px'}}>\r\n                                                    <SPAN>배너수정하기</SPAN>\r\n                                                    <SPAN onClick={() => BannerDelete(Data.pk)}>배너삭제하기</SPAN>\r\n                                                </div>}\r\n                                            </div>\r\n                                    </div>\r\n                                </div>\r\n                                <img src={Data.img} alt=\"logo\" width=\"100%\" height=\"140px\" />\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </Banner>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    return(\r\n        <Wrapper>\r\n            {type ? UpdateBannerComponent() : ShowCurrentBannerComponent()}\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default AdminBannerManageMain;","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\MyPage\\AdminMyPage.tsx",["370","371"],"import React,{ useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../_reducers';\r\nimport { MyInfo } from '../../_actions/user_action';\r\nimport Button1 from '../../utils/Button1';\r\nimport useInput from '../../hooks/useInput';\r\nimport NavigationAdmin from '../../components/NavigationAdmin';\r\nconst Container = styled.section`\r\n    min-height: 75vh;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    width: 70%;\r\n    height: 100%;\r\n    margin-top: 7%;\r\n    align-self: center;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    height: 15%;\r\n`;\r\n\r\nconst FontTitle = styled.div`\r\n    height: 50%;\r\n    font-weight: 600;\r\n    font-size: 26pt;\r\n`;\r\n\r\nconst FontRegion = styled.div`\r\n    height: 50%;\r\n    border-bottom: 1px solid black;\r\n    display: flex;\r\n    padding: 1rem;\r\n`;\r\n\r\nconst FontText = styled.span`\r\n    font-weight: 500;\r\n    font-size: 22pt;\r\n    text-align: left;\r\n    margin-left: 10px;\r\n    cursor: pointer;\r\n    border-bottom: 7px solid yellow;\r\n`;\r\n\r\nconst Main = styled.div`\r\n    display: flex;\r\n    flex-direction:column;\r\n    height: 700px;\r\n    padding: 30px;\r\n`;\r\n\r\nconst WrapDIV = styled.div`\r\n    display:flex;\r\n    height: 10%;\r\n    width:100%;\r\n    margin: 22px auto;\r\n`;\r\nconst WrapBut = styled.div`\r\n    display:flex;\r\n    height: 10%;\r\n    width:100%;\r\n    margin: 15px auto;\r\n    justify-content: space-between;\r\n`;\r\n\r\n\r\nconst Ptext  = styled.p`\r\n    margin: auto 2rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    margin-left: 20px;\r\n    margin-top: 5px;\r\n    background: 0% 0% no-repeat padding-box padding-box rgb(244, 244, 244);\r\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px;\r\n    border: 0px;\r\n    border-radius: 12px;\r\n    width: 400pt;\r\n    height: 36pt;\r\n    padding-left: 11pt;\r\n`;\r\n\r\n\r\nconst AdminMyPage = (props:any) => {\r\n\r\n    console.log(props,\"MyPageProps\");\r\n    console.log(props.cookieValue[1]);\r\n    const data = useSelector((state:RootState) => state.user.myInfo?.data);\r\n    const dispatch = useDispatch();\r\n\r\n    console.log(data);\r\n\r\n    const organization = useInput(\"\");\r\n    const password = useInput(\"\");\r\n    const name = useInput(\"\");\r\n\r\n    const cookieValue = document.cookie.split(\"=\");\r\n    const email = localStorage.getItem(\"userEmail\");\r\n\r\n    useEffect(() => {\r\n        dispatch(MyInfo(cookieValue[1],email));\r\n    },[])\r\n\r\n    const onClickBut = () => {\r\n        console.log(\"클릭함\");\r\n    }\r\n\r\n    const onClickUpdate = () => {\r\n        console.log(\"클릭함\");\r\n        if( !name.value || !organization.value || !password.value ) {\r\n            alert(\"모두다 입력하세요\");\r\n        }\r\n        let body = {\r\n            pk:email,\r\n            name:name.value,\r\n            authority:props.authority,\r\n            email,\r\n            organization: organization.value,\r\n            password: password.value\r\n        }\r\n        axios.post(`https://1hour.school/api/v1/members/update`, body, {\r\n            headers: {\r\n                Authorization: cookieValue[1]\r\n            }\r\n        }).then(response => {console.log(response.data)});\r\n        console.log(body,\"body\");\r\n    }\r\n    return(\r\n        <>\r\n            <NavigationAdmin />\r\n            <Container>\r\n                <Wrapper>\r\n                    <Header>\r\n                        <FontTitle>마이페이지</FontTitle>\r\n                        <FontRegion>\r\n                            <FontText>\r\n                                나의정보\r\n                            </FontText>\r\n                        </FontRegion>\r\n                    </Header>\r\n                    <Main>\r\n                        <WrapDIV>\r\n                            <Ptext>회원이름</Ptext>\r\n                            <Input\r\n                                type=\"text\"\r\n                                {...name}\r\n                                placeholder={data?.name ? data.name : \"없다\"} />\r\n                            <Ptext>회원타입</Ptext>\r\n                            <Input readOnly value=\"관리자\" />\r\n                        </WrapDIV>\r\n                        <WrapDIV>\r\n                            <Ptext>기관</Ptext>\r\n                            <Input \r\n                                type=\"text\"\r\n                                placeholder={data?.organization ? data?.organization : \"없다\"} \r\n                                {...organization}\r\n                            />\r\n                            <Ptext>학번</Ptext>\r\n                            <Input\r\n                                readOnly value=\"없음\"\r\n                            />\r\n                        </WrapDIV>\r\n                        <WrapDIV>\r\n                            <Ptext>메일주소</Ptext>\r\n                            <Input\r\n                                readOnly value={data?.email ? data.email : \"없다\"} />\r\n                        </WrapDIV>\r\n                        <WrapDIV>\r\n                            <Ptext>비밀번호</Ptext>\r\n            \\                <Input type=\"password\" {...password} />\r\n                        </WrapDIV>\r\n                        <WrapBut>\r\n                            <Button1 onClick={onClickUpdate} text=\"수정하기\" size=\"10%\" heightSize=\"62%\" color=\"rgb(0, 116, 201)\" />\r\n                            <Button1 onClick={onClickBut} text=\"탈퇴하기\" size=\"10%\" heightSize=\"62%\" color=\"rgb(255, 119, 119)\" />\r\n                        </WrapBut>\r\n                            <p>회원타입을 수정하려면 고객센터에 문의해주세요.</p>\r\n                    </Main>\r\n                </Wrapper>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AdminMyPage;","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Register\\RegisterMain\\RegisterMain.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminCategoryModule.tsx",["372","373","374"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\_actions\\types.ts",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminCategory\\AdminCategoryCreateModal.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\ContentManageInAdminNaviLeft.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminMemberManage\\AdminMemberManage.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminNaviLeft.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\AdminNaviContentManage\\AdminNaviContentMake.tsx",["375"],"import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Text = styled.span`\r\n    font-size: 19px;\r\n    font-size: bold;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n      backgroundColor: '#f0f0f0',\r\n      '&:hover': {\r\n        backgroundColor: 'yellow'\r\n      }\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function NestedList() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      className={classes.root}\r\n    >\r\n      <ListItem button onClick={handleClick}>\r\n        <ListItemText>\r\n            <Text>콘텐츠만들기</Text>\r\n        </ ListItemText>\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/admin/Edit/mediatool_manage\"><ListItem button className={classes.nested}>\r\n          <ListItemText>영상 마법사</ ListItemText>\r\n          </ListItem></Link>\r\n        </List>\r\n        <List component=\"div\" disablePadding>\r\n          <ListItem button className={classes.nested}>\r\n            <ListItemText primary=\"문장 만들기\" />\r\n          </ListItem>\r\n        </List>\r\n        <List component=\"div\" disablePadding>\r\n          <ListItem button className={classes.nested}>\r\n            <ListItemText primary=\"싱크 맞추기\" />\r\n          </ListItem>\r\n        </List>\r\n        <List component=\"div\" disablePadding>\r\n          <ListItem button className={classes.nested}>\r\n            <ListItemText primary=\"단어 만들기\" />\r\n          </ListItem>\r\n        </List>\r\n        <List component=\"div\" disablePadding>\r\n          <ListItem button className={classes.nested}>\r\n            <ListItemText primary=\"문제 만들기\" />\r\n          </ListItem>\r\n        </List>\r\n      </Collapse>\r\n    </List>\r\n  );\r\n}\r\n","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\AdminNaviContentManage\\AdminNaviOtherThings.tsx",[],["376","377"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\CheckBox\\CheckBoxCustom.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminContentManage\\AdminContentManageMain.tsx",["378","379","380"],"import React,{ useState, useEffect} from 'react'\r\nimport styled from 'styled-components';\r\nimport PublicButton from '../../utils/Button/PublicButton';\r\nimport setting from '../../Images/images/images/setting.png';\r\nimport axios from 'axios';\r\nimport ToggleButton from '../../utils/ToggleMenuBar/ToggleButton';\r\n\r\nconst PTex = styled.div`\r\n    font-size: 1rem;\r\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    letter-spacing: 0.00938em;\r\n`;\r\n\r\nconst InnerDIV = styled.div`\r\n    display: flex;\r\n    width: 93%;\r\n    margin-top: 30px;\r\n    border-bottom: 0.5pt solid rgb(222, 222, 222);\r\n    margin-left: -20px;\r\n    padding-left: 0px;\r\n`;\r\nconst Inner2DIV = styled.div`\r\n    display: flex;\r\n    height: 150px;\r\n`;\r\nconst Inner3DIV = styled.div`\r\n    font-size: 1rem;\r\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    letter-spacing: 0.00938em;\r\n`;\r\nconst IMG = styled.img`\r\n    width:220pt;\r\n    height:100pt;\r\n    object-fit:cover;\r\n`;\r\n\r\nconst Inner4DIV = styled.div`\r\n    margin-left:50px;\r\n    font-size: 1rem;\r\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    letter-spacing: 0.00938em;\r\n`;\r\nconst Inner5DIV = styled.div`\r\n    width: 1000px;\r\n    height: 140px;\r\n    display: flex;\r\n`;\r\nconst Inner6DIV = styled.div`\r\n    width: 300pt;\r\n    margin-top: 5px;\r\n`;\r\nconst InnerTopText = styled.p`\r\n    margin-bottom: -15px;\r\n    margin-top: 0px;\r\n    height: 24px;\r\n    width: 300pt;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    font-size: 16px;\r\n    color: grey;\r\n    font-family: \"Helvetica Neue\";\r\n    text-align: left;\r\n`;\r\n\r\nconst InnerTopBold = styled.p`\r\n    font-weight:600;\r\n`;\r\n\r\nconst InnerTitle = styled.p`\r\n    margin-top: 2px;\r\n    margin-bottom: 0px;\r\n    font-size: 14px;\r\n    color: rgb(112, 112, 112);\r\n    font-family: \"Helvetica Neue\";\r\n    text-align: left;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    width: 32pt;\r\n    height: 18pt;\r\n    border-radius: 3px;\r\n    background-color: rgb(255, 227, 25);\r\n    margin-right: 8px;\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n    border: none;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst SmallTitle = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgb(255, 227, 25);\r\n    border-radius: 5pt;\r\n    border: 0px;\r\n    cursor: pointer;\r\n    height: 16pt;\r\n    width: 16pt;\r\n    outline-style: none;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    font-size: 8pt;\r\n`;\r\n\r\n\r\nconst RegisterP = styled.p`\r\n    margin-top: 2px;\r\n    margin-bottom: 0px;\r\n    font-size: 12px;\r\n    color: rgb(112, 112, 112);\r\n    font-family: \"Helvetica Neue\";\r\n    text-align: left;\r\n`;\r\n\r\nconst CheckDIV = styled.div`\r\n    margin-right: 40pt;\r\n    margin-top: 25pt;\r\n    width: 10%;\r\n`;\r\nconst CheckInner = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-direction: column;\r\n`;\r\nconst PublicText = styled.p`\r\n    margin-top: 5px;\r\n    font-size: 13pt;\r\n    color: grey;\r\n    font-family: \"Helvetica Neue\";\r\n    text-align: left;\r\n`;\r\n\r\nconst UpdateDIV = styled.div`\r\n    margin-left: 30px;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst Img = styled.img``;\r\n\r\nconst PaginationDiv = styled.div`\r\n    display: flex;\r\n    -webkit-box-pack: center;\r\n    justify-content: center;\r\n    padding: 30pt 0pt 100pt;\r\n`;\r\n\r\nconst Nav = styled.nav`\r\n    color: rgb(44, 44, 44);\r\n    display:flex;\r\n`;\r\n\r\nconst UL = styled.ul`\r\n    margin: 0;\r\n    display: flex;\r\n    padding: 0;\r\n    flex-wrap: wrap;\r\n    list-style: none;\r\n    align-items: center;\r\n`;\r\n\r\nconst LI = styled.li`\r\n    margin: 0;\r\n    display: flex;\r\n    padding: 0;\r\n    flex-wrap: wrap;\r\n    list-style: none;\r\n    align-items: center;\r\n`;\r\nconst BUtton1 = styled.button`\r\n    color: rgba(0, 0, 0, 0.87);\r\n    height: 32px;\r\n    margin: 0 3px;\r\n    padding: 0 6px;\r\n    font-size: 0.875rem;\r\n    min-width: 32px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n    font-weight: 400;\r\n    line-height: 1.43;\r\n    border-radius: 16px;\r\n    letter-spacing: 0.01071em;\r\n`;\r\n\r\n\r\ntype Props = {\r\n    CookieValue: number;\r\n    category: Number;\r\n}\r\n\r\ntype PropsBody = {\r\n    contents: number;\r\n    isHidden:boolean\r\n}\r\n\r\nconst AdminContentManageMain = ({category,CookieValue}:Props) => {\r\n    \r\n    const [page, setPage] = useState<number>(1);\r\n    const [Data, setData] = useState<[]>([]);\r\n    const [Total, setTotal] = useState<number>(1);\r\n\r\n\r\n    const Pagination = Math.ceil(Total/10);    \r\n    const arr = Array.from({length:Pagination},(v,i) => i);\r\n\r\n    const PageClick = (pageNum:number) => {\r\n        setPage(pageNum);\r\n    }\r\n\r\n\r\n    async function getData(page:number, CookieValue:number, category:Number) {\r\n        await axios.get(`https://1hour.school/api/v1/contents/list/${category}/${page}`, {\r\n            headers: {\r\n                Authorization: CookieValue\r\n            }\r\n        }).then(response => {\r\n            if(response.data.status === 200) {\r\n                setData(response.data.data.rows);\r\n                setTotal(response.data.data.total);\r\n            } else {\r\n                console.log(\"데이터를 불러오는데 실패했습니다.\")\r\n            }\r\n        });\r\n    }\r\n\r\n    //공개버튼 눌렀을 ㄱ여우\r\n    const PublicButtonChange = (data:any) => {\r\n        console.log(data);\r\n        const hidden = data.hidden;\r\n        let body:PropsBody = {\r\n            contents: data.pk,\r\n            isHidden: !hidden\r\n        }\r\n        axios.post(`https://1hour.school/api/v1/contents/update/shown`,body, {\r\n            headers: {\r\n                Authorization: CookieValue\r\n            }\r\n        }).then(response => {\r\n            if(response.data.status === 200) {\r\n                getData(page,CookieValue,category);\r\n            } else {\r\n                alert(\"메인화면 노출 업데이트 하는데 실패했습니다\");\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getData(page,CookieValue,category);\r\n    },[page,category])\r\n\r\n    return(\r\n        <div>\r\n            <div style={{padding:'24px'}}>\r\n                <PTex>\r\n                    {Data.map((data:any,index:number) => {\r\n                        const suburl = data.url.slice(32,43);\r\n                        return(\r\n                            <InnerDIV key={index}>\r\n                        <Inner2DIV>\r\n                            <Inner3DIV>\r\n                                <IMG src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"logo\" />\r\n                            </Inner3DIV>\r\n                            <Inner4DIV>\r\n                                <Inner5DIV>\r\n                                    <Inner6DIV>\r\n                                        <InnerTopText>{data.category}</InnerTopText>\r\n                                        <InnerTopBold>{data.title}</InnerTopBold>\r\n                                        <InnerTitle>{data.youtubeTitle.slice(0,32)}...</InnerTitle>\r\n                                        <Button>\r\n                                            <SmallTitle>\r\n                                                <Label>\r\n                                                    단어\r\n                                                </Label>\r\n                                            </SmallTitle>\r\n                                        </Button>\r\n                                        <Button>\r\n                                            <SmallTitle>\r\n                                                <Label>\r\n                                                    문장\r\n                                                </Label>\r\n                                            </SmallTitle>\r\n                                        </Button>\r\n                                        <Button>\r\n                                            <SmallTitle>\r\n                                                <Label>\r\n                                                    더빙\r\n                                                </Label>\r\n                                            </SmallTitle>\r\n                                        </Button>\r\n                                        <Button>\r\n                                            <SmallTitle>\r\n                                                <Label>\r\n                                                    문제\r\n                                                </Label>\r\n                                            </SmallTitle>\r\n                                        </Button>\r\n                                        <RegisterP>\r\n                                            {data.registered}\r\n                                        </RegisterP>\r\n                                    </Inner6DIV>\r\n                                    <CheckDIV>\r\n                                        <CheckInner>\r\n                                            <PublicButton state={data.hidden} PublicButtonChange={() => PublicButtonChange(data)} />\r\n                                            <PublicText>{data.hidden ? \"비공개\" : \"공개\"}</PublicText>\r\n                                        </CheckInner>\r\n                                    </CheckDIV>\r\n                                    <UpdateDIV>\r\n                                        <ToggleButton />\r\n                                    </UpdateDIV>\r\n                                </Inner5DIV>\r\n                            </Inner4DIV>\r\n                        </Inner2DIV>\r\n                    </InnerDIV>\r\n                        );\r\n                    })}\r\n                </PTex>\r\n            </div>\r\n                <PaginationDiv>\r\n                    <Nav>\r\n                    {arr.map((arr,index) => {\r\n                        const pageNum = arr+1;\r\n                        return(\r\n                            <UL key={index}>\r\n                                <LI>\r\n                                    <BUtton1 onClick={() => PageClick(pageNum)}>\r\n                                        {arr+1}\r\n                                    </BUtton1>\r\n                                </LI>\r\n                            </UL>\r\n                        )\r\n                    })}\r\n                    </Nav>\r\n                </PaginationDiv>\r\n        </div>\r\n                \r\n\r\n    );\r\n}\r\n\r\nexport default AdminContentManageMain\r\n","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminContentManage\\AdminContentManage.tsx",[],["381","382"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminContentManage\\HeaderAdminContentManage.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\ToggleMenuBar\\ToggleButton.tsx",[],["383","384"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\MyPage\\MyPage.tsx",["385","386"],"import React,{ useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport Navigation from '../../components/Navigation';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../_reducers';\r\nimport { MyInfo } from '../../_actions/user_action';\r\nimport Button1 from '../../utils/Button1';\r\nimport useInput from '../../hooks/useInput';\r\nconst Container = styled.section`\r\n    min-height: 75vh;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    width: 70%;\r\n    height: 100%;\r\n    margin-top: 7%;\r\n    align-self: center;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    height: 15%;\r\n`;\r\n\r\nconst FontTitle = styled.div`\r\n    height: 50%;\r\n    font-weight: 600;\r\n    font-size: 26pt;\r\n`;\r\n\r\nconst FontRegion = styled.div`\r\n    height: 50%;\r\n    border-bottom: 1px solid black;\r\n    display: flex;\r\n    padding: 1rem;\r\n`;\r\n\r\nconst FontText = styled.span`\r\n    font-weight: 500;\r\n    font-size: 22pt;\r\n    text-align: left;\r\n    margin-left: 10px;\r\n    cursor: pointer;\r\n    border-bottom: 7px solid yellow;\r\n`;\r\n\r\nconst Main = styled.div`\r\n    display: flex;\r\n    flex-direction:column;\r\n    height: 700px;\r\n    padding: 30px;\r\n`;\r\n\r\nconst WrapDIV = styled.div`\r\n    display:flex;\r\n    height: 10%;\r\n    width:100%;\r\n    margin: 22px auto;\r\n`;\r\nconst WrapBut = styled.div`\r\n    display:flex;\r\n    height: 10%;\r\n    width:100%;\r\n    margin: 15px auto;\r\n    justify-content: space-between;\r\n`;\r\n\r\n\r\nconst Ptext  = styled.p`\r\n    margin: auto 2rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    margin-left: 20px;\r\n    margin-top: 5px;\r\n    background: 0% 0% no-repeat padding-box padding-box rgb(244, 244, 244);\r\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px;\r\n    border: 0px;\r\n    border-radius: 12px;\r\n    width: 400pt;\r\n    height: 36pt;\r\n    padding-left: 11pt;\r\n`;\r\n\r\n\r\nconst MyPage = (props:any) => {\r\n\r\n    console.log(props,\"MyPageProps\");\r\n    console.log(props.cookieValue[1]);\r\n    const data = useSelector((state:RootState) => state.user.myInfo?.data);\r\n    const dispatch = useDispatch();\r\n\r\n    console.log(data);\r\n\r\n    const organization = useInput(\"\");\r\n    const password = useInput(\"\");\r\n    const name = useInput(\"\");\r\n\r\n    const cookieValue = document.cookie.split(\"=\");\r\n    const email = localStorage.getItem(\"userEmail\");\r\n\r\n    useEffect(() => {\r\n        dispatch(MyInfo(cookieValue[1],email));\r\n    },[])\r\n\r\n    const onClickBut = () => {\r\n        console.log(\"클릭함\");\r\n    }\r\n\r\n    const onClickUpdate = () => {\r\n        console.log(\"클릭함\");\r\n        if( !name.value || !organization.value || !password.value ) {\r\n            alert(\"모두다 입력하세요\");\r\n        }\r\n        let body = {\r\n            pk:email,\r\n            name:name.value,\r\n            authority:props.authority,\r\n            email,\r\n            organization: organization.value,\r\n            password: password.value\r\n        }\r\n        axios.post(`https://1hour.school/api/v1/members/update`, body, {\r\n            headers: {\r\n                Authorization: cookieValue[1]\r\n            }\r\n        }).then(response => {console.log(response.data)});\r\n        console.log(body,\"body\");\r\n    }\r\n    return(\r\n        <>\r\n            <Navigation />\r\n            <Container>\r\n                <Wrapper>\r\n                    <Header>\r\n                        <FontTitle>마이페이지</FontTitle>\r\n                        <FontRegion>\r\n                            <FontText>\r\n                                나의정보\r\n                            </FontText>\r\n                        </FontRegion>\r\n                    </Header>\r\n                    <Main>\r\n                        <WrapDIV>\r\n                            <Ptext>회원이름</Ptext>\r\n                            <Input\r\n                                type=\"text\"\r\n                                {...name}\r\n                                placeholder={data?.name ? data.name : \"없다\"} />\r\n                            <Ptext>회원타입</Ptext>\r\n                            <Input readOnly value=\"선생님\" />\r\n                        </WrapDIV>\r\n                        <WrapDIV>\r\n                            <Ptext>기관</Ptext>\r\n                            <Input \r\n                                type=\"text\"\r\n                                placeholder={data?.organization ? data?.organization : \"없다\"} \r\n                                {...organization}\r\n                            />\r\n                            <Ptext>학번</Ptext>\r\n                            <Input\r\n                                readOnly value=\"없음\"\r\n                            />\r\n                        </WrapDIV>\r\n                        <WrapDIV>\r\n                            <Ptext>메일주소</Ptext>\r\n                            <Input\r\n                                readOnly value={data?.email ? data.email : \"없다\"} />\r\n                        </WrapDIV>\r\n                        <WrapDIV>\r\n                            <Ptext>비밀번호</Ptext>\r\n                            <Input type=\"password\" {...password} />\r\n                        </WrapDIV>\r\n                        <WrapBut>\r\n                            <Button1 onClick={onClickUpdate} text=\"수정하기\" size=\"10%\" heightSize=\"62%\" color=\"rgb(0, 116, 201)\" />\r\n                            <Button1 onClick={onClickBut} text=\"탈퇴하기\" size=\"10%\" heightSize=\"62%\" color=\"rgb(255, 119, 119)\" />\r\n                        </WrapBut>\r\n                            <p>회원타입을 수정하려면 고객센터에 문의해주세요.</p>\r\n                    </Main>\r\n                </Wrapper>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MyPage;","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\components\\NavigationStudent.tsx",["387"],"import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport header from '../Images/images/images/headerLogo.png';\r\n\r\nconst Container = styled.div`\r\n    height: 60px;\r\n    display: flex;\r\n    width:100%;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid black;\r\n`;\r\n\r\nconst Section = styled.div`\r\n    display:flex;\r\n    align-items: center;\r\n    width:33%;\r\n    height:100%;\r\n    justify-content:center;\r\n`;\r\n\r\nconst Img = styled.img`\r\n    width:40px;\r\n    margin-left:15px;\r\n    position: relative;\r\n    top: 0;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst HeadList = styled.div`\r\n    white-space:nowrap;\r\n    display:flex;\r\n    justify-content: space-evenly;\r\n`;\r\nconst HeadListText = styled.p`\r\n    font-size: 10px;\r\n    margin: 10px;\r\n`;\r\n\r\nconst Modal = styled.div`\r\n    position: relative;\r\n    top: 62px;\r\n    right: 60px;\r\n`;\r\n\r\nconst NavigationStudent = (props:any) => {\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const organizationName = localStorage.getItem(\"organizationName\");\r\n    const ShowModal = () => {\r\n        console.log(showModal)\r\n        setShowModal(!showModal);\r\n    }\r\n\r\n    const Logout = () => {\r\n        console.log(\"로그아웃\");\r\n        document.cookie = \"usertoken\" + '=; expires=Thu, 01 Jan 1999 00:00:10 GMT;'; // 과거의 만료일로 되돌리는 것임\r\n        localStorage.clear();\r\n        props.history.push(\"\");\r\n    }\r\n    return(\r\n        <Container>\r\n            <Section> \r\n                <Link to=\"/student/MainDashBoard\">\r\n                    <Img src={header} alt=\"Logo\" width=\"40px\" /> &nbsp; | &nbsp;\r\n                </Link>\r\n                <div>\r\n                    <Link to=\"/student/MainDashBoard\">\r\n                        <HeadListText>{organizationName}</HeadListText>\r\n                    </Link>\r\n                </div>\r\n            </Section>\r\n            <Section>\r\n                <HeadList>\r\n                    <HeadListText><Link to=\"/student/MainDashBoard\">수업보기</Link></HeadListText>\r\n                </HeadList>\r\n                <HeadList>\r\n                    <HeadListText><Link to=\"/student/MyReport\">나의리포트</Link></HeadListText>\r\n                </HeadList>\r\n            </Section>\r\n            <Section>\r\n                <Img onClick={() => ShowModal()} src=\"../userShadow.png\" alt=\"Logo\" width=\"40px\" />\r\n                    {!showModal \r\n                        ? null \r\n                    : \r\n                        <Modal>\r\n                            <Link to=\"/student/StudentMyPage\">\r\n                                <p>마이페이지</p>\r\n                            </Link>\r\n                            <p style={{\r\n                                cursor: 'pointer',\r\n                                fontSize: '1em'\r\n                            }} onClick={Logout}>로그아웃</p>\r\n                        </Modal>\r\n                    }\r\n            </Section>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default withRouter(NavigationStudent);","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminPlayListCreateModal.tsx",[],["388","389"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\LandingPage.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Register\\RegisterUserInfo\\RegisterUserInfoPage.tsx",["390"],"import React,{useState} from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport useInput from '../../../hooks/useInput';\r\nimport Button1 from '../../../utils/Button1';\r\nimport Input1 from '../../../utils/Input/Input';\r\nimport { Container, Wrapper } from './RegisterUserInfoStyle';\r\nimport { InputLabel } from '../../Login/LoginStyle';\r\nimport {RegisterUserInfo} from '../../../types/index';\r\n\r\nconst Span = styled.span`\r\n    white-space:nowrap;\r\n    position: absolute;\r\n    top:10px;\r\n`;\r\n\r\nconst RegisterUserInfoPage = (props:any) => {\r\n\r\n    // const data = useSelector((state:RootState) => state.user);\r\n    // const dispatch = useDispatch();\r\n   \r\n    const {Userdata} = props;\r\n    console.log(Userdata,\"하하\");\r\n    const email = useInput(\"\");\r\n    const password = useInput(\"\");\r\n    const passwordConfirm = useInput(\"\");\r\n\r\n    const [members, setMembers] = useState<RegisterUserInfo[]>([]);\r\n\r\n    console.log(members,\"body\");\r\n    const onRegisterTeacher = (e:any) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            name: Userdata[0].name,\r\n            authority: 1,\r\n            organization: Userdata[0].organization,\r\n            email: email.value,\r\n            password: password.value,\r\n            // classroom: null,\r\n            // grade: null,\r\n            // tag: null\r\n        }\r\n        console.log(body,\"직전body\");\r\n        axios.post(`https://1hour.school/user/register`, body)\r\n            .then(response => {\r\n                if(response.data.status === 200) {\r\n                    alert(\"회원가입완료\")\r\n                } else {\r\n                    console.log(response.data);\r\n                }\r\n            });\r\n        // props.history.push(\"/login\");\r\n    }\r\n\r\n    const onRegisterStudent = (e:any) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            name: Userdata[0].name,\r\n            authority: 2,\r\n            organization:Userdata[0].organization,\r\n            email:email.value,\r\n            password:password.value,\r\n            classroom: Userdata[0].classroom,\r\n            grade:Userdata[0].grade,\r\n            tag:Userdata[0].tag\r\n        }\r\n\r\n        // dispatch(register(body));\r\n\r\n        axios.post(`https://1hour.school/user/register`, body)\r\n            .then(response => {\r\n                if(response.data.status === 200) {\r\n                    alert(\"회원가입성공\");\r\n                    return response.data;\r\n                } else {\r\n                    alert(\"회원가입실패\");\r\n                }\r\n            });\r\n        // props.history.push(\"/login\");\r\n    }\r\n\r\n    if(Userdata[0].authority === 2) {\r\n        console.log(\"2\");\r\n        return(\r\n            <>\r\n                <Container>\r\n                    <Wrapper>\r\n                        <Span>가입하기-학생 정보</Span>\r\n                        <form onSubmit={onRegisterStudent}>\r\n                            <InputLabel>이메일 주소*</InputLabel>\r\n                            <Input1\r\n                                type=\"email\"\r\n                                {...email}\r\n                            />\r\n                            <InputLabel>비밀번호*</InputLabel>\r\n                            <Input1\r\n                                type=\"password\"\r\n                                {...password}\r\n                            />\r\n                            <InputLabel>비밀번호 확인*</InputLabel>\r\n                            <Input1\r\n                                type=\"password\"\r\n                                {...passwordConfirm}\r\n                            />\r\n                            <Button1 text=\"가입\" onClick={onRegisterStudent} size=\"38px\"/>\r\n                        </form>\r\n                    </Wrapper>\r\n                </Container>\r\n            </>\r\n        );\r\n    } else if(Userdata[0].authority === 1) {\r\n        console.log(\"1\");\r\n        return(\r\n            <>\r\n                <Container>\r\n                    <Wrapper>\r\n                        <Span>가입하기-선생님 정보</Span>\r\n                        <form>\r\n                            <InputLabel>이메일 주소*</InputLabel>\r\n                            <Input1\r\n                                type=\"email\"\r\n                                {...email}\r\n                            />\r\n                            <InputLabel>비밀번호*</InputLabel>\r\n                            <Input1\r\n                                type=\"password\"\r\n                                {...password}\r\n                            />\r\n                            <InputLabel>비밀번호 확인*</InputLabel>\r\n                            <Input1\r\n                                type=\"password\"\r\n                                {...passwordConfirm}\r\n                            />\r\n                            <Button1 text=\"가입\" onClick={onRegisterTeacher} size=\"38px\"/>\r\n                        </form>\r\n                    </Wrapper>\r\n                </Container>\r\n            </>\r\n        );\r\n    } else {\r\n        return <div>해당페이지는 없는페이지입니다.</div>\r\n    }\r\n    \r\n}\r\n\r\nexport default RegisterUserInfoPage;","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\teacher\\DashBoard\\Banner.tsx",["391"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminHomeworkManage\\AdminHomeworkManageMain.tsx",["392"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Category\\CategoryModule.tsx",["393","394"],"import React,{useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../_reducers';\r\nimport { categoryData, SearchByCategory } from '../../_actions/user_action';\r\n\r\nconst CategoryHead = styled.select`\r\n    width: 10%;\r\n    height: 50%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    font-weight: bold;\r\n    font-size: 15px;\r\n    font-family: \"Helvetica Neue\";\r\n    margin-left: 5px;\r\n    margin-right: 1em;\r\n    cursor: pointer;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst Text = styled.option`\r\n    font-size:1em;\r\n`;\r\n\r\n\r\n\r\nconst CategoryModule = (props:any) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const data = useSelector((state:RootState) => state?.user?.category?.data);\r\n    const cookieValue = document.cookie.split('=');\r\n\r\n    useEffect(() => {\r\n        dispatch(categoryData(cookieValue[1]));\r\n    },[])\r\n\r\n\r\n    const [pk,setcategorypk] = useState(\"\");\r\n    const [categoryname, setcategoryName] = useState(\"\");\r\n\r\n    const selected = 0;\r\n    \r\n    \r\n\r\n    const onClickSomething = (e:any) => {\r\n        setcategorypk(e.target.value);\r\n        setcategoryName(data[e.target.value-1].name);\r\n        const pknum = e.target.value; //pk\r\n        const categoryname = data[e.target.value-1].name;\r\n        dispatch(SearchByCategory(cookieValue[1],selected,pknum));\r\n        props.history.push(`/CourseMoreViewPage?categoriespk=${pknum}&categoriesname=${categoryname}&keyword=&type=CATEGORY`);\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <CategoryHead onChange={onClickSomething} value={pk}> \r\n                <Text>카테고리</Text>\r\n                {data && data.map((item:any, index:any) => {\r\n                    return(\r\n                        <Text value={item.category} key={index}>{item.name}</Text>\r\n                    );\r\n                })}\r\n            </CategoryHead>    \r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(CategoryModule);","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\teacher\\DashBoard\\CourseManage.tsx",["395","396"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\index.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminHomeworkManage\\AdminHomeworkManage.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminOrganizationManage\\AdminOrganizationMainManage.tsx",["397","398"],"import React,{ useEffect, useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport pencil from '../../Images/images/images/IconMaterialEdit.png';\r\nimport Button1 from '../../utils/Button1';\r\nconst SearchSection = styled.div`\r\n    margin-Top: 10px;\r\n    display: flex;\r\n    position: relative;\r\n    height: 50px;\r\n`;\r\nconst InputAlign = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n`;\r\n\r\nconst Table = styled.table`\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    color: rgb(44, 44, 44);\r\n    font: 13px / 15px \"Helvetica Neue\";\r\n`;\r\n\r\nconst Thead = styled.thead `\r\n    font: bold 14px / 17px \"Helvetica Neue\";\r\n    box-sizing: border-box;\r\n    outline: none;\r\n`;\r\n\r\nconst Tbody = styled.tbody`\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    color: rgb(44, 44, 44);\r\n    font: 13px / 15px \"Helvetica Neue\";\r\n`;\r\n\r\ntype Props = {\r\n    type: Number;\r\n    CookieValue: Number;\r\n}\r\n\r\n\r\nconst AdminOrganizationMainManage:React.FC<Props> = ({type,CookieValue}) => {\r\n\r\n    console.log(type,\"이거\");\r\n    console.log(CookieValue);\r\n\r\n    const [page, setPage] = useState<Number>(1);\r\n    const [OrganizationData, setOrganizationData] = useState([]);\r\n    const [searchValue, setValue] = useState<string>(\"\");\r\n    \r\n    const searchChange = (e:any) => {\r\n        console.log(e.target.value);\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    \r\n\r\n\r\n    async function getData(search?:string) {\r\n        if(search) {\r\n            await axios.get(`https://1hour.school/api/v1/organization/list/${type}/${page}/query?keyword=${search}`, {\r\n            headers: {\r\n                        Authorization: CookieValue\r\n                    }\r\n        }).then(response => {\r\n            if(response.data.status === 200) {\r\n                console.log(response.data);\r\n                setOrganizationData(response.data.data.rows);\r\n            } else {\r\n                alert(\"데이터 불러오기에 실패\");\r\n            }\r\n        });\r\n        } else {\r\n            await axios.get(`https://1hour.school/api/v1/organization/list/${type}/${page}/query?keyword=`, {\r\n            headers: {\r\n                        Authorization: CookieValue\r\n                    }\r\n        }).then(response => {\r\n            if(response.data.status === 200) {\r\n                console.log(response.data);\r\n                setOrganizationData(response.data.data.rows);\r\n            } else {\r\n                alert(\"데이터 불러오기에 실패\");\r\n            }\r\n        });\r\n        }\r\n    }\r\n    \r\n    const onSubmit = (e:any) => {\r\n        getData(searchValue)\r\n    }\r\n\r\n     useEffect(() => {\r\n         getData();\r\n     },[type])\r\n\r\n    return(\r\n        <>\r\n            <SearchSection>\r\n                <InputAlign>\r\n                    <input style={{marginRight:\"10px\"}} type=\"text\" placeholder=\"검색어를 입력하세요\" value={searchValue} onChange={searchChange}  />\r\n                    <Button1 size=\"30pt\" heightSize=\"20pt\" onClick={onSubmit} text=\"검색\" color=\"#707070\"  />\r\n                </InputAlign>\r\n            </SearchSection>\r\n            \r\n                <div>\r\n                    <Table>\r\n                        <Thead>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>기관이름</td>\r\n                                <td>타입</td>\r\n                                <td>지역</td>\r\n                                <td>등록 인원 (교사)</td>\r\n                                <td>등록일</td>\r\n                            </tr>\r\n                        </Thead>\r\n                        <Tbody>\r\n                        {OrganizationData ? \r\n                            OrganizationData.map((member:any,index:any) => {\r\n                            console.log(member.authority);\r\n                            if( member.type === 0) {\r\n                                member.type = \"관리자\";\r\n                            } else if( member.type === 1) {\r\n                                member.type = \"선생님\";\r\n                            } else if( member.type === 2) {\r\n                                member.type = \"학생\";\r\n                            }\r\n                            return(\r\n                                    <tr key={index}>\r\n                                        <td>#</td>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{member.name}</td>\r\n                                        <td>{member.type}</td>\r\n                                        <td>{member.region}</td>\r\n                                        <td>{member.users}/({member.teachers})</td>\r\n                                        <td>{member.created}</td>\r\n                                        <td style={{cursor:'pointer'}}><img src={pencil} alt=\"logo\" width=\"11px\" height=\"11px\" /></td>\r\n                                    </tr>\r\n                            );\r\n                        })\r\n                         : \r\n                            <div>로딩중</div>\r\n                        }\r\n                        </Tbody>\r\n                    </Table>\r\n                </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AdminOrganizationMainManage;\r\n","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminHomeworkManage\\AdminHomeworkManageMainComponent\\AdminHomeworkDeadline.tsx",["399"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nconst PTex = styled.div`\r\n    font-size: 1rem;\r\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    letter-spacing: 0.00938em;\r\n`;\r\n\r\nconst InnerDIV = styled.div`\r\n    display: flex;\r\n    width: 93%;\r\n    margin-top: 30px;\r\n    border-bottom: 0.5pt solid rgb(222, 222, 222);\r\n    margin-left: -20px;\r\n    padding-left: 0px;\r\n`;\r\nconst Inner2DIV = styled.div`\r\n    display: flex;\r\n    height: 150px;\r\n`;\r\nconst Inner3DIV = styled.div`\r\n    font-size: 1rem;\r\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    letter-spacing: 0.00938em;\r\n`;\r\nconst IMG = styled.img`\r\n    width:220pt;\r\n    height:100pt;\r\n    object-fit:cover;\r\n`;\r\n\r\nconst Inner4DIV = styled.div`\r\n    margin-left:50px;\r\n    font-size: 1rem;\r\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    letter-spacing: 0.00938em;\r\n`;\r\nconst Inner5DIV = styled.div`\r\n    width: 1000px;\r\n    height: 140px;\r\n    display: flex;\r\n`;\r\nconst Inner6DIV = styled.div`\r\n    width: 300pt;\r\n    margin-top: 5px;\r\n`;\r\nconst InnerTopText = styled.p`\r\n    margin-bottom: -15px;\r\n    margin-top: 0px;\r\n    height: 24px;\r\n    width: 300pt;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    font-size: 16px;\r\n    color: grey;\r\n    font-family: \"Helvetica Neue\";\r\n    text-align: left;\r\n`;\r\n\r\nconst InnerTopBold = styled.p`\r\n    font-weight:600;\r\n`;\r\n\r\nconst InnerTitle = styled.p`\r\n    margin-top: 2px;\r\n    margin-bottom: 0px;\r\n    font-size: 14px;\r\n    color: rgb(112, 112, 112);\r\n    font-family: \"Helvetica Neue\";\r\n    text-align: left;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    width: 32pt;\r\n    height: 18pt;\r\n    border-radius: 3px;\r\n    background-color: rgb(255, 227, 25);\r\n    margin-right: 8px;\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n    border: none;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst SmallTitle = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgb(255, 227, 25);\r\n    border-radius: 5pt;\r\n    border: 0px;\r\n    cursor: pointer;\r\n    height: 16pt;\r\n    width: 16pt;\r\n    outline-style: none;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    font-size: 8pt;\r\n`;\r\n\r\n\r\nconst RegisterP = styled.p`\r\n    margin-top: 2px;\r\n    margin-bottom: 0px;\r\n    font-size: 12px;\r\n    color: rgb(112, 112, 112);\r\n    font-family: \"Helvetica Neue\";\r\n    text-align: left;\r\n`;\r\n\r\nconst PaginationDiv = styled.div`\r\n    display: flex;\r\n    -webkit-box-pack: center;\r\n    justify-content: center;\r\n    padding: 30pt 0pt 100pt;\r\n`;\r\n\r\nconst Nav = styled.nav`\r\n    color: rgb(44, 44, 44);\r\n    display:flex;\r\n`;\r\n\r\nconst UL = styled.ul`\r\n    margin: 0;\r\n    display: flex;\r\n    padding: 0;\r\n    flex-wrap: wrap;\r\n    list-style: none;\r\n    align-items: center;\r\n`;\r\n\r\nconst LI = styled.li`\r\n    margin: 0;\r\n    display: flex;\r\n    padding: 0;\r\n    flex-wrap: wrap;\r\n    list-style: none;\r\n    align-items: center;\r\n`;\r\nconst BUtton1 = styled.button`\r\n    color: rgba(0, 0, 0, 0.87);\r\n    height: 32px;\r\n    margin: 0 3px;\r\n    padding: 0 6px;\r\n    font-size: 0.875rem;\r\n    min-width: 32px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n    font-weight: 400;\r\n    line-height: 1.43;\r\n    border-radius: 16px;\r\n    letter-spacing: 0.01071em;\r\n`;\r\n\r\nconst TeacherDiv = styled.div`\r\n        display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst SPAN = styled.span`\r\n        text-align: center;\r\n    color: rgb(112, 112, 112);\r\n    font-size: 13px;\r\n    font-family: \"Helvetica Neue\", Regular;\r\n`;\r\n\r\ntype Props = {\r\n    CookieValue: number;\r\n    closed: boolean;\r\n}\r\n\r\n\r\nconst AdminHomeworkDeadline = ({closed, CookieValue}:Props) => {\r\n\r\n    const [page, setPage] = useState<number>(1);\r\n    const [DeadlineData, setDeadlineData] = useState<[]>([]);\r\n    const [Total, setTotal] = useState<number>(1);\r\n\r\n    console.log(DeadlineData,\"dadadas확인중\");\r\n\r\n    const Pagination = Math.ceil(Total/10);    \r\n    const arr = Array.from({length:Pagination},(v,i) => i);\r\n\r\n    const PageClick = (pageNum:number) => {\r\n        setPage(pageNum);\r\n    }\r\n\r\n\r\n    async function getData(page:number, CookieValue:number, closed:boolean) {\r\n        await axios.get(`https://1hour.school/api/v1/assignment/list/${closed}/${page}`, {\r\n            headers: {\r\n                Authorization: CookieValue\r\n            }\r\n        }).then(response => {\r\n            console.log(response.data,\"dd\");\r\n            if(response.data.status === 200) {\r\n                console.log(response.data,\"d\");\r\n                setDeadlineData(response.data.data.rows);\r\n                setTotal(response.data.data.total);\r\n            } else {\r\n                console.log(\"데이터를 불러오는데 실패했습니다.\")\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getData(page,CookieValue,closed);\r\n    },[page,closed])\r\n\r\n    return(\r\n        <div>\r\n            <div style={{padding:'24px'}}>\r\n                <PTex>\r\n                    {DeadlineData.map((data:any,index:number) => {\r\n                        const suburl = data.url.slice(32,43);\r\n                        return(\r\n                            <InnerDIV key={index}>\r\n                        <Inner2DIV>\r\n                            <Inner3DIV>\r\n                                <IMG src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"logo\" />\r\n                            </Inner3DIV>\r\n                            <Inner4DIV>\r\n                                <Inner5DIV>\r\n                                    <Inner6DIV>\r\n                                        <InnerTopText>{data.category}</InnerTopText>\r\n                                        <InnerTopBold>{data.title}</InnerTopBold>\r\n                                        <InnerTitle>{data.youtubeTitle.slice(0,32)}...</InnerTitle>\r\n                                        <Button>\r\n                                            <SmallTitle>\r\n                                                <Label>\r\n                                                    단어\r\n                                                </Label>\r\n                                            </SmallTitle>\r\n                                        </Button>\r\n                                        <Button>\r\n                                            <SmallTitle>\r\n                                                <Label>\r\n                                                    문장\r\n                                                </Label>\r\n                                            </SmallTitle>\r\n                                        </Button>\r\n                                        <Button>\r\n                                            <SmallTitle>\r\n                                                <Label>\r\n                                                    더빙\r\n                                                </Label>\r\n                                            </SmallTitle>\r\n                                        </Button>\r\n                                        <Button>\r\n                                            <SmallTitle>\r\n                                                <Label>\r\n                                                    문제\r\n                                                </Label>\r\n                                            </SmallTitle>\r\n                                        </Button>\r\n                                        <RegisterP>\r\n                                            {data.registered}\r\n                                        </RegisterP>\r\n                                    </Inner6DIV>\r\n                                    <TeacherDiv>\r\n                                        <SPAN>{data.organization}<br />{data.registerer}센세</SPAN>\r\n                                    </TeacherDiv>\r\n                                </Inner5DIV>\r\n                            </Inner4DIV>\r\n                        </Inner2DIV>\r\n                    </InnerDIV>\r\n                        );\r\n                    })}\r\n                </PTex>\r\n            </div>\r\n                <PaginationDiv>\r\n                    <Nav>\r\n                    {arr.map((arr,index) => {\r\n                        const pageNum = arr+1;\r\n                        return(\r\n                            <UL key={index}>\r\n                                <LI>\r\n                                    <BUtton1 onClick={() => PageClick(pageNum)}>\r\n                                        {arr+1}\r\n                                    </BUtton1>\r\n                                </LI>\r\n                            </UL>\r\n                        )\r\n                    })}\r\n                    </Nav>\r\n                </PaginationDiv>\r\n        </div>\r\n                \r\n    );\r\n}\r\n\r\nexport default AdminHomeworkDeadline;","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminHomeworkManage\\HeaderAdminHomeworkManage.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\student\\StudentMyPage.tsx",["400","401"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\_reducers\\user_reducer.tsx",["402"],"import { \r\n    LOGIN_USER, \r\n    REGISTER_USER, \r\n    SEARCH_DATA, \r\n    CATEGORY_DATA, \r\n    SEARCHBYCATEGORY_DATA, \r\n    DEADLINEINFO_DATA,\r\n    MYINFO_DATA,\r\n    DASHBOARD_DATA\r\n} from \"../_actions/types\";\r\nimport { \r\n    login, \r\n    SearchData, \r\n    register, \r\n    categoryData,\r\n    SearchByCategory,\r\n    deadlineInfo,\r\n    MyInfo,\r\n    DashBoardData\r\n} from \"../_actions/user_action\";\r\n\r\ntype CounterAction =   \r\n    | ReturnType<typeof login>\r\n    | ReturnType<typeof register>\r\n    | ReturnType<typeof categoryData>\r\n    | ReturnType<typeof SearchData>\r\n    | ReturnType<typeof SearchByCategory>\r\n    | ReturnType<typeof deadlineInfo>\r\n    | ReturnType<typeof MyInfo>\r\n    | ReturnType<typeof DashBoardData>;\r\n    \r\n\r\nconst initailState: any = {}\r\n\r\nexport default function( \r\n    state: any = initailState, \r\n    action: CounterAction) {\r\n        switch(action.type) {\r\n            case LOGIN_USER:\r\n                return { ...state, login: action.payload}\r\n            case REGISTER_USER:\r\n                return {...state, data: action.payload}\r\n            case SEARCH_DATA:\r\n                return {...state, data: action.payload}\r\n            case CATEGORY_DATA:\r\n                return {...state, category: action.payload}\r\n            case SEARCHBYCATEGORY_DATA:\r\n                return {...state, searchCategory: action.payload}\r\n            case DEADLINEINFO_DATA:\r\n                return {...state, deadlineInfo: action.payload}\r\n            case MYINFO_DATA:\r\n                return {...state, myInfo: action.payload}\r\n            case DASHBOARD_DATA:\r\n                return {...state, myList: action.payload}\r\n            default:\r\n                return state;\r\n            }\r\n        }\r\n            \r\n            // case DASHBOARD_DATA:\r\n            //     return {...state, data: action.payload}","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\components\\NavigationAdmin.tsx",["403"],"import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport header from '../Images/images/images/headerLogo.png';\r\n\r\n\r\nconst Container = styled.div`\r\n    height: 60px;\r\n    display: flex;\r\n    width:100%;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid black;\r\n`;\r\n\r\nconst Section = styled.div`\r\n    display:flex;\r\n    align-items: center;\r\n    width:33%;\r\n    height:100%;\r\n    justify-content:center;\r\n`;\r\n\r\nconst Img = styled.img`\r\n    width:40px;\r\n    margin-left:15px;\r\n    position: relative;\r\n    top: 0;\r\n    cursor: pointer;\r\n`;\r\n\r\n\r\nconst HeadList = styled.div`\r\n    white-space:nowrap;\r\n    display:flex;\r\n    justify-content: space-evenly;\r\n`;\r\nconst HeadListText = styled.p`\r\n    font-size: 10px;\r\n    margin: 10px;\r\n`;\r\n\r\nconst Modal = styled.div`\r\n    position: relative;\r\n    top: 62px;\r\n    right: 60px;\r\n`;\r\nconst NavigationAdmin = (props:any) => {\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const organizationName = localStorage.getItem(\"organizationName\");\r\n    const ShowModal = () => {\r\n        console.log(showModal)\r\n        setShowModal(!showModal);\r\n    }\r\n\r\n    const Logout = () => {\r\n        console.log(\"로그아웃\");\r\n        document.cookie = \"usertoken\" + '=; expires=Thu, 01 Jan 1999 00:00:10 GMT;'; // 과거의 만료일로 되돌리는 것임\r\n        localStorage.clear();\r\n        props.history.push(\"\");\r\n    }\r\n    return(\r\n        <Container>\r\n            <Section> \r\n                <Link to=\"/admin/AdminMainPage\">\r\n                    <Img src={header} alt=\"Logo\" width=\"40px\" /> &nbsp; | &nbsp;\r\n                </Link>\r\n                <div>\r\n                    <Link to=\"/admin/AdminMainPage\">\r\n                        <HeadListText>{organizationName}</HeadListText>\r\n                    </Link>\r\n                </div>\r\n            </Section>\r\n            <Section>\r\n                <HeadList>\r\n                    <HeadListText><Link to=\"/dashboard\">수업보기</Link></HeadListText>\r\n                </HeadList>\r\n                <HeadList>\r\n                    <HeadListText><Link to=\"/admin/dashboard/showCourse\">수업제작</Link></HeadListText>\r\n                </HeadList>\r\n                <HeadList>\r\n                    <HeadListText><Link to=\"/course_manage\">수업관리</Link></HeadListText>\r\n                </HeadList>\r\n                <HeadList>\r\n                    <HeadListText><Link to=\"/admin/dashboard/showCourse\">학생관리</Link></HeadListText>\r\n                </HeadList>\r\n            </Section>\r\n            <Section>\r\n                <HeadList>\r\n                    <HeadListText>\r\n                        <Link to=\"/admin/AdminMode\">관리자 모드</Link>\r\n                    </HeadListText>\r\n                </HeadList>\r\n                <Img onClick={() => ShowModal()} src=\"../userShadow.png\" alt=\"Logo\" width=\"40px\" />\r\n                    {!showModal \r\n                        ? null \r\n                    : \r\n                        <Modal>\r\n                            <Link to=\"/admin/AdminMyPage\">\r\n                                <p>마이페이지</p>\r\n                            </Link>\r\n                            <p style={{\r\n                                cursor: 'pointer',\r\n                                fontSize: '1em'\r\n                            }} onClick={Logout}>로그아웃</p>\r\n                        </Modal>\r\n                    }\r\n            </Section>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default withRouter(NavigationAdmin);","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminBanner\\AdminBannerManage.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Register\\RegisterUserInfo\\RegisterUserInfoStyle.tsx",["404"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminContentMake\\AdminContentMakeManageMain.tsx",["405","406"],"import React,{useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport MedialToolManageComponent from './AdminContentContainer/MediaToolManageComponent';\r\n\r\n\r\nconst Wrapper = styled.section`\r\n    height: 1200px;\r\n`;\r\n\r\ntype Props = {\r\n    type: Number;\r\n    CookieValue: Number;\r\n    setState:any;\r\n}\r\n\r\n\r\nconst AdminContentMakeManageMain:React.FC<Props> = ({type, setState, CookieValue}) => {\r\n\r\n    \r\n   \r\n    //type 1인지 2인지 에따라 컴포넌트가 편한다\r\n    \r\n\r\n    return(\r\n        <Wrapper>\r\n            {type === 1 ? <MedialToolManageComponent CookieValue={CookieValue} /> : null}\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default AdminContentMakeManageMain;","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminContentMake\\AdminContentContainer\\MediaToolManageComponent.tsx",["407","408","409"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminContentMake\\Utils\\CategoryModule.tsx",["410"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminContentMake\\AdminContentMakeManage.tsx",["411"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminContentMake\\Utils\\InputModule.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Button1.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminContentMake\\Utils\\TextAreaModule.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminCategory\\AdminCategoryManage.tsx",["412"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Login\\LoginStyle.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminMemberManage\\HeaderAdmin.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminMode.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\hoc\\auth.tsx",["413","414","415"],"import React,{ useEffect } from 'react';\r\nexport default function (SpecificComponent:any, option:number, adminRoute:boolean = false) {\r\n    // 0 = 관리자 adminRoute 0 ,1,2\r\n    // 1 = 선생 false\r\n    // 2 = 학생 null\r\n    // 3\r\n    function AuthenticationCheck(props:any) {\r\n\r\n        const authority = Number(localStorage.getItem(\"authority\")); //typeof() string 0 1 2    \r\n         \r\n        const cookieValue = document.cookie.split('=');\r\n        \r\n        useEffect(() => {\r\n            //로그인 안된상태\r\n            if(cookieValue[0] === \"\") {\r\n                //로그인 안됐는데 어딘가로 이동하려고할대\r\n                if( option ) {\r\n                    alert(\"로그인을 먼저하세요\");\r\n                    props.history.push(\"/login\");\r\n                }\r\n            } else if(cookieValue[0] !== \"\") {\r\n                //로그인 해서(토큰있고) 로그인페이지로 가려고할떄\r\n                if(option === 4) {\r\n                    alert(\"로그인했는데 글로 갈수없어\");\r\n                    if( authority === 0) {\r\n                        props.history.push(\"/admin/AdminMainPage\");\r\n                    } else if( authority === 1) {\r\n                        props.history.push(\"/dashboard\");\r\n                    } else if( authority === 2) {\r\n                        props.history.push(\"/student/MainDashBoard\");\r\n                    }\r\n                }\r\n            }\r\n        },[cookieValue[0],authority])\r\n\r\n\r\n        if(cookieValue[0] !== \"\") {\r\n            //로그인했고\r\n            if(authority === 0 && !adminRoute ) {\r\n                console.log(\"여기는 오니\");\r\n                if(authority !== option) {\r\n                    alert(\"관리자가 이동할 수 없는페이지\");\r\n                    props.history.push(\"/admin/AdminMainPage\");\r\n                }\r\n            } else if(authority === 1 && adminRoute ) {\r\n                if(authority !== option) {\r\n                    alert(\"선생님이 이동할 수 없는페이지\");\r\n                    props.history.push(\"/dashboard\");\r\n                }\r\n            } else if(authority === 2 && !adminRoute ) {\r\n                if(authority !== option) {\r\n                    alert(\"학생이 이동할 수 없는페이지\");\r\n                    props.history.push(\"/student/MainDashBoard\");\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n       \r\n        return(\r\n            <SpecificComponent {...props} authority={authority} cookieValue={cookieValue} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\hooks\\useInput.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Login\\Login.tsx",["416","417","418","419","420"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminOrganizationManage\\HeaderAdminOrganization.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\student\\StudentMainPage.tsx",["421","422","423"],"import React,{useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport NavigationStudent from '../components/NavigationStudent';\r\nimport Banner from '../teacher/DashBoard/Banner';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../_reducers';\r\nimport { SearchData } from '../_actions/user_action';\r\nimport Input1 from '../utils/Input/Input';\r\nimport Button1 from '../utils/Button1';\r\nimport StudentCategoryModule from './StudentCategoryModule';\r\n\r\n\r\nconst Container = styled.div`\r\n    overflow-y:scroll;\r\n`;\r\n\r\n\r\n\r\nconst SearchSection = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 50px;\r\n    :nth-child(2) {\r\n        margin-right:10px;\r\n    }\r\n    :last-child {\r\n        margin-left:10px;\r\n    }\r\n`;\r\n\r\nconst MainSection = styled.div`\r\n    margin-bottom: 10px;\r\n    margin-left: 10%;\r\n    margin-right: 10%;\r\n`;\r\n\r\nconst MainTitle = styled.div`\r\n    height: 50px;\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst MainBody = styled.div`\r\n    display:flex;\r\n`;\r\n\r\n\r\nconst StudentMainPage = (props:any) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const Data = useSelector((state:RootState) => state);\r\n    const cookieValue = document.cookie.split('='); //string[]\r\n    \r\n    \r\n    const [data, setData] = useState<any>([]);\r\n    const [search, setSearch] = useState<string>(\"\");\r\n\r\n\r\n    const [list1, setList1] = useState<any>([]);\r\n    const [list2, setList2] = useState<any>([]);\r\n    const listA = list1?.contents;\r\n    const listB = list2?.contents;\r\n    \r\n    useEffect(() => {\r\n        axios.get('https://1hour.school/api/v1/dashboard/playlist', {\r\n                headers: {\r\n                    Authorization: cookieValue[1]\r\n                }\r\n            }).then(response => {\r\n                if(response.data.status === 200) {\r\n                    setData(response.data);\r\n                    setList1(response.data.data.list[0]);\r\n                    setList2(response.data.data.list[1]);\r\n                } else {\r\n                    return alert(\"main error\")\r\n                }\r\n            });\r\n    },[setData])\r\n\r\n    const onSearch = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    \r\n    //검색하면 데이터 불러옴a\r\n    const onSearchButton = (e:any) => {\r\n        console.log(search,\"search\"); \r\n        dispatch(SearchData(cookieValue[1],search))\r\n        props.history.push(`/student/StudentCourseMoreViewPage?categoriespk=&categoriesname=&keyword=${search}&type=KEYWORD`);\r\n    }\r\n\r\n    const dummyData:any = [];\r\n    return(\r\n        <>\r\n        <NavigationStudent />\r\n            <Container>\r\n                <Banner cookieValue={cookieValue}/>\r\n                <SearchSection>\r\n                    <StudentCategoryModule dummyData={dummyData} />\r\n                    <div style={{\r\n                        border:\"1px solid black\",\r\n                        marginRight: \"10px\",\r\n                        padding: \"1px\"\r\n                    }}>\r\n                        <Input1 placeholder=\"검색어를 입력하세요\" size=\"500px\" onChange={onSearch} type=\"text\" value={search}/>\r\n                    </div>\r\n                    <Button1 onClick={onSearchButton} size=\"10%\" text=\"검색\" />\r\n                </SearchSection>\r\n                    <MainSection>\r\n                        <MainTitle>\r\n                            <p>{list1.name}</p>\r\n                            <p>더보기</p>\r\n                        </MainTitle>\r\n                        <MainBody>\r\n                            <div style={{\r\n                                height:\"300px\",\r\n                                display:\"flex\",\r\n                                flexDirection:\"row\",\r\n                            }}>\r\n                                {listA && listA.map((content:any,index:any) => {\r\n                                    \r\n                                    // const str = \"https://www.youtube.com/watch?v=\"; //11개의 아이디,32개의글자\r\n                                    const suburl = content.url.slice(32,43);\r\n\r\n                                    return(\r\n                                        <div \r\n                                            key={index}\r\n                                        >\r\n                                            <img width=\"100%\" src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"Logo\" height=\"150px\" \r\n                                                style={{\r\n                                                    margin:\"10px\",\r\n                                                    padding:\"10px\"\r\n                                                }}/>\r\n                                            <p>{content?.title}</p>\r\n                                            <p>{content?.youtubeTitle?.slice(0,31)}...</p>\r\n                                            <div>\r\n                                                <label>단어</label>\r\n                                                <label>문장</label>\r\n                                                <label>더빙</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </MainBody>\r\n                    </MainSection>\r\n                    {/* 하단 */}\r\n                    <MainSection>\r\n                        <MainTitle>\r\n                            <p>{list2.name}</p>\r\n                            <p>더보기</p>\r\n                        </MainTitle>\r\n                        <MainBody>\r\n                            <div style={{\r\n                                height:\"300px\",\r\n                                display:\"flex\",\r\n                                flexDirection:\"row\",\r\n                            }}>\r\n                                {listB && listB.map((content:any,index:any) => {\r\n                                    // console.log(content,\"listB\");\r\n                                    // const str = \"https://www.youtube.com/watch?v=\"; //11개의 아이디,32개의글자\r\n                                    const suburl = content.url.slice(32,43);\r\n\r\n                                    return (\r\n                                        <div \r\n                                            key={index}\r\n                                        >\r\n                                            <img width=\"100%\" src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"Logo\" height=\"150px\" \r\n                                                style={{\r\n                                                    margin:\"10px\",\r\n                                                    padding:\"10px\"\r\n                                                }}/>\r\n                                            <p>{content?.title}</p>\r\n                                            <p>{content?.youtubeTitle?.slice(0,31)}</p>\r\n                                            <div>\r\n                                                <label>단어</label>\r\n                                                <label>문장</label>\r\n                                                <label>더빙</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </MainBody>\r\n                    </MainSection>\r\n            </Container>\r\n        </>\r\n    );\r\n   \r\n}\r\n\r\nexport default StudentMainPage;","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\teacher\\DashBoard\\CourseMoreViewPage.tsx",["424","425"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Input\\Input.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\YoutubeApi\\YoutubeApi.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminOrganizationManage\\AdminOrganizationManage.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Logo\\Logo.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Button\\PublicButton.tsx",["426"],{"ruleId":"427","severity":1,"message":"428","line":1,"column":17,"nodeType":"429","messageId":"430","endLine":1,"endColumn":25},{"ruleId":"431","replacedBy":"432"},{"ruleId":"433","replacedBy":"434"},{"ruleId":"427","severity":1,"message":"435","line":53,"column":18,"nodeType":"429","messageId":"430","endLine":53,"endColumn":25},{"ruleId":"436","severity":1,"message":"437","line":73,"column":7,"nodeType":"438","endLine":73,"endColumn":53,"suggestions":"439"},{"ruleId":"431","replacedBy":"440"},{"ruleId":"433","replacedBy":"441"},{"ruleId":"431","replacedBy":"442"},{"ruleId":"433","replacedBy":"443"},{"ruleId":"436","severity":1,"message":"444","line":64,"column":7,"nodeType":"438","endLine":64,"endColumn":9,"suggestions":"445"},{"ruleId":"436","severity":1,"message":"444","line":107,"column":7,"nodeType":"438","endLine":107,"endColumn":22,"suggestions":"446"},{"ruleId":"431","replacedBy":"447"},{"ruleId":"433","replacedBy":"448"},{"ruleId":"436","severity":1,"message":"444","line":84,"column":7,"nodeType":"438","endLine":84,"endColumn":9,"suggestions":"449"},{"ruleId":"427","severity":1,"message":"450","line":86,"column":11,"nodeType":"429","messageId":"430","endLine":86,"endColumn":22},{"ruleId":"431","replacedBy":"451"},{"ruleId":"433","replacedBy":"452"},{"ruleId":"453","severity":1,"message":"454","line":70,"column":9,"nodeType":"455","messageId":"456","endLine":72,"endColumn":10},{"ruleId":"436","severity":1,"message":"457","line":73,"column":7,"nodeType":"438","endLine":73,"endColumn":45,"suggestions":"458"},{"ruleId":"431","replacedBy":"459"},{"ruleId":"433","replacedBy":"460"},{"ruleId":"431","replacedBy":"461"},{"ruleId":"433","replacedBy":"462"},{"ruleId":"431","replacedBy":"463"},{"ruleId":"433","replacedBy":"464"},{"ruleId":"465","severity":1,"message":"466","line":58,"column":39,"nodeType":"467","messageId":"468","endLine":58,"endColumn":40},{"ruleId":"431","replacedBy":"447"},{"ruleId":"433","replacedBy":"448"},{"ruleId":"427","severity":1,"message":"469","line":2,"column":49,"nodeType":"429","messageId":"430","endLine":2,"endColumn":57},{"ruleId":"427","severity":1,"message":"470","line":6,"column":8,"nodeType":"429","messageId":"430","endLine":6,"endColumn":14},{"ruleId":"427","severity":1,"message":"471","line":9,"column":10,"nodeType":"429","messageId":"430","endLine":9,"endColumn":23},{"ruleId":"427","severity":1,"message":"472","line":59,"column":11,"nodeType":"429","messageId":"430","endLine":59,"endColumn":15},{"ruleId":"427","severity":1,"message":"473","line":66,"column":12,"nodeType":"429","messageId":"430","endLine":66,"endColumn":16},{"ruleId":"436","severity":1,"message":"474","line":93,"column":7,"nodeType":"438","endLine":93,"endColumn":23,"suggestions":"475"},{"ruleId":"436","severity":1,"message":"476","line":93,"column":8,"nodeType":"477","endLine":93,"endColumn":22},{"ruleId":"427","severity":1,"message":"435","line":87,"column":18,"nodeType":"429","messageId":"430","endLine":87,"endColumn":25},{"ruleId":"427","severity":1,"message":"478","line":90,"column":12,"nodeType":"429","messageId":"430","endLine":90,"endColumn":17},{"ruleId":"427","severity":1,"message":"479","line":91,"column":12,"nodeType":"429","messageId":"430","endLine":91,"endColumn":22},{"ruleId":"436","severity":1,"message":"480","line":192,"column":7,"nodeType":"438","endLine":192,"endColumn":13,"suggestions":"481"},{"ruleId":"427","severity":1,"message":"428","line":1,"column":27,"nodeType":"429","messageId":"430","endLine":1,"endColumn":35},{"ruleId":"436","severity":1,"message":"482","line":106,"column":7,"nodeType":"438","endLine":106,"endColumn":9,"suggestions":"483"},{"ruleId":"427","severity":1,"message":"484","line":2,"column":9,"nodeType":"429","messageId":"430","endLine":2,"endColumn":13},{"ruleId":"436","severity":1,"message":"485","line":36,"column":7,"nodeType":"438","endLine":36,"endColumn":9,"suggestions":"486"},{"ruleId":"427","severity":1,"message":"487","line":40,"column":12,"nodeType":"429","messageId":"430","endLine":40,"endColumn":24},{"ruleId":"427","severity":1,"message":"488","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":21},{"ruleId":"431","replacedBy":"489"},{"ruleId":"433","replacedBy":"490"},{"ruleId":"427","severity":1,"message":"491","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":15},{"ruleId":"427","severity":1,"message":"492","line":149,"column":7,"nodeType":"429","messageId":"430","endLine":149,"endColumn":10},{"ruleId":"436","severity":1,"message":"444","line":262,"column":7,"nodeType":"438","endLine":262,"endColumn":22,"suggestions":"493"},{"ruleId":"431","replacedBy":"494"},{"ruleId":"433","replacedBy":"495"},{"ruleId":"431","replacedBy":"496"},{"ruleId":"433","replacedBy":"497"},{"ruleId":"427","severity":1,"message":"428","line":1,"column":27,"nodeType":"429","messageId":"430","endLine":1,"endColumn":35},{"ruleId":"436","severity":1,"message":"482","line":106,"column":7,"nodeType":"438","endLine":106,"endColumn":9,"suggestions":"498"},{"ruleId":"465","severity":1,"message":"466","line":57,"column":39,"nodeType":"467","messageId":"468","endLine":57,"endColumn":40},{"ruleId":"431","replacedBy":"499"},{"ruleId":"433","replacedBy":"500"},{"ruleId":"427","severity":1,"message":"501","line":28,"column":21,"nodeType":"429","messageId":"430","endLine":28,"endColumn":31},{"ruleId":"436","severity":1,"message":"502","line":45,"column":7,"nodeType":"438","endLine":45,"endColumn":9,"suggestions":"503"},{"ruleId":"427","severity":1,"message":"504","line":1,"column":16,"nodeType":"429","messageId":"430","endLine":1,"endColumn":24},{"ruleId":"436","severity":1,"message":"485","line":37,"column":7,"nodeType":"438","endLine":37,"endColumn":9,"suggestions":"505"},{"ruleId":"427","severity":1,"message":"487","line":41,"column":12,"nodeType":"429","messageId":"430","endLine":41,"endColumn":24},{"ruleId":"427","severity":1,"message":"435","line":110,"column":17,"nodeType":"429","messageId":"430","endLine":110,"endColumn":24},{"ruleId":"436","severity":1,"message":"506","line":117,"column":8,"nodeType":"438","endLine":117,"endColumn":10,"suggestions":"507"},{"ruleId":"427","severity":1,"message":"435","line":48,"column":18,"nodeType":"429","messageId":"430","endLine":48,"endColumn":25},{"ruleId":"436","severity":1,"message":"508","line":96,"column":8,"nodeType":"438","endLine":96,"endColumn":14,"suggestions":"509"},{"ruleId":"436","severity":1,"message":"444","line":225,"column":7,"nodeType":"438","endLine":225,"endColumn":20,"suggestions":"510"},{"ruleId":"427","severity":1,"message":"428","line":1,"column":27,"nodeType":"429","messageId":"430","endLine":1,"endColumn":35},{"ruleId":"436","severity":1,"message":"482","line":125,"column":7,"nodeType":"438","endLine":125,"endColumn":9,"suggestions":"511"},{"ruleId":"512","severity":1,"message":"513","line":35,"column":1,"nodeType":"514","endLine":58,"endColumn":10},{"ruleId":"465","severity":1,"message":"466","line":58,"column":39,"nodeType":"467","messageId":"468","endLine":58,"endColumn":40},{"ruleId":"427","severity":1,"message":"515","line":1,"column":8,"nodeType":"429","messageId":"430","endLine":1,"endColumn":13},{"ruleId":"427","severity":1,"message":"516","line":1,"column":15,"nodeType":"429","messageId":"430","endLine":1,"endColumn":24},{"ruleId":"427","severity":1,"message":"428","line":1,"column":26,"nodeType":"429","messageId":"430","endLine":1,"endColumn":34},{"ruleId":"427","severity":1,"message":"516","line":1,"column":17,"nodeType":"429","messageId":"430","endLine":1,"endColumn":26},{"ruleId":"427","severity":1,"message":"517","line":79,"column":12,"nodeType":"429","messageId":"430","endLine":79,"endColumn":18},{"ruleId":"427","severity":1,"message":"518","line":79,"column":20,"nodeType":"429","messageId":"430","endLine":79,"endColumn":29},{"ruleId":"436","severity":1,"message":"444","line":80,"column":7,"nodeType":"438","endLine":80,"endColumn":9,"suggestions":"519"},{"ruleId":"427","severity":1,"message":"520","line":5,"column":8,"nodeType":"429","messageId":"430","endLine":5,"endColumn":13},{"ruleId":"427","severity":1,"message":"428","line":1,"column":16,"nodeType":"429","messageId":"430","endLine":1,"endColumn":24},{"ruleId":"512","severity":1,"message":"513","line":2,"column":1,"nodeType":"514","endLine":67,"endColumn":2},{"ruleId":"436","severity":1,"message":"521","line":34,"column":11,"nodeType":"438","endLine":34,"endColumn":37,"suggestions":"522"},{"ruleId":"436","severity":1,"message":"476","line":34,"column":12,"nodeType":"477","endLine":34,"endColumn":26},{"ruleId":"427","severity":1,"message":"428","line":1,"column":15,"nodeType":"429","messageId":"430","endLine":1,"endColumn":23},{"ruleId":"427","severity":1,"message":"516","line":1,"column":25,"nodeType":"429","messageId":"430","endLine":1,"endColumn":34},{"ruleId":"427","severity":1,"message":"523","line":6,"column":42,"nodeType":"429","messageId":"430","endLine":6,"endColumn":47},{"ruleId":"427","severity":1,"message":"524","line":13,"column":10,"nodeType":"429","messageId":"430","endLine":13,"endColumn":15},{"ruleId":"427","severity":1,"message":"525","line":24,"column":11,"nodeType":"429","messageId":"430","endLine":24,"endColumn":19},{"ruleId":"427","severity":1,"message":"472","line":54,"column":11,"nodeType":"429","messageId":"430","endLine":54,"endColumn":15},{"ruleId":"427","severity":1,"message":"473","line":58,"column":12,"nodeType":"429","messageId":"430","endLine":58,"endColumn":16},{"ruleId":"436","severity":1,"message":"474","line":81,"column":7,"nodeType":"438","endLine":81,"endColumn":16,"suggestions":"526"},{"ruleId":"453","severity":1,"message":"454","line":71,"column":9,"nodeType":"455","messageId":"456","endLine":73,"endColumn":10},{"ruleId":"436","severity":1,"message":"457","line":74,"column":7,"nodeType":"438","endLine":74,"endColumn":45,"suggestions":"527"},{"ruleId":"427","severity":1,"message":"428","line":1,"column":17,"nodeType":"429","messageId":"430","endLine":1,"endColumn":25},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["528"],"no-negated-in-lhs",["529"],"'setPage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPlayList'. Either include it or remove the dependency array.","ArrayExpression",["530"],["528"],["529"],["528"],["529"],"React Hook useEffect has a missing dependency: 'CookieValue'. Either include it or remove the dependency array.",["531"],["532"],["528"],["529"],["533"],"'ArrayLength' is assigned a value but never used.",["528"],["529"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'cookieValue', 'query.categoriespk', and 'query.keyword'. Either include them or remove the dependency array. Outer scope values like 'SearchByCategory' aren't valid dependencies because mutating them doesn't re-render the component.",["534"],["528"],["529"],["528"],["529"],["528"],["529"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Redirect' is defined but never used.","'styled' is defined but never used.","'DashBoardData' is defined but never used.","'Data' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'cookieValue'. Either include it or remove the dependency array.",["535"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'files' is assigned a value but never used.","'UploadData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'request'. Either include it or remove the dependency array.",["536"],"React Hook useEffect has missing dependencies: 'cookieValue', 'dispatch', and 'email'. Either include them or remove the dependency array.",["537"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'cookieValue' and 'dispatch'. Either include them or remove the dependency array.",["538"],"'categoryname' is assigned a value but never used.","'ListSubheader' is defined but never used.",["528"],["529"],"'setting' is defined but never used.","'Img' is assigned a value but never used.",["539"],["528"],["529"],["528"],["529"],["540"],["528"],["529"],"'setMembers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'cookie'. Either include it or remove the dependency array.",["541"],"'Suspense' is defined but never used.",["542"],"React Hook useEffect has missing dependencies: 'closed', 'cookieValue', 'dispatch', and 'page'. Either include them or remove the dependency array.",["543"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["544"],["545"],["546"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'React' is defined but never used.","'useEffect' is defined but never used.","'pkList' is assigned a value but never used.","'setPkList' is assigned a value but never used.",["547"],"'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'cookieValue' and 'props.history'. Either include them or remove the dependency array.",["548"],"'Input' is defined but never used.","'login' is defined but never used.","'dispatch' is assigned a value but never used.",["549"],["550"],"no-global-assign","no-unsafe-negation",{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"553","fix":"557"},{"desc":"558","fix":"559"},{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"564","fix":"565"},{"desc":"566","fix":"567"},{"desc":"568","fix":"569"},{"desc":"564","fix":"570"},{"desc":"571","fix":"572"},{"desc":"566","fix":"573"},{"desc":"574","fix":"575"},{"desc":"576","fix":"577"},{"desc":"578","fix":"579"},{"desc":"564","fix":"580"},{"desc":"553","fix":"581"},{"desc":"582","fix":"583"},{"desc":"584","fix":"585"},{"desc":"558","fix":"586"},"Update the dependencies array to be: [isModalOpen, isModalUpdateOpen, IsClickContent, getPlayList]",{"range":"587","text":"588"},"Update the dependencies array to be: [CookieValue]",{"range":"589","text":"590"},"Update the dependencies array to be: [CookieValue, PlayListItems]",{"range":"591","text":"592"},{"range":"593","text":"590"},"Update the dependencies array to be: [dispatch, query.keyword, query.categoriespk, cookieValue]",{"range":"594","text":"595"},"Update the dependencies array to be: [cookieValue]",{"range":"596","text":"597"},"Update the dependencies array to be: [request, type]",{"range":"598","text":"599"},"Update the dependencies array to be: [cookieValue, dispatch, email]",{"range":"600","text":"601"},"Update the dependencies array to be: [cookieValue, dispatch]",{"range":"602","text":"603"},"Update the dependencies array to be: [page, category, CookieValue]",{"range":"604","text":"605"},{"range":"606","text":"601"},"Update the dependencies array to be: [cookie]",{"range":"607","text":"608"},{"range":"609","text":"603"},"Update the dependencies array to be: [closed, cookieValue, dispatch, page]",{"range":"610","text":"611"},"Update the dependencies array to be: [getData, type]",{"range":"612","text":"613"},"Update the dependencies array to be: [page, closed, CookieValue]",{"range":"614","text":"615"},{"range":"616","text":"601"},{"range":"617","text":"590"},"Update the dependencies array to be: [authority, cookieValue, props.history]",{"range":"618","text":"619"},"Update the dependencies array to be: [cookieValue, setData]",{"range":"620","text":"621"},{"range":"622","text":"595"},[2172,2218],"[isModalOpen, isModalUpdateOpen, IsClickContent, getPlayList]",[1623,1625],"[CookieValue]",[2730,2745],"[CookieValue, PlayListItems]",[1883,1885],[1947,1985],"[dispatch, query.keyword, query.categoriespk, cookieValue]",[2651,2667],"[cookieValue]",[5798,5804],"[request, type]",[2452,2454],"[cookieValue, dispatch, email]",[1013,1015],"[cookieValue, dispatch]",[6096,6111],"[page, category, CookieValue]",[2437,2439],[1249,1251],"[cookie]",[1010,1012],[2571,2573],"[closed, cookieValue, dispatch, page]",[2623,2629],"[getData, type]",[5179,5192],"[page, closed, CookieValue]",[2903,2905],[1890,1892],[1311,1337],"[authority, cookieValue, props.history]",[2217,2226],"[cookieValue, setData]",[1923,1961]]