[{"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Input\\Input.tsx":"1","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Category\\CategoryModule.tsx":"2","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Button1.tsx":"3","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\App.tsx":"4","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Icons.tsx":"5","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Register\\RegisterMain\\RegisterMain.tsx":"6","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Register\\RegisterUserInfo\\RegisterUserInfoPage.tsx":"7","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Login\\Login.tsx":"8","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\_reducers\\user_reducer.tsx":"9","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\_actions\\user_action.tsx":"10","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\LandingPage.tsx":"11","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\index.tsx":"12","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Login\\LoginStyle.tsx":"13","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\_reducers\\index.ts":"14","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\hooks\\useInput.tsx":"15","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\_actions\\types.ts":"16","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Register\\RegisterUserInfo\\RegisterUserInfoStyle.tsx":"17","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Register\\RegisterMain\\RegisterMainStyle.tsx":"18","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Category\\TestTest.tsx":"19","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\styles\\global-styles.ts":"20","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\MyPage\\MyPage.tsx":"21","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Test\\TestAll.tsx":"22","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\hoc\\auth.tsx":"23","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Test\\TestTeacher.tsx":"24","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\teacher\\DashBoard\\DashBoardPage.tsx":"25","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\teacher\\DashBoard\\CourseMoreViewPage.tsx":"26","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\student\\StudentMainPage.tsx":"27","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\components\\NavigationStudent.tsx":"28","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\student\\StudentCourseMoreViewPage.tsx":"29","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\student\\StudentCategoryModule.tsx":"30","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\student\\StudentMyPage.tsx":"31","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\teacher\\DashBoard\\CourseManage.tsx":"32","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\student\\MyReport.tsx":"33","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Calendar\\Calendar.jsx":"34","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\components\\Navigation.tsx":"35","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\teacher\\DashBoard\\Banner.tsx":"36","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminMainPage.tsx":"37","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\styles\\theme.ts":"38","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\components\\NavigationAdmin.tsx":"39","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\MyPage\\AdminMyPage.tsx":"40","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminCourseMoreViewPage.tsx":"41","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminMode.tsx":"42","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminNaviLeft.tsx":"43","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminCategoryModule.tsx":"44","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminMemberManage\\AdminMemberMainManage.tsx":"45","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminMemberManage\\AdminMemberManage.tsx":"46","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminMemberManage\\HeaderAdmin.tsx":"47","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Logo\\Logo.tsx":"48","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminOrganizationManage\\AdminOrganizationManage.tsx":"49","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminOrganizationManage\\HeaderAdminOrganization.tsx":"50","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminOrganizationManage\\AdminOrganizationMainManage.tsx":"51","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminBanner\\AdminBannerManageMain.tsx":"52","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminBanner\\HeaderAdminBanner.tsx":"53","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminBanner\\AdminBannerManage.tsx":"54","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Button\\MovingButton.tsx":"55","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminCategory\\AdminCategoryMainManage.tsx":"56","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminCategory\\AdminCategoryCreateModal.tsx":"57","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminPlayListMainManage.tsx":"58","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminPlayListManage.tsx":"59","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\HeaderAdminPlayList.tsx":"60","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminPlayListCreateModal.tsx":"61","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Button\\PublicButton.tsx":"62"},{"size":839,"mtime":1608177666041,"results":"63","hashOfConfig":"64"},{"size":2104,"mtime":1608614287562,"results":"65","hashOfConfig":"64"},{"size":1199,"mtime":1609232848377,"results":"66","hashOfConfig":"64"},{"size":4620,"mtime":1609311675292,"results":"67","hashOfConfig":"64"},{"size":2039,"mtime":1608626628620,"results":"68","hashOfConfig":"64"},{"size":8643,"mtime":1609238708972,"results":"69","hashOfConfig":"64"},{"size":5175,"mtime":1608721964093,"results":"70","hashOfConfig":"64"},{"size":4288,"mtime":1608796807728,"results":"71","hashOfConfig":"64"},{"size":1825,"mtime":1608795633012,"results":"72","hashOfConfig":"64"},{"size":6568,"mtime":1609143300374,"results":"73","hashOfConfig":"64"},{"size":1337,"mtime":1608004224837,"results":"74","hashOfConfig":"64"},{"size":839,"mtime":1608283737809,"results":"75","hashOfConfig":"64"},{"size":1285,"mtime":1608081936419,"results":"76","hashOfConfig":"64"},{"size":221,"mtime":1608282362435,"results":"77","hashOfConfig":"64"},{"size":328,"mtime":1609238389186,"results":"78","hashOfConfig":"64"},{"size":548,"mtime":1608785784211,"results":"79","hashOfConfig":"64"},{"size":751,"mtime":1608102662223,"results":"80","hashOfConfig":"64"},{"size":753,"mtime":1608085136261,"results":"81","hashOfConfig":"64"},{"size":260,"mtime":1608643113992,"results":"82","hashOfConfig":"64"},{"size":373,"mtime":1608624775103,"results":"83","hashOfConfig":"64"},{"size":5728,"mtime":1608720419961,"results":"84","hashOfConfig":"64"},{"size":210,"mtime":1609314517856,"results":"85","hashOfConfig":"64"},{"size":2578,"mtime":1608799218267,"results":"86","hashOfConfig":"64"},{"size":232,"mtime":1608696642106,"results":"87","hashOfConfig":"64"},{"size":8163,"mtime":1608793468903,"results":"88","hashOfConfig":"64"},{"size":7328,"mtime":1608705939335,"results":"89","hashOfConfig":"64"},{"size":7732,"mtime":1608711476510,"results":"90","hashOfConfig":"64"},{"size":3060,"mtime":1608713689152,"results":"91","hashOfConfig":"64"},{"size":7382,"mtime":1608711052933,"results":"92","hashOfConfig":"64"},{"size":2134,"mtime":1608711559699,"results":"93","hashOfConfig":"64"},{"size":7233,"mtime":1608721591312,"results":"94","hashOfConfig":"64"},{"size":6555,"mtime":1608789540433,"results":"95","hashOfConfig":"64"},{"size":2600,"mtime":1608725998930,"results":"96","hashOfConfig":"64"},{"size":1446,"mtime":1608729803197,"results":"97","hashOfConfig":"64"},{"size":3450,"mtime":1608799598410,"results":"98","hashOfConfig":"64"},{"size":1467,"mtime":1608269102898,"results":"99","hashOfConfig":"64"},{"size":8262,"mtime":1608801921159,"results":"100","hashOfConfig":"64"},{"size":234,"mtime":1607958538321,"results":"101","hashOfConfig":"64"},{"size":3571,"mtime":1608802251355,"results":"102","hashOfConfig":"64"},{"size":5753,"mtime":1608802190595,"results":"103","hashOfConfig":"64"},{"size":7368,"mtime":1608801930178,"results":"104","hashOfConfig":"64"},{"size":733,"mtime":1609139276548,"results":"105","hashOfConfig":"64"},{"size":8096,"mtime":1609311750076,"results":"106","hashOfConfig":"64"},{"size":2093,"mtime":1608801668923,"results":"107","hashOfConfig":"64"},{"size":5416,"mtime":1609246817249,"results":"108","hashOfConfig":"64"},{"size":1924,"mtime":1609143556839,"results":"109","hashOfConfig":"64"},{"size":1917,"mtime":1609143315219,"results":"110","hashOfConfig":"64"},{"size":141,"mtime":1608004107621,"results":"111","hashOfConfig":"64"},{"size":1858,"mtime":1609156735946,"results":"112","hashOfConfig":"64"},{"size":1759,"mtime":1609156498039,"results":"113","hashOfConfig":"64"},{"size":5312,"mtime":1609158133951,"results":"114","hashOfConfig":"64"},{"size":9703,"mtime":1609243685778,"results":"115","hashOfConfig":"64"},{"size":1602,"mtime":1609158808166,"results":"116","hashOfConfig":"64"},{"size":1741,"mtime":1609228188995,"results":"117","hashOfConfig":"64"},{"size":426,"mtime":1609244826758,"results":"118","hashOfConfig":"64"},{"size":4590,"mtime":1609313600912,"results":"119","hashOfConfig":"64"},{"size":8461,"mtime":1609324549039,"results":"120","hashOfConfig":"64"},{"size":4694,"mtime":1609323625199,"results":"121","hashOfConfig":"64"},{"size":1358,"mtime":1609311787295,"results":"122","hashOfConfig":"64"},{"size":2120,"mtime":1609312963052,"results":"123","hashOfConfig":"64"},{"size":5698,"mtime":1609325673984,"results":"124","hashOfConfig":"64"},{"size":1253,"mtime":1609323896958,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"1y71ck4",{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"128"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"128"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"166"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"156"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"128"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"132"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"156"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"147"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"128"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"132"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"205"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Input\\Input.tsx",[],["282","283"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Category\\CategoryModule.tsx",["284","285","286","287"],"import React,{useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../_reducers';\r\nimport { categoryData, SearchByCategory } from '../../_actions/user_action';\r\n\r\nconst CategoryHead = styled.select`\r\n    width: 10%;\r\n    height: 50%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    font-weight: bold;\r\n    font-size: 15px;\r\n    font-family: \"Helvetica Neue\";\r\n    margin-left: 5px;\r\n    margin-right: 1em;\r\n    cursor: pointer;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst Text = styled.option`\r\n    font-size:1em;\r\n`;\r\n\r\n\r\n\r\nconst CategoryModule = (props:any) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const data = useSelector((state:RootState) => state?.user?.category?.data);\r\n    const cookieValue = document.cookie.split('=');\r\n\r\n    useEffect(() => {\r\n        dispatch(categoryData(cookieValue[1]));\r\n    },[])\r\n\r\n\r\n    const [pk,setcategorypk] = useState(\"\");\r\n    const [categoryname, setcategoryName] = useState(\"\");\r\n\r\n    const selected = 0;\r\n    \r\n    \r\n\r\n    const onClickSomething = (e:any) => {\r\n        setcategorypk(e.target.value);\r\n        setcategoryName(data[e.target.value-1].name);\r\n        const pknum = e.target.value; //pk\r\n        const categoryname = data[e.target.value-1].name;\r\n        dispatch(SearchByCategory(cookieValue[1],selected,pknum));\r\n        props.history.push(`/CourseMoreViewPage?categoriespk=${pknum}&categoriesname=${categoryname}&keyword=&type=CATEGORY`);\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <CategoryHead onChange={onClickSomething} value={pk}> \r\n                <Text>카테고리</Text>\r\n                {data && data.map((item:any, index:any) => {\r\n                    return(\r\n                        <Text value={item.category} key={index}>{item.name}</Text>\r\n                    );\r\n                })}\r\n            </CategoryHead>    \r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(CategoryModule);",["288","289"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Button1.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\App.tsx",["290","291"],"import React, { Suspense } from 'react';\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\nimport LandingPage from \"./Main/LandingPage\";\nimport Login from \"./Main/Login/Login\";\nimport {theme} from './styles/theme';\nimport styled, {ThemeProvider} from \"styled-components\";\nimport GlobalStyle from \"./styles/global-styles\";\nimport RegisterUserInfo from './Main/Register/RegisterUserInfo/RegisterUserInfoPage';\nimport RegisterMain from './Main/Register/RegisterMain/RegisterMain';\nimport DashBoardPage from './teacher/DashBoard/DashBoardPage';\nimport CoursMoreViewPage from './teacher/DashBoard/CourseMoreViewPage';\nimport CourseManage from './teacher/DashBoard/CourseManage';\nimport MyPage from '../src/Main/MyPage/MyPage';\nimport Auth from '../src/hoc/auth';\nimport StudentMainPage from './student/StudentMainPage';\nimport StudentCourseMoreViewPage from './student/StudentCourseMoreViewPage';\nimport StudentMyPage from './student/StudentMyPage';\nimport MyReport from './student/MyReport';\nimport AdminMainPage from './admin/AdminMainPage';\nimport TestAll from './Test/TestAll';\nimport AdminMyPage from './Main/MyPage/AdminMyPage';\nimport AdminCourseMoreViewPage from './admin/AdminCourseMoreViewPage';\nimport AdminMode from './admin/AdminMode';\nimport AdminMemberManage from './admin/AdminMemberManage/AdminMemberManage';\nimport AdminOrganizationManage from './admin/AdminOrganizationManage/AdminOrganizationManage';\nimport AdminBannerManage from './admin/AdminBanner/AdminBannerManage';\nimport AdminCategoryManage from './admin/AdminCategory/AdminCategoryManage';\n\nconst App: React.FC = () => {\n    return (\n        <>\n            <ThemeProvider theme={theme}>\n                <GlobalStyle/>\n                <Router>\n                <Suspense fallback={(<div>Loading...</div>)}>\n                    <Switch>\n                        <Route path=\"/\" exact component={LandingPage}/>\n                        <Route path=\"/login\" exact component={Auth(Login,4)}/>\n                        <Route path=\"/findPassword\" exact component={Login}/>\n                        <Route path=\"/register\" exact component={RegisterMain}/>\n                        <Route path=\"/Replace\" exact component={RegisterUserInfo}/>\n\n                        <Route path=\"/dashboard\" exact component={Auth(DashBoardPage, 1, false)} />\n                        <Route path=\"/CourseMoreViewPage\" exact component={Auth(CoursMoreViewPage,1, false)} />\n                        <Route path=\"/course_manage\" exact component={Auth(CourseManage,1, false)} />\n                        <Route path=\"/myPage\" exact component={Auth(MyPage,1, false)} />\n\n                        \n                        <Route path=\"/student/MainDashBoard\" exact component={Auth(StudentMainPage, 2, false)} />\n                        <Route path=\"/student/StudentCourseMoreViewPage\" exact component={Auth(StudentCourseMoreViewPage,2, false)} />\n                        <Route path=\"/student/StudentMyPage\" exact component={Auth(StudentMyPage, 2, false)} />\n                        <Route path=\"/student/MyReport\" exact component={Auth(MyReport, 2, false)} />\n\n                        <Route path=\"/admin/AdminMainPage\" exact component={Auth(AdminMainPage, 0, true)} />\n                        <Route path=\"/admin/AdminCourseMoreViewPage\" exact component={Auth(AdminCourseMoreViewPage, 0, true)} />\n                        <Route path=\"/admin/AdminMyPage\" exact component={Auth(AdminMyPage, 0, true)} />\n                        <Route path=\"/admin/AdminMode\" exact component={Auth(AdminMode, 0, true)} />\n                        <Route path=\"/admin/AdminMode/Member/member_manage\" exact component={Auth(AdminMemberManage, 0, true)} />\n                        <Route path=\"/admin/AdminMode/Banner/banner_manage\" exact component={Auth(AdminBannerManage, 0, true)} />\n                        <Route path=\"/admin/AdminMode/Organization/organization_manage\" exact component={Auth(AdminOrganizationManage, 0, true)} />\n                        <Route path=\"/admin/AdminMode/Category/category_manage\" exact component={Auth(AdminCategoryManage, 0, true)} />\n                        \n                        <Route path=\"/admin/AdminMode/PlayList/play_list_manage\" exact component={Auth(AdminPlayListManage, 0, true)} />\n                        \n                        \n                        <Route path=\"/TestAll\" exact component={TestAll} />\n                        {/* <Redirect path=\"*\" to=\"/\"/> */}\n                    </Switch>\n                </Suspense>\n                </Router>\n            </ThemeProvider>\n        </>\n    );\n}\n\nexport default App;\n","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Icons.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Register\\RegisterMain\\RegisterMain.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Register\\RegisterUserInfo\\RegisterUserInfoPage.tsx",["292"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Login\\Login.tsx",["293","294","295","296","297"],"import React,{useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport logo from '../../Images/images/images/logo.png';\r\nimport { Logo } from '../../utils/Logo/Logo';\r\nimport { Container, Text, Text1, Wrapper,Input,InputLabel, Small } from './LoginStyle';\r\nimport {Link} from 'react-router-dom';\r\nimport Button1 from '../../utils/Button1';\r\nimport Input1 from '../../utils/Input/Input';\r\nimport useInput from '../../hooks/useInput';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../_reducers';\r\nimport { login } from '../../_actions/user_action';\r\nimport Helmet from 'react-helmet';\r\nconst Linked = styled(Link)`\r\n    text-decoration:none;\r\n    font-size: 5px;\r\n    color: black;\r\n`;\r\n\r\nconst Login = (props:any) => {\r\n\r\n    const data = useSelector((state:RootState) => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    console.log(data,\"loginData\");\r\n    const email = useInput(\"\");\r\n    const password = useInput(\"\");\r\n\r\n\r\n    async function getLogin(body:any) {\r\n        try {\r\n            const response = await axios.post(`https://1hour.school/user/login`, body);\r\n            if(response.data.status === 200) {\r\n                console.log(response.data.data,\"데이터\");\r\n                console.log(response.data,\"token\");\r\n                document.cookie = `usertoken=${response.data.data.token}`;\r\n                localStorage.setItem('authority',`${response.data.data.authority}`);\r\n                localStorage.setItem('organizationName',`${response.data.data.organizationName}`);\r\n                localStorage.setItem('userEmail',`${body.email}`);\r\n                const authority = response.data.data.authority;\r\n                console.log(authority);\r\n                //0 ,1, 2\r\n                if(authority === 2) {\r\n                    props.history.push(\"/student/MainDashBoard\");\r\n                } else if(authority === 1) {\r\n                    props.history.push(\"/dashboard\");\r\n                } else if( authority === 0) {\r\n                    props.history.push(\"/admin/AdminMainPage\")\r\n                } else {\r\n                    props.history.push(\"/login\");\r\n                }\r\n            } else {\r\n                alert(\"로그인하는데 실패\");\r\n                props.history.push(\"/login\");\r\n            }\r\n        } catch(error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    const onLogin = (e: React.FormEvent<HTMLFormElement> | React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            email: email.value,\r\n            password: password.value\r\n        }\r\n        // dispatch(login(body, email.value));\r\n        // console.log(data,\"finddata\");   \r\n\r\n        getLogin(body)\r\n\r\n        // if( data?.login?.data?.authority === undefined ) {\r\n        //     dispatch(login(body, email.value));\r\n        //     console.log(data && data.login && data.login.data,\"undefined면 다시보내\"); \r\n        // } \r\n\r\n    }\r\n\r\n   \r\n\r\n   \r\n\r\n    return(\r\n        <Container>\r\n            <Helmet>\r\n                <title>Login</title>\r\n            </Helmet>\r\n            <Logo src={logo} alt=\"Logo\" />\r\n            <Wrapper>\r\n                <form style={{display:'flex', flexDirection:'column'}} onSubmit={onLogin}>\r\n                    <Text>시작하기</Text>\r\n                    <Text1>환영합니다! 계정이 없다면 회원가입 후 이용해주세요</Text1>\r\n                    <InputLabel>이메일 주소</InputLabel>\r\n                    <Input1 \r\n                        type=\"text\"\r\n                        {...email}\r\n                    />\r\n                    <InputLabel>비밀번호</InputLabel>\r\n                    <Input1  \r\n                        type=\"password\"\r\n                        {...password}\r\n                    />\r\n                    <Button1 onClick={onLogin} text=\"로그인\" size=\"50px\" />\r\n                    <Small>\r\n                        <Linked to=\"/findPassword\"><p>비밀번호 찾기</p></Linked>\r\n                        <Linked to=\"/register\"><p>회원가입</p></Linked>\r\n                    </Small>\r\n                </form>\r\n            </Wrapper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n",["298","299"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\_reducers\\user_reducer.tsx",["300"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\_actions\\user_action.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\LandingPage.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\index.tsx",[],["301","302"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Login\\LoginStyle.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\_reducers\\index.ts",[],["303","304"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\hooks\\useInput.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\_actions\\types.ts",[],["305","306"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Register\\RegisterUserInfo\\RegisterUserInfoStyle.tsx",["307"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport landingBackground from '../../../Images/images/images/landingBackground.png';\r\n\r\nexport const Container = styled.div`\r\n    height:100vh;\r\n    background-size: 100% 100%;\r\n    background-image: url(${landingBackground});\r\n    background-repeat: no-repeat;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    position: relative;\r\n`;\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    background-color:#d0b8a782;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    text-align: center;\r\n    align-items: center;\r\n    width: 35%;\r\n    height: 58%;\r\n    padding: 5rem;\r\n    position: relative;\r\n`;",["308","309"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\Register\\RegisterMain\\RegisterMainStyle.tsx",["310"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport landingBackground from '../../../Images/images/images/landingBackground.png';\r\n\r\n\r\nexport const Container = styled.div`\r\n    height:100vh;\r\n    background-size: 100% 100%;\r\n    background-image: url(${landingBackground});\r\n    background-repeat: no-repeat;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    position: relative;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    background-color:#d0b8a782;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    text-align: center;\r\n    align-items: center;\r\n    width: 35%;\r\n    height: 58%;\r\n    padding: 5rem;\r\n    position: relative;\r\n`;\r\n","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Category\\TestTest.tsx",["311"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\styles\\global-styles.ts",[],["312","313"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\MyPage\\MyPage.tsx",["314","315"],"import React,{ useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport Navigation from '../../components/Navigation';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../_reducers';\r\nimport { MyInfo } from '../../_actions/user_action';\r\nimport Button1 from '../../utils/Button1';\r\nimport useInput from '../../hooks/useInput';\r\nconst Container = styled.section`\r\n    min-height: 75vh;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    width: 70%;\r\n    height: 100%;\r\n    margin-top: 7%;\r\n    align-self: center;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    height: 15%;\r\n`;\r\n\r\nconst FontTitle = styled.div`\r\n    height: 50%;\r\n    font-weight: 600;\r\n    font-size: 26pt;\r\n`;\r\n\r\nconst FontRegion = styled.div`\r\n    height: 50%;\r\n    border-bottom: 1px solid black;\r\n    display: flex;\r\n    padding: 1rem;\r\n`;\r\n\r\nconst FontText = styled.span`\r\n    font-weight: 500;\r\n    font-size: 22pt;\r\n    text-align: left;\r\n    margin-left: 10px;\r\n    cursor: pointer;\r\n    border-bottom: 7px solid yellow;\r\n`;\r\n\r\nconst Main = styled.div`\r\n    display: flex;\r\n    flex-direction:column;\r\n    height: 700px;\r\n    padding: 30px;\r\n`;\r\n\r\nconst WrapDIV = styled.div`\r\n    display:flex;\r\n    height: 10%;\r\n    width:100%;\r\n    margin: 22px auto;\r\n`;\r\nconst WrapBut = styled.div`\r\n    display:flex;\r\n    height: 10%;\r\n    width:100%;\r\n    margin: 15px auto;\r\n    justify-content: space-between;\r\n`;\r\n\r\n\r\nconst Ptext  = styled.p`\r\n    margin: auto 2rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    margin-left: 20px;\r\n    margin-top: 5px;\r\n    background: 0% 0% no-repeat padding-box padding-box rgb(244, 244, 244);\r\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px;\r\n    border: 0px;\r\n    border-radius: 12px;\r\n    width: 400pt;\r\n    height: 36pt;\r\n    padding-left: 11pt;\r\n`;\r\n\r\n\r\nconst MyPage = (props:any) => {\r\n\r\n    console.log(props,\"MyPageProps\");\r\n    console.log(props.cookieValue[1]);\r\n    const data = useSelector((state:RootState) => state.user.myInfo?.data);\r\n    const dispatch = useDispatch();\r\n\r\n    console.log(data);\r\n\r\n    const organization = useInput(\"\");\r\n    const password = useInput(\"\");\r\n    const name = useInput(\"\");\r\n\r\n    const cookieValue = document.cookie.split(\"=\");\r\n    const email = localStorage.getItem(\"userEmail\");\r\n\r\n    useEffect(() => {\r\n        dispatch(MyInfo(cookieValue[1],email));\r\n    },[])\r\n\r\n    const onClickBut = () => {\r\n        console.log(\"클릭함\");\r\n    }\r\n\r\n    const onClickUpdate = () => {\r\n        console.log(\"클릭함\");\r\n        if( !name.value || !organization.value || !password.value ) {\r\n            alert(\"모두다 입력하세요\");\r\n        }\r\n        let body = {\r\n            pk:email,\r\n            name:name.value,\r\n            authority:props.authority,\r\n            email,\r\n            organization: organization.value,\r\n            password: password.value\r\n        }\r\n        axios.post(`https://1hour.school/api/v1/members/update`, body, {\r\n            headers: {\r\n                Authorization: cookieValue[1]\r\n            }\r\n        }).then(response => {console.log(response.data)});\r\n        console.log(body,\"body\");\r\n    }\r\n    return(\r\n        <>\r\n            <Navigation />\r\n            <Container>\r\n                <Wrapper>\r\n                    <Header>\r\n                        <FontTitle>마이페이지</FontTitle>\r\n                        <FontRegion>\r\n                            <FontText>\r\n                                나의정보\r\n                            </FontText>\r\n                        </FontRegion>\r\n                    </Header>\r\n                    <Main>\r\n                        <WrapDIV>\r\n                            <Ptext>회원이름</Ptext>\r\n                            <Input\r\n                                type=\"text\"\r\n                                {...name}\r\n                                placeholder={data?.name ? data.name : \"없다\"} />\r\n                            <Ptext>회원타입</Ptext>\r\n                            <Input readOnly value=\"선생님\" />\r\n                        </WrapDIV>\r\n                        <WrapDIV>\r\n                            <Ptext>기관</Ptext>\r\n                            <Input \r\n                                type=\"text\"\r\n                                placeholder={data?.organization ? data?.organization : \"없다\"} \r\n                                {...organization}\r\n                            />\r\n                            <Ptext>학번</Ptext>\r\n                            <Input\r\n                                readOnly value=\"없음\"\r\n                            />\r\n                        </WrapDIV>\r\n                        <WrapDIV>\r\n                            <Ptext>메일주소</Ptext>\r\n                            <Input\r\n                                readOnly value={data?.email ? data.email : \"없다\"} />\r\n                        </WrapDIV>\r\n                        <WrapDIV>\r\n                            <Ptext>비밀번호</Ptext>\r\n                            <Input type=\"password\" {...password} />\r\n                        </WrapDIV>\r\n                        <WrapBut>\r\n                            <Button1 onClick={onClickUpdate} text=\"수정하기\" size=\"10%\" heightSize=\"62%\" color=\"rgb(0, 116, 201)\" />\r\n                            <Button1 onClick={onClickBut} text=\"탈퇴하기\" size=\"10%\" heightSize=\"62%\" color=\"rgb(255, 119, 119)\" />\r\n                        </WrapBut>\r\n                            <p>회원타입을 수정하려면 고객센터에 문의해주세요.</p>\r\n                    </Main>\r\n                </Wrapper>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MyPage;",["316","317"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Test\\TestAll.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\hoc\\auth.tsx",["318","319","320"],"import React,{ useEffect } from 'react';\r\nexport default function (SpecificComponent:any, option:number, adminRoute:boolean = false) {\r\n    // 0 = 관리자 adminRoute 0 ,1,2\r\n    // 1 = 선생 false\r\n    // 2 = 학생 null\r\n    // 3\r\n    function AuthenticationCheck(props:any) {\r\n\r\n        const authority = Number(localStorage.getItem(\"authority\")); //typeof() string 0 1 2    \r\n         \r\n        const cookieValue = document.cookie.split('=');\r\n        \r\n        useEffect(() => {\r\n            //로그인 안된상태\r\n            if(cookieValue[0] === \"\") {\r\n                //로그인 안됐는데 어딘가로 이동하려고할대\r\n                if( option ) {\r\n                    alert(\"로그인을 먼저하세요\");\r\n                    props.history.push(\"/login\");\r\n                }\r\n            } else if(cookieValue[0] !== \"\") {\r\n                //로그인 해서(토큰있고) 로그인페이지로 가려고할떄\r\n                if(option === 4) {\r\n                    alert(\"로그인했는데 글로 갈수없어\");\r\n                    if( authority === 0) {\r\n                        props.history.push(\"/admin/AdminMainPage\");\r\n                    } else if( authority === 1) {\r\n                        props.history.push(\"/dashboard\");\r\n                    } else if( authority === 2) {\r\n                        props.history.push(\"/student/MainDashBoard\");\r\n                    }\r\n                }\r\n            }\r\n        },[cookieValue[0],authority])\r\n\r\n\r\n        if(cookieValue[0] !== \"\") {\r\n            //로그인했고\r\n            if(authority === 0 && !adminRoute ) {\r\n                console.log(\"여기는 오니\");\r\n                if(authority !== option) {\r\n                    alert(\"관리자가 이동할 수 없는페이지\");\r\n                    props.history.push(\"/admin/AdminMainPage\");\r\n                }\r\n            } else if(authority === 1 && adminRoute ) {\r\n                if(authority !== option) {\r\n                    alert(\"선생님이 이동할 수 없는페이지\");\r\n                    props.history.push(\"/dashboard\");\r\n                }\r\n            } else if(authority === 2 && !adminRoute ) {\r\n                if(authority !== option) {\r\n                    alert(\"학생이 이동할 수 없는페이지\");\r\n                    props.history.push(\"/student/MainDashBoard\");\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n       \r\n        return(\r\n            <SpecificComponent {...props} authority={authority} cookieValue={cookieValue} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Test\\TestTeacher.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\teacher\\DashBoard\\DashBoardPage.tsx",["321","322","323","324","325"],"import React,{ useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Navigation from '../../components/Navigation';\r\nimport styled from 'styled-components';\r\nimport Banner from './Banner';\r\nimport CategoryModule from '../../utils/Category/CategoryModule';\r\nimport Input1 from '../../utils/Input/Input';\r\nimport Button1 from '../../utils/Button1';\r\nimport { DashBoardData, SearchData } from '../../_actions/user_action';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../_reducers';\r\n\r\nconst Container = styled.div`\r\n    overflow-y:scroll;\r\n`;\r\n\r\n\r\n\r\nconst SearchSection = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 50px;\r\n    :nth-child(2) {\r\n        margin-right:10px;\r\n    }\r\n    :last-child {\r\n        margin-left:10px;\r\n    }\r\n`;\r\n\r\nconst MainSection = styled.div`\r\n    margin-bottom: 10px;\r\n    margin-left: 10%;\r\n    margin-right: 10%;\r\n`;\r\n\r\nconst MainTitle = styled.div`\r\n    height: 50px;\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst MainBody = styled.div`\r\n    display:flex;\r\n`;\r\n\r\n\r\nconst DashBoardPage: React.FC = (props:any) => {\r\n\r\n    \r\n\r\n    // let cookieValue = props.cookieValue; //string[]\r\n    const cookieValue = document.cookie.split('=');\r\n    // console.log(cookieValue,\"여기지나냐\");\r\n    \r\n    const dispatch = useDispatch();\r\n    const Data = useSelector((state:RootState) => state);\r\n    // console.log(Data?.user?.myList?.data?.list[0].contents,\"data\");\r\n\r\n    // const listARepla = Data?.user?.myList?.data?.list[0].contents;\r\n    \r\n\r\n    \r\n    const [data, setData] = useState<any>([]);\r\n    const [search, setSearch] = useState<string>(\"\");\r\n\r\n\r\n    const [list1, setList1] = useState<any>([]);\r\n    const [list2, setList2] = useState<any>([]);\r\n    const listA = list1?.contents;\r\n    const listB = list2?.contents;\r\n    \r\n    useEffect(() => {\r\n        \r\n        axios.get('https://1hour.school/api/v1/dashboard/playlist', {\r\n                headers: {\r\n                    Authorization: cookieValue[1]\r\n                }\r\n            }).then(response => {\r\n                if(response.data.status === 200) {\r\n                    setData(response?.data);\r\n                    setList1(response?.data?.data?.list[0]);\r\n                    setList2(response?.data?.data?.list[1]);\r\n                } else if( response.data.status === 401 ) {\r\n                    return alert(\"401error\");\r\n                } else {\r\n                    console.log(\"그외\");\r\n                }\r\n            });\r\n        // dispatch(DashBoardData(props.cookieValue[1]));\r\n    },[cookieValue[1]])\r\n\r\n\r\n\r\n    const onSearch = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    \r\n    //검색하면 데이터 불러옴a\r\n    const onSearchButton = (e:any) => {\r\n        console.log(search,\"search\"); \r\n        dispatch(SearchData(cookieValue[1],search))\r\n        props.history.push(`/CourseMoreViewPage?categoriespk=&categoriesname=&keyword=${search}&type=KEYWORD`);\r\n    }\r\n\r\n    \r\n    const dummyData:any = [];\r\n    return(\r\n        <>\r\n        <Navigation />\r\n            <Container>\r\n                <Banner cookieValue={ cookieValue }/>\r\n                <SearchSection>\r\n                    <CategoryModule dummyData={dummyData} />\r\n                    <div style={{\r\n                        border:\"1px solid black\",\r\n                        marginRight: \"10px\",\r\n                        padding: \"1px\"\r\n                    }}>\r\n                        <Input1 placeholder=\"검색어를 입력하세요\" size=\"500px\" onChange={onSearch} type=\"text\" value={search}/>\r\n                    </div>\r\n                    <Button1 onClick={onSearchButton} size=\"10%\" text=\"검색\" />\r\n                </SearchSection>\r\n                    <MainSection>\r\n                        <MainTitle>\r\n                            <p>{list1.name}</p>\r\n                            <p>더보기</p>\r\n                        </MainTitle>\r\n                        <MainBody>\r\n                            <div style={{\r\n                                height:\"300px\",\r\n                                display:\"flex\",\r\n                                flexDirection:\"row\",\r\n                            }}>\r\n                                {listA && listA.map((content:any,index:any) => {\r\n                                    \r\n                                    // const str = \"https://www.youtube.com/watch?v=\"; //11개의 아이디,32개의글자\r\n                                    const suburl = content.url.slice(32,43);\r\n\r\n                                    return(\r\n                                        <div \r\n                                            key={index}\r\n                                        >\r\n                                            <img width=\"100%\" src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"Logo\" height=\"150px\" \r\n                                                style={{\r\n                                                    margin:\"10px\",\r\n                                                    padding:\"10px\"\r\n                                                }}/>\r\n                                            <p>{content?.title}</p>\r\n                                            <p>{content?.youtubeTitle?.slice(0,31)}...</p>\r\n                                            <div>\r\n                                                <label>단어</label>\r\n                                                <label>문장</label>\r\n                                                <label>더빙</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </MainBody>\r\n                    </MainSection>\r\n                    {/* 하단 */}\r\n                    <MainSection>\r\n                        <MainTitle>\r\n                            <p>{list2.name}</p>\r\n                            <p>더보기</p>\r\n                        </MainTitle>\r\n                        <MainBody>\r\n                            <div style={{\r\n                                height:\"300px\",\r\n                                display:\"flex\",\r\n                                flexDirection:\"row\",\r\n                            }}>\r\n                                {listB && listB.map((content:any,index:any) => {\r\n                                    // console.log(content,\"listB\");\r\n                                    // const str = \"https://www.youtube.com/watch?v=\"; //11개의 아이디,32개의글자\r\n                                    const suburl = content.url.slice(32,43);\r\n\r\n                                    return (\r\n                                        <div \r\n                                            key={index}\r\n                                        >\r\n                                            <img width=\"100%\" src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"Logo\" height=\"150px\" \r\n                                                style={{\r\n                                                    margin:\"10px\",\r\n                                                    padding:\"10px\"\r\n                                                }}/>\r\n                                            <p>{content?.title}</p>\r\n                                            <p>{content?.youtubeTitle?.slice(0,31)}</p>\r\n                                            <div>\r\n                                                <label>단어</label>\r\n                                                <label>문장</label>\r\n                                                <label>더빙</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </MainBody>\r\n                    </MainSection>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DashBoardPage;","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\teacher\\DashBoard\\CourseMoreViewPage.tsx",["326","327"],"import React,{useState, useEffect} from 'react';\r\nimport queryString from 'query-string';\r\nimport Navigation from '../../components/Navigation';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../_reducers';\r\nimport styled from 'styled-components';\r\nimport Banner from './Banner';\r\nimport Button1 from '../../utils/Button1';\r\nimport Input1 from '../../utils/Input/Input';\r\nimport { SearchByCategory, SearchData } from '../../_actions/user_action';\r\n\r\n\r\n\r\nconst Container = styled.div`\r\n    overflow-y:scroll;\r\n`;\r\n\r\nconst SearchSection = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 50px;\r\n    :nth-child(2) {\r\n        margin-right:10px;\r\n    }\r\n    :last-child {\r\n        margin-left:10px;\r\n    }\r\n`;\r\n\r\nconst MainSection = styled.div`\r\n    margin-bottom: 10px;\r\n    margin-left: 10%;\r\n    margin-right: 10%;\r\n`;\r\n\r\nconst MainTitle = styled.div`\r\n    height: 50px;\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst MainBody = styled.div`\r\n    display:flex;\r\n`;\r\n\r\n\r\n\r\n\r\nconst CoursMoreViewPage:React.FC = (props:any) => {\r\n\r\n    const query = queryString.parse(props.location.search);\r\n\r\n    const dispatch = useDispatch();\r\n    const Data = useSelector((state:RootState) => state?.user?.data?.data?.contents);\r\n    const CategoryData = useSelector((state:RootState) => state?.user.searchCategory?.data?.contents);\r\n\r\n    console.log(CategoryData,\"이거잉너아나\"); //category일때옴\r\n    \r\n    \r\n    \r\n    // auth hoc만들어서 한번에 검증해버릴거임 귀차나\r\n    const cookieValue = document.cookie.split('=');\r\n    \r\n    const [search, setSearch] = useState<string>(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        const selected = 0;\r\n        {query.keyword ? dispatch(SearchData(cookieValue[1],query.keyword)) :\r\n            dispatch(SearchByCategory(cookieValue[1],selected ,query.categoriespk));\r\n        }  \r\n    },[dispatch,SearchByCategory,SearchData])\r\n\r\n\r\n    const onSearch = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    //검색하면 데이터 불러옴\r\n    const onSearchButton = (e:any) => {\r\n        dispatch(SearchData(cookieValue[1],search))\r\n        props.history.push(`/CourseMoreViewPage?categoriespk=&categoriesname=&keyword=${search}&type=KEYWORD`);\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <Navigation />\r\n            <Container>\r\n                <Banner cookieValue={cookieValue}/> \r\n                <SearchSection>\r\n                    <div style={{\r\n                        border:\"1px solid black\",\r\n                        marginRight: \"10px\",\r\n                        padding: \"1px\"\r\n                    }}>\r\n                        <Input1 placeholder=\"검색어를 입력하세요\" size=\"500px\" onChange={onSearch} type=\"text\" value={search}/>\r\n                    </div>\r\n                    <Button1 onClick={onSearchButton} size=\"10%\" text=\"검색\" />\r\n                </SearchSection>\r\n                <MainSection>\r\n                    <>\r\n                        {query.keyword ? <>\r\n                        <MainTitle>\r\n                            <p>{query?.keyword}의 검색결과</p>\r\n                            <p>더보기</p>\r\n                        </MainTitle>\r\n                        <MainBody>\r\n                            <div style={{\r\n                                height:\"300px\",\r\n                                display:\"flex\",\r\n                                flexDirection:\"row\",\r\n                            }}>\r\n                                {Data && Data.map((content:any,index:any) => {\r\n                                    const suburl = content.url.slice(32,43);\r\n\r\n                                    return(\r\n                                        <div \r\n                                            key={index}\r\n                                        >\r\n                                            <img width=\"100%\" src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"Logo\" height=\"150px\" \r\n                                                style={{\r\n                                                    margin:\"10px\",\r\n                                                    padding:\"10px\"\r\n                                                }}/>\r\n                                            <p>{content?.title}</p>\r\n                                            <p>{content?.youtubeTitle?.slice(0,31)}...</p>\r\n                                            <div>\r\n                                                <label>단어</label>\r\n                                                <label>문장</label>\r\n                                                <label>더빙</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </MainBody></> :\r\n                            <>\r\n                            <MainTitle>\r\n                                <p>{query?.categoriesname}의 검색결과</p>\r\n                                <p>더보기</p>\r\n                            </MainTitle>\r\n                            <MainBody>\r\n                                <div style={{\r\n                                    height:\"300px\",\r\n                                    display:\"flex\",\r\n                                    flexDirection:\"row\",\r\n                                }}>\r\n                                    {CategoryData && CategoryData.map((content:any,index:any) => {\r\n                                        const suburl = content.url.slice(32,43);\r\n    \r\n                                        return(\r\n                                            <div \r\n                                                key={index}\r\n                                            >\r\n                                                <img width=\"100%\" src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"Logo\" height=\"150px\" \r\n                                                    style={{\r\n                                                        margin:\"10px\",\r\n                                                        padding:\"10px\",\r\n                                                        maxWidth:\"220pt\"\r\n                                                    }}/>\r\n                                                <p>{content?.title}</p>\r\n                                                <p>{content?.youtubeTitle?.slice(0,31)}...</p>\r\n                                                <div>\r\n                                                    <label>단어</label>\r\n                                                    <label>문장</label>\r\n                                                    <label>더빙</label>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            </MainBody></>\r\n                        }\r\n                        </>\r\n                    </MainSection>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CoursMoreViewPage;","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\student\\StudentMainPage.tsx",["328","329","330"],"import React,{useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport NavigationStudent from '../components/NavigationStudent';\r\nimport Banner from '../teacher/DashBoard/Banner';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../_reducers';\r\nimport { SearchData } from '../_actions/user_action';\r\nimport Input1 from '../utils/Input/Input';\r\nimport Button1 from '../utils/Button1';\r\nimport StudentCategoryModule from './StudentCategoryModule';\r\n\r\n\r\nconst Container = styled.div`\r\n    overflow-y:scroll;\r\n`;\r\n\r\n\r\n\r\nconst SearchSection = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 50px;\r\n    :nth-child(2) {\r\n        margin-right:10px;\r\n    }\r\n    :last-child {\r\n        margin-left:10px;\r\n    }\r\n`;\r\n\r\nconst MainSection = styled.div`\r\n    margin-bottom: 10px;\r\n    margin-left: 10%;\r\n    margin-right: 10%;\r\n`;\r\n\r\nconst MainTitle = styled.div`\r\n    height: 50px;\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst MainBody = styled.div`\r\n    display:flex;\r\n`;\r\n\r\n\r\nconst StudentMainPage = (props:any) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const Data = useSelector((state:RootState) => state);\r\n    const cookieValue = document.cookie.split('='); //string[]\r\n    \r\n    \r\n    const [data, setData] = useState<any>([]);\r\n    const [search, setSearch] = useState<string>(\"\");\r\n\r\n\r\n    const [list1, setList1] = useState<any>([]);\r\n    const [list2, setList2] = useState<any>([]);\r\n    const listA = list1?.contents;\r\n    const listB = list2?.contents;\r\n    \r\n    useEffect(() => {\r\n        axios.get('https://1hour.school/api/v1/dashboard/playlist', {\r\n                headers: {\r\n                    Authorization: cookieValue[1]\r\n                }\r\n            }).then(response => {\r\n                if(response.data.status === 200) {\r\n                    setData(response.data);\r\n                    setList1(response.data.data.list[0]);\r\n                    setList2(response.data.data.list[1]);\r\n                } else {\r\n                    return alert(\"main error\")\r\n                }\r\n            });\r\n    },[setData])\r\n\r\n    const onSearch = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    \r\n    //검색하면 데이터 불러옴a\r\n    const onSearchButton = (e:any) => {\r\n        console.log(search,\"search\"); \r\n        dispatch(SearchData(cookieValue[1],search))\r\n        props.history.push(`/student/StudentCourseMoreViewPage?categoriespk=&categoriesname=&keyword=${search}&type=KEYWORD`);\r\n    }\r\n\r\n    const dummyData:any = [];\r\n    return(\r\n        <>\r\n        <NavigationStudent />\r\n            <Container>\r\n                <Banner cookieValue={cookieValue}/>\r\n                <SearchSection>\r\n                    <StudentCategoryModule dummyData={dummyData} />\r\n                    <div style={{\r\n                        border:\"1px solid black\",\r\n                        marginRight: \"10px\",\r\n                        padding: \"1px\"\r\n                    }}>\r\n                        <Input1 placeholder=\"검색어를 입력하세요\" size=\"500px\" onChange={onSearch} type=\"text\" value={search}/>\r\n                    </div>\r\n                    <Button1 onClick={onSearchButton} size=\"10%\" text=\"검색\" />\r\n                </SearchSection>\r\n                    <MainSection>\r\n                        <MainTitle>\r\n                            <p>{list1.name}</p>\r\n                            <p>더보기</p>\r\n                        </MainTitle>\r\n                        <MainBody>\r\n                            <div style={{\r\n                                height:\"300px\",\r\n                                display:\"flex\",\r\n                                flexDirection:\"row\",\r\n                            }}>\r\n                                {listA && listA.map((content:any,index:any) => {\r\n                                    \r\n                                    // const str = \"https://www.youtube.com/watch?v=\"; //11개의 아이디,32개의글자\r\n                                    const suburl = content.url.slice(32,43);\r\n\r\n                                    return(\r\n                                        <div \r\n                                            key={index}\r\n                                        >\r\n                                            <img width=\"100%\" src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"Logo\" height=\"150px\" \r\n                                                style={{\r\n                                                    margin:\"10px\",\r\n                                                    padding:\"10px\"\r\n                                                }}/>\r\n                                            <p>{content?.title}</p>\r\n                                            <p>{content?.youtubeTitle?.slice(0,31)}...</p>\r\n                                            <div>\r\n                                                <label>단어</label>\r\n                                                <label>문장</label>\r\n                                                <label>더빙</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </MainBody>\r\n                    </MainSection>\r\n                    {/* 하단 */}\r\n                    <MainSection>\r\n                        <MainTitle>\r\n                            <p>{list2.name}</p>\r\n                            <p>더보기</p>\r\n                        </MainTitle>\r\n                        <MainBody>\r\n                            <div style={{\r\n                                height:\"300px\",\r\n                                display:\"flex\",\r\n                                flexDirection:\"row\",\r\n                            }}>\r\n                                {listB && listB.map((content:any,index:any) => {\r\n                                    // console.log(content,\"listB\");\r\n                                    // const str = \"https://www.youtube.com/watch?v=\"; //11개의 아이디,32개의글자\r\n                                    const suburl = content.url.slice(32,43);\r\n\r\n                                    return (\r\n                                        <div \r\n                                            key={index}\r\n                                        >\r\n                                            <img width=\"100%\" src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"Logo\" height=\"150px\" \r\n                                                style={{\r\n                                                    margin:\"10px\",\r\n                                                    padding:\"10px\"\r\n                                                }}/>\r\n                                            <p>{content?.title}</p>\r\n                                            <p>{content?.youtubeTitle?.slice(0,31)}</p>\r\n                                            <div>\r\n                                                <label>단어</label>\r\n                                                <label>문장</label>\r\n                                                <label>더빙</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </MainBody>\r\n                    </MainSection>\r\n            </Container>\r\n        </>\r\n    );\r\n   \r\n}\r\n\r\nexport default StudentMainPage;","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\components\\NavigationStudent.tsx",["331"],"import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport header from '../Images/images/images/headerLogo.png';\r\n\r\nconst Container = styled.div`\r\n    height: 60px;\r\n    display: flex;\r\n    width:100%;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid black;\r\n`;\r\n\r\nconst Section = styled.div`\r\n    display:flex;\r\n    align-items: center;\r\n    width:33%;\r\n    height:100%;\r\n    justify-content:center;\r\n`;\r\n\r\nconst Img = styled.img`\r\n    width:40px;\r\n    margin-left:15px;\r\n    position: relative;\r\n    top: 0;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst HeadList = styled.div`\r\n    white-space:nowrap;\r\n    display:flex;\r\n    justify-content: space-evenly;\r\n`;\r\nconst HeadListText = styled.p`\r\n    font-size: 10px;\r\n    margin: 10px;\r\n`;\r\n\r\nconst Modal = styled.div`\r\n    position: relative;\r\n    top: 62px;\r\n    right: 60px;\r\n`;\r\n\r\nconst NavigationStudent = (props:any) => {\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const organizationName = localStorage.getItem(\"organizationName\");\r\n    const ShowModal = () => {\r\n        console.log(showModal)\r\n        setShowModal(!showModal);\r\n    }\r\n\r\n    const Logout = () => {\r\n        console.log(\"로그아웃\");\r\n        document.cookie = \"usertoken\" + '=; expires=Thu, 01 Jan 1999 00:00:10 GMT;'; // 과거의 만료일로 되돌리는 것임\r\n        localStorage.clear();\r\n        props.history.push(\"\");\r\n    }\r\n    return(\r\n        <Container>\r\n            <Section> \r\n                <Link to=\"/student/MainDashBoard\">\r\n                    <Img src={header} alt=\"Logo\" width=\"40px\" /> &nbsp; | &nbsp;\r\n                </Link>\r\n                <div>\r\n                    <Link to=\"/student/MainDashBoard\">\r\n                        <HeadListText>{organizationName}</HeadListText>\r\n                    </Link>\r\n                </div>\r\n            </Section>\r\n            <Section>\r\n                <HeadList>\r\n                    <HeadListText><Link to=\"/student/MainDashBoard\">수업보기</Link></HeadListText>\r\n                </HeadList>\r\n                <HeadList>\r\n                    <HeadListText><Link to=\"/student/MyReport\">나의리포트</Link></HeadListText>\r\n                </HeadList>\r\n            </Section>\r\n            <Section>\r\n                <Img onClick={() => ShowModal()} src=\"../userShadow.png\" alt=\"Logo\" width=\"40px\" />\r\n                    {!showModal \r\n                        ? null \r\n                    : \r\n                        <Modal>\r\n                            <Link to=\"/student/StudentMyPage\">\r\n                                <p>마이페이지</p>\r\n                            </Link>\r\n                            <p style={{\r\n                                cursor: 'pointer',\r\n                                fontSize: '1em'\r\n                            }} onClick={Logout}>로그아웃</p>\r\n                        </Modal>\r\n                    }\r\n            </Section>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default withRouter(NavigationStudent);","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\student\\StudentCourseMoreViewPage.tsx",["332","333"],"import React,{useState, useEffect} from 'react';\r\nimport queryString from 'query-string';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport NavigationStudent from '../components/NavigationStudent';\r\nimport { SearchByCategory, SearchData } from '../_actions/user_action';\r\nimport Input1 from '../utils/Input/Input';\r\nimport Banner from '../teacher/DashBoard/Banner';\r\nimport { RootState } from '../_reducers';\r\nimport Button1 from '../utils/Button1';\r\n\r\n\r\nconst Container = styled.div`\r\n    overflow-y:scroll;\r\n`;\r\n\r\nconst SearchSection = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 50px;\r\n    :nth-child(2) {\r\n        margin-right:10px;\r\n    }\r\n    :last-child {\r\n        margin-left:10px;\r\n    }\r\n`;\r\n\r\nconst MainSection = styled.div`\r\n    margin-bottom: 10px;\r\n    margin-left: 10%;\r\n    margin-right: 10%;\r\n`;\r\n\r\nconst MainTitle = styled.div`\r\n    height: 50px;\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst MainBody = styled.div`\r\n    display:flex;\r\n`;\r\n\r\n\r\n\r\n\r\nconst StudentCourseMoreViewPage:React.FC = (props:any) => {\r\n\r\n    const query = queryString.parse(props.location.search);\r\n\r\n    const dispatch = useDispatch();\r\n    const Data = useSelector((state:RootState) => state?.user?.data?.data?.contents);\r\n    const CategoryData = useSelector((state:RootState) => state?.user.searchCategory?.data?.contents);\r\n\r\n    console.log(CategoryData,\"이거잉너아나\"); //category일때옴\r\n    \r\n    \r\n    \r\n    // auth hoc만들어서 한번에 검증해버릴거임 귀차나\r\n    const cookieValue = document.cookie.split('=');\r\n    \r\n    const [search, setSearch] = useState<string>(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        const selected = 0;\r\n        {query.keyword ? dispatch(SearchData(cookieValue[1],query.keyword)) :\r\n            dispatch(SearchByCategory(cookieValue[1],selected ,query.categoriespk));\r\n        }  \r\n    },[dispatch,SearchByCategory,SearchData])\r\n\r\n\r\n    const onSearch = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    //검색하면 데이터 불러옴\r\n    const onSearchButton = (e:any) => {\r\n        dispatch(SearchData(cookieValue[1],search))\r\n        props.history.push(`/student/StudentCourseMoreViewPage?categoriespk=&categoriesname=&keyword=${search}&type=KEYWORD`);\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <NavigationStudent />\r\n            <Container>\r\n                <Banner cookieValue={cookieValue}/> \r\n                <SearchSection>\r\n                    <div style={{\r\n                        border:\"1px solid black\",\r\n                        marginRight: \"10px\",\r\n                        padding: \"1px\"\r\n                    }}>\r\n                        <Input1 placeholder=\"검색어를 입력하세요\" size=\"500px\" onChange={onSearch} type=\"text\" value={search}/>\r\n                    </div>\r\n                    <Button1 onClick={onSearchButton} size=\"10%\" text=\"검색\" />\r\n                </SearchSection>\r\n                <MainSection>\r\n                    <>\r\n                        {query.keyword ? <>\r\n                        <MainTitle>\r\n                            <p>{query?.keyword}의 검색결과</p>\r\n                            <p>더보기</p>\r\n                        </MainTitle>\r\n                        <MainBody>\r\n                            <div style={{\r\n                                height:\"300px\",\r\n                                display:\"flex\",\r\n                                flexDirection:\"row\",\r\n                            }}>\r\n                                {Data && Data.map((content:any,index:any) => {\r\n                                    const suburl = content.url.slice(32,43);\r\n\r\n                                    return(\r\n                                        <div \r\n                                            key={index}\r\n                                        >\r\n                                            <img width=\"100%\" src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"Logo\" height=\"150px\" \r\n                                                style={{\r\n                                                    margin:\"10px\",\r\n                                                    padding:\"10px\"\r\n                                                }}/>\r\n                                            <p>{content?.title}</p>\r\n                                            <p>{content?.youtubeTitle?.slice(0,31)}...</p>\r\n                                            <div>\r\n                                                <label>단어</label>\r\n                                                <label>문장</label>\r\n                                                <label>더빙</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </MainBody></> :\r\n                            <>\r\n                            <MainTitle>\r\n                                <p>{query?.categoriesname}의 검색결과</p>\r\n                                <p>더보기</p>\r\n                            </MainTitle>\r\n                            <MainBody>\r\n                                <div style={{\r\n                                    height:\"300px\",\r\n                                    display:\"flex\",\r\n                                    flexDirection:\"row\",\r\n                                }}>\r\n                                    {CategoryData && CategoryData.map((content:any,index:any) => {\r\n                                        const suburl = content.url.slice(32,43);\r\n    \r\n                                        return(\r\n                                            <div \r\n                                                key={index}\r\n                                            >\r\n                                                <img width=\"100%\" src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"Logo\" height=\"150px\" \r\n                                                    style={{\r\n                                                        margin:\"10px\",\r\n                                                        padding:\"10px\",\r\n                                                        maxWidth:\"220pt\"\r\n                                                    }}/>\r\n                                                <p>{content?.title}</p>\r\n                                                <p>{content?.youtubeTitle?.slice(0,31)}...</p>\r\n                                                <div>\r\n                                                    <label>단어</label>\r\n                                                    <label>문장</label>\r\n                                                    <label>더빙</label>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            </MainBody></>\r\n                        }\r\n                        </>\r\n                    </MainSection>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StudentCourseMoreViewPage;",["334","335"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\student\\StudentCategoryModule.tsx",["336","337","338","339"],"import React,{useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { categoryData, SearchByCategory } from '../_actions/user_action';\r\nimport {RootState} from '../../src/_reducers';\r\n\r\n\r\nconst CategoryHead = styled.select`\r\n    width: 10%;\r\n    height: 50%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    font-weight: bold;\r\n    font-size: 15px;\r\n    font-family: \"Helvetica Neue\";\r\n    margin-left: 5px;\r\n    margin-right: 1em;\r\n    cursor: pointer;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst Text = styled.option`\r\n    font-size:1em;\r\n`;\r\n\r\n\r\n\r\nconst StudentCategoryModule = (props:any) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const data = useSelector((state:RootState) => state?.user?.category?.data);\r\n    const cookieValue = document.cookie.split('=');\r\n\r\n    useEffect(() => {\r\n        dispatch(categoryData(cookieValue[1]));\r\n    },[])\r\n\r\n\r\n    const [pk,setcategorypk] = useState(\"\");\r\n    const [categoryname, setcategoryName] = useState(\"\");\r\n\r\n    const selected = 0;\r\n    \r\n    \r\n\r\n    const onClickSomething = (e:any) => {\r\n        setcategorypk(e.target.value);\r\n        setcategoryName(data[e.target.value-1].name);\r\n        const pknum = e.target.value; //pk\r\n        const categoryname = data[e.target.value-1].name;\r\n        dispatch(SearchByCategory(cookieValue[1],selected,pknum));\r\n        props.history.push(`/student/StudentCourseMoreViewPage?categoriespk=${pknum}&categoriesname=${categoryname}&keyword=&type=CATEGORY`);\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <CategoryHead onChange={onClickSomething} value={pk}> \r\n                <Text>카테고리</Text>\r\n                {data && data.map((item:any, index:any) => {\r\n                    return(\r\n                        <Text value={item.category} key={index}>{item.name}</Text>\r\n                    );\r\n                })}\r\n            </CategoryHead>    \r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(StudentCategoryModule);","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\student\\StudentMyPage.tsx",["340","341"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\teacher\\DashBoard\\CourseManage.tsx",["342","343","344"],"import React,{useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport Navigation from '../../components/Navigation';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../_reducers';\r\nimport { deadlineInfo } from '../../_actions/user_action';\r\nimport  Button1  from '../../utils/Button1';\r\nimport { Gear } from '../../utils/Icons';\r\nimport axios from 'axios';\r\n\r\nconst Container = styled.section`\r\n    min-height: 75vh;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    width: 70%;\r\n    height: 100%;\r\n    margin-top: 7%;\r\n    align-self: center;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    height: 15%;\r\n`;\r\n\r\n\r\nconst FontTitle = styled.div`\r\n    height: 50%;\r\n    font-weight: 600;\r\n    font-size: 26pt;\r\n`;\r\n\r\nconst FontRegion = styled.div`\r\n    height: 50%;\r\n    border-bottom: 1px solid black;\r\n    display: flex;\r\n    padding: 1rem;\r\n`;\r\n\r\nconst FontText = styled.span`\r\n    font-weight: 500;\r\n    font-size: 22pt;\r\n    text-align: left;\r\n    margin-left: 10px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        font-size: 24pt;\r\n        font-weight:bold;\r\n        border-bottom: 7px solid yellow;\r\n    }\r\n`;\r\n\r\nconst MainWrapper = styled.div`\r\n    display:flex;\r\n    justify-content:center;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst Main = styled.div`\r\n    height: 200px;\r\n    display:flex;\r\n    justify-content:space-between;\r\n    width: 80%;\r\n    padding: 1rem 0;\r\n    border-bottom: 1px solid black;\r\n    position: relative;\r\n`;\r\n\r\nconst Img = styled.img`\r\n    width:132pt;\r\n`;\r\n\r\nconst Middletitle = styled.div`\r\n    width: 30%;\r\n    height: 100%;\r\n`;\r\n\r\nconst RightTitle = styled.div`\r\n    width: 42%;\r\n    height: 100%;\r\n    display:flex;\r\n    justify-content:space-evenly;\r\n    align-items:center;\r\n`;\r\n\r\nconst IconPosi = styled.div`\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 20px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Paging = styled.div`\r\n    margin: 10px auto;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CourseManage:React.FC = (props:any) => {\r\n\r\n\r\n    const deadlineInfoData = useSelector((state:RootState) => state.user.deadlineInfo?.data);\r\n    const dispatch = useDispatch();\r\n    console.log(deadlineInfoData);\r\n\r\n    //closed: false 진행중,  closed: true  마감\r\n    const [closed, setClosed] = useState<boolean>(true);\r\n    const [page,setPage] = useState<Number>(1);\r\n\r\n    const cookieValue = document.cookie.split('=');\r\n\r\n    useEffect(() => {\r\n        dispatch(deadlineInfo(cookieValue[1], closed, page));\r\n        \r\n    }, [])\r\n\r\n    \r\n\r\n\r\n    //버튼 변화 진행중버튼클릭\r\n    const closedStatusFalse = () => {\r\n        console.log(\"진행중클릭\"); // false\r\n        setClosed(false)\r\n        let closed = false;\r\n        dispatch(deadlineInfo(cookieValue[1], closed, page))\r\n        console.log(closed,\"false\");\r\n    }\r\n    // 마감 버튼 클릭\r\n    const closedStatusTrue = () => {\r\n        console.log(\"마감클릭\"); //true\r\n        setClosed(true);\r\n        let closed = true;\r\n        dispatch(deadlineInfo(cookieValue[1], closed, page))\r\n        console.log(closed,\"true\");\r\n    }\r\n\r\n    const onClick = () => {\r\n        console.log(\"클릭\");\r\n    }\r\n    return(\r\n        <>\r\n        <Navigation />\r\n        <Container>\r\n           <Wrapper>\r\n               <Header>\r\n                    <FontTitle>과제마감 관리</FontTitle>\r\n                    <FontRegion>\r\n                        <FontText onClick={closedStatusFalse}>\r\n                            진행중\r\n                        </FontText>\r\n                        <FontText onClick={closedStatusTrue}>\r\n                            마감\r\n                        </FontText>\r\n                    </FontRegion>\r\n               </Header>\r\n               {closed ? \r\n                    deadlineInfoData?.rows.map((deadInfo:any,index:number) => {\r\n                        console.log(deadInfo,\"url봅기\");\r\n                        const suburl = deadInfo.url.slice(32,43);\r\n                        return(\r\n                            <MainWrapper key={index}>\r\n                                <Main>\r\n                                    <Img src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"Logo\"/>\r\n                                    <Middletitle>\r\n                                        <div>\r\n                                            {deadInfo.deadline}\r\n                                        </div>\r\n                                        <div>\r\n                                            <span>{deadInfo.title}</span>\r\n                                            {\r\n                                                deadInfo.youtubeTitle.length >= 20 ? \r\n                                                <p>{deadInfo.youtubeTitle.slice(0,20)}...</p>\r\n                                                : <p>{deadInfo.youtubeTitle}</p>\r\n                                            }\r\n                                        \r\n                                        </div>\r\n                                        <div>\r\n                                            단어, 문장, 더빙\r\n                                        </div>\r\n                                        <div>\r\n                                            {deadInfo.registered}\r\n                                        </div>\r\n                                    </Middletitle>\r\n                                    <RightTitle>\r\n                                        <div style={{marginRight:\"1rem\"}}>\r\n                                            <p>과제제출 현황</p>\r\n                                            <p>{deadInfo.carried}/{deadInfo.students}</p>\r\n                                        </div>\r\n                                        <Button1 onClick={onClick} text=\"학생 리포트\" size=\"7rem\" />\r\n                                        <IconPosi>\r\n                                            <Gear />\r\n                                        </IconPosi>\r\n                                    </RightTitle>\r\n                                </Main>\r\n                            </MainWrapper>\r\n                        );\r\n                    }) \r\n                    :\r\n                    <div>\r\n                        진행중\r\n                    </div>\r\n                }\r\n                <Paging>\r\n                    <div>1</div>\r\n                </Paging>\r\n            </Wrapper> \r\n        </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CourseManage;\r\n","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\student\\MyReport.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Calendar\\Calendar.jsx",[],["345","346"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\components\\Navigation.tsx",["347"],"import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport header from '../Images/images/images/headerLogo.png';\r\n\r\n\r\nconst Container = styled.div`\r\n    height: 60px;\r\n    display: flex;\r\n    width:100%;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid black;\r\n`;\r\n\r\nconst Section = styled.div`\r\n    display:flex;\r\n    align-items: center;\r\n    width:33%;\r\n    height:100%;\r\n    justify-content:center;\r\n`;\r\n\r\nconst Img = styled.img`\r\n    width:40px;\r\n    margin-left:15px;\r\n    position: relative;\r\n    top: 0;\r\n    cursor: pointer;\r\n`;\r\n\r\n\r\nconst HeadList = styled.div`\r\n    white-space:nowrap;\r\n    display:flex;\r\n    justify-content: space-evenly;\r\n`;\r\nconst HeadListText = styled.p`\r\n    font-size: 10px;\r\n    margin: 10px;\r\n`;\r\n\r\nconst Modal = styled.div`\r\n    position: relative;\r\n    top: 62px;\r\n    right: 60px;\r\n`;\r\nconst Navigation = (props:any) => {\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const organizationName = localStorage.getItem(\"organizationName\");\r\n    const ShowModal = () => {\r\n        console.log(showModal)\r\n        setShowModal(!showModal);\r\n    }\r\n\r\n    const Logout = () => {\r\n        console.log(\"로그아웃\");\r\n        document.cookie = \"usertoken\" + '=; expires=Thu, 01 Jan 1999 00:00:10 GMT;'; // 과거의 만료일로 되돌리는 것임\r\n        localStorage.clear();\r\n        props.history.push(\"\");\r\n    }\r\n    return(\r\n        <Container>\r\n            <Section> \r\n                <Link to=\"/dashboard\">\r\n                    <Img src={header} alt=\"Logo\" width=\"40px\" /> &nbsp; | &nbsp;\r\n                </Link>\r\n                <div>\r\n                    <Link to=\"/dashboard\">\r\n                        <HeadListText>{organizationName}</HeadListText>\r\n                    </Link>\r\n                </div>\r\n            </Section>\r\n            <Section>\r\n                <HeadList>\r\n                    <HeadListText><Link to=\"/dashboard\">수업보기</Link></HeadListText>\r\n                </HeadList>\r\n                <HeadList>\r\n                    <HeadListText><Link to=\"/admin/dashboard/showCourse\">수업제작</Link></HeadListText>\r\n                </HeadList>\r\n                <HeadList>\r\n                    <HeadListText><Link to=\"/course_manage\">수업관리</Link></HeadListText>\r\n                </HeadList>\r\n                <HeadList>\r\n                    <HeadListText><Link to=\"/admin/dashboard/showCourse\">학생관리</Link></HeadListText>\r\n                </HeadList>\r\n            </Section>\r\n            <Section>\r\n                <HeadList>\r\n                    <HeadListText>컨텐츠 만들기</HeadListText>\r\n                </HeadList>\r\n                <Img onClick={() => ShowModal()} src=\"../userShadow.png\" alt=\"Logo\" width=\"40px\" />\r\n                    {!showModal \r\n                        ? null \r\n                    : \r\n                        <Modal>\r\n                            <Link to=\"/myPage\">\r\n                                <p>마이페이지</p>\r\n                            </Link>\r\n                            <p style={{\r\n                                cursor: 'pointer',\r\n                                fontSize: '1em'\r\n                            }} onClick={Logout}>로그아웃</p>\r\n                        </Modal>\r\n                    }\r\n            </Section>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default withRouter(Navigation);",["348","349"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\teacher\\DashBoard\\Banner.tsx",["350"],"import React,{useEffect,useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\ninterface BannerInterface {\r\n    cookieValue: Array<string>\r\n}\r\n//딱 필요한것 만넘겨라\r\ninterface Props {\r\n    bannerImg: string\r\n}\r\n\r\n\r\nconst BannerWrapper = styled.div`\r\n    height: 6rem;\r\n    margin-top: 0.8rem;\r\n    padding: 1rem;\r\n`;\r\n\r\nconst BannerImg = styled.div`\r\n    background-image: url(${(props:Props) => props.bannerImg});\r\n    background-repeat: no-repeat;\r\n    background-size: inherit;\r\n    background-position: center center;\r\n    width:100%;\r\n    height:100%;\r\n`;\r\n\r\nconst Banner: React.FunctionComponent<BannerInterface> = ({cookieValue}) => {\r\n    const cookie = cookieValue[1];\r\n\r\n    const [bannerImg, setBannerImg] = useState<string>(\"\");\r\n    useEffect(() => {\r\n        axios.get('https://1hour.school/api/v1/dashboard/banner/keys', {\r\n            headers: {\r\n                Authorization: cookie\r\n            }\r\n        }).then(response => {\r\n            if(response.data.status === 200) {\r\n                console.log(response.data.data.img,\"response\");\r\n                setBannerImg(response.data.data.img);\r\n            } else {\r\n                return alert(\"banner error\")\r\n            }\r\n        });\r\n    },[])\r\n    return(\r\n        <BannerWrapper>\r\n            <a href=\"https://www.naver.com/\"><BannerImg bannerImg={bannerImg}></BannerImg></a>\r\n        </BannerWrapper>\r\n    );\r\n}\r\n\r\nexport default Banner;","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminMainPage.tsx",["351","352","353","354"],"import React,{ useEffect, useState } from 'react';\r\nimport NavigationAdmin from '../components/NavigationAdmin';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../_reducers';\r\nimport { SearchData } from '../_actions/user_action';\r\nimport Banner from '../teacher/DashBoard/Banner';\r\nimport Input1 from '../utils/Input/Input';\r\nimport Button1 from '../utils/Button1';\r\nimport Helmet from 'react-helmet';\r\nimport AdminCategoryModule from './AdminCategoryModule';\r\n\r\nconst Container = styled.div`\r\n`;\r\n\r\nconst SearchSection = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 50px;\r\n    :nth-child(2) {\r\n        margin-right:10px;\r\n    }\r\n    :last-child {\r\n        margin-left:10px;\r\n    }\r\n`;\r\n\r\nconst MainSection = styled.div`\r\n    margin-bottom: 10px;\r\n    margin-left: 10%;\r\n    margin-right: 10%;\r\n`;\r\n\r\nconst MainTitle = styled.div`\r\n    height: 50px;\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst MainBody = styled.div`\r\n    display:flex;\r\n`;\r\n\r\n\r\nconst AdminMainPage: React.FC = (props:any) => {\r\n\r\n\r\n    // let cookieValue = props.cookieValue; //string[]\r\n    const cookieValue = document.cookie.split('=');\r\n    // console.log(cookieValue,\"여기지나냐\");\r\n    \r\n    const dispatch = useDispatch();\r\n    const Data = useSelector((state:RootState) => state);\r\n    // console.log(Data?.user?.myList?.data?.list[0].contents,\"data\");\r\n\r\n    // const listARepla = Data?.user?.myList?.data?.list[0].contents;\r\n    \r\n\r\n    \r\n    const [data, setData] = useState<any>([]);\r\n    const [search, setSearch] = useState<string>(\"\");\r\n\r\n\r\n    const [list1, setList1] = useState<any>([]);\r\n    const [list2, setList2] = useState<any>([]);\r\n    const listA = list1?.contents;\r\n    const listB = list2?.contents;\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        axios.get('https://1hour.school/api/v1/dashboard/playlist', {\r\n                headers: {\r\n                    Authorization: cookieValue[1]\r\n                }\r\n            }).then(response => {\r\n                if(response.data.status === 200) {\r\n                    setData(response?.data);\r\n                    setList1(response?.data?.data?.list[0]);\r\n                    setList2(response?.data?.data?.list[1]);\r\n                } else if( response.data.status === 401 ) {\r\n                    return alert(\"401error\");\r\n                } else {\r\n                    console.log(\"그외\");\r\n                }\r\n            });\r\n        // dispatch(DashBoardData(props.cookieValue[1]));\r\n    },[cookieValue[1]])\r\n\r\n\r\n\r\n    const onSearch = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    \r\n    //검색하면 데이터 불러옴a\r\n    const onSearchButton = (e:any) => {\r\n        console.log(search,\"search\"); \r\n        dispatch(SearchData(cookieValue[1],search))\r\n        props.history.push(`/admin/AdminCourseMoreViewPage?categoriespk=&categoriesname=&keyword=${search}&type=KEYWORD`);\r\n    }\r\n\r\n    \r\n    const dummyData:any = [];\r\n    return(\r\n        <>\r\n        <Helmet>\r\n            <title>admin | MainPage</title>\r\n        </Helmet>\r\n        <NavigationAdmin />\r\n            <Container>\r\n                <Banner cookieValue={ cookieValue }/>\r\n                <SearchSection>\r\n                    <AdminCategoryModule dummyData={dummyData} />\r\n                    <div style={{\r\n                        border:\"1px solid black\",\r\n                        marginRight: \"10px\",\r\n                        padding: \"1px\"\r\n                    }}>\r\n                        <Input1 placeholder=\"검색어를 입력하세요\" size=\"500px\" onChange={onSearch} type=\"text\" value={search}/>\r\n                    </div>\r\n                    <Button1 onClick={onSearchButton} size=\"10%\" text=\"검색\" />\r\n                </SearchSection>\r\n                    <MainSection>\r\n                        <MainTitle>\r\n                            <p>{list1.name}</p>\r\n                            <p>더보기</p>\r\n                        </MainTitle>\r\n                        <MainBody>\r\n                            <div style={{\r\n                                height:\"300px\",\r\n                                display:\"flex\",\r\n                                flexDirection:\"row\",\r\n                            }}>\r\n                                {listA && listA.map((content:any,index:any) => {\r\n                                    \r\n                                    // const str = \"https://www.youtube.com/watch?v=\"; //11개의 아이디,32개의글자\r\n                                    const suburl = content.url.slice(32,43);\r\n\r\n                                    return(\r\n                                        <div \r\n                                            key={index}\r\n                                        >\r\n                                            <img width=\"100%\" src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"Logo\" height=\"150px\" \r\n                                                style={{\r\n                                                    margin:\"10px\",\r\n                                                    padding:\"10px\"\r\n                                                }}/>\r\n                                            <p>{content?.title}</p>\r\n                                            <p>{content?.youtubeTitle?.slice(0,31)}...</p>\r\n                                            <div>\r\n                                                <label>단어</label>\r\n                                                <label>문장</label>\r\n                                                <label>더빙</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </MainBody>\r\n                    </MainSection>\r\n                    {/* 하단 */}\r\n                    <MainSection>\r\n                        <MainTitle>\r\n                            <p>{list2.name}</p>\r\n                            <p>더보기</p>\r\n                        </MainTitle>\r\n                        <MainBody>\r\n                            <div style={{\r\n                                height:\"300px\",\r\n                                display:\"flex\",\r\n                                flexDirection:\"row\",\r\n                            }}>\r\n                                {listB && listB.map((content:any,index:any) => {\r\n                                    // console.log(content,\"listB\");\r\n                                    // const str = \"https://www.youtube.com/watch?v=\"; //11개의 아이디,32개의글자\r\n                                    const suburl = content.url.slice(32,43);\r\n\r\n                                    return (\r\n                                        <div \r\n                                            key={index}\r\n                                        >\r\n                                            <img width=\"100%\" src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"Logo\" height=\"150px\" \r\n                                                style={{\r\n                                                    margin:\"10px\",\r\n                                                    padding:\"10px\"\r\n                                                }}/>\r\n                                            <p>{content?.title}</p>\r\n                                            <p>{content?.youtubeTitle?.slice(0,31)}</p>\r\n                                            <div>\r\n                                                <label>단어</label>\r\n                                                <label>문장</label>\r\n                                                <label>더빙</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </MainBody>\r\n                    </MainSection>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AdminMainPage;","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\styles\\theme.ts",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\components\\NavigationAdmin.tsx",["355"],"import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport header from '../Images/images/images/headerLogo.png';\r\n\r\n\r\nconst Container = styled.div`\r\n    height: 60px;\r\n    display: flex;\r\n    width:100%;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid black;\r\n`;\r\n\r\nconst Section = styled.div`\r\n    display:flex;\r\n    align-items: center;\r\n    width:33%;\r\n    height:100%;\r\n    justify-content:center;\r\n`;\r\n\r\nconst Img = styled.img`\r\n    width:40px;\r\n    margin-left:15px;\r\n    position: relative;\r\n    top: 0;\r\n    cursor: pointer;\r\n`;\r\n\r\n\r\nconst HeadList = styled.div`\r\n    white-space:nowrap;\r\n    display:flex;\r\n    justify-content: space-evenly;\r\n`;\r\nconst HeadListText = styled.p`\r\n    font-size: 10px;\r\n    margin: 10px;\r\n`;\r\n\r\nconst Modal = styled.div`\r\n    position: relative;\r\n    top: 62px;\r\n    right: 60px;\r\n`;\r\nconst NavigationAdmin = (props:any) => {\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const organizationName = localStorage.getItem(\"organizationName\");\r\n    const ShowModal = () => {\r\n        console.log(showModal)\r\n        setShowModal(!showModal);\r\n    }\r\n\r\n    const Logout = () => {\r\n        console.log(\"로그아웃\");\r\n        document.cookie = \"usertoken\" + '=; expires=Thu, 01 Jan 1999 00:00:10 GMT;'; // 과거의 만료일로 되돌리는 것임\r\n        localStorage.clear();\r\n        props.history.push(\"\");\r\n    }\r\n    return(\r\n        <Container>\r\n            <Section> \r\n                <Link to=\"/admin/AdminMainPage\">\r\n                    <Img src={header} alt=\"Logo\" width=\"40px\" /> &nbsp; | &nbsp;\r\n                </Link>\r\n                <div>\r\n                    <Link to=\"/admin/AdminMainPage\">\r\n                        <HeadListText>{organizationName}</HeadListText>\r\n                    </Link>\r\n                </div>\r\n            </Section>\r\n            <Section>\r\n                <HeadList>\r\n                    <HeadListText><Link to=\"/dashboard\">수업보기</Link></HeadListText>\r\n                </HeadList>\r\n                <HeadList>\r\n                    <HeadListText><Link to=\"/admin/dashboard/showCourse\">수업제작</Link></HeadListText>\r\n                </HeadList>\r\n                <HeadList>\r\n                    <HeadListText><Link to=\"/course_manage\">수업관리</Link></HeadListText>\r\n                </HeadList>\r\n                <HeadList>\r\n                    <HeadListText><Link to=\"/admin/dashboard/showCourse\">학생관리</Link></HeadListText>\r\n                </HeadList>\r\n            </Section>\r\n            <Section>\r\n                <HeadList>\r\n                    <HeadListText>\r\n                        <Link to=\"/admin/AdminMode\">관리자 모드</Link>\r\n                    </HeadListText>\r\n                </HeadList>\r\n                <Img onClick={() => ShowModal()} src=\"../userShadow.png\" alt=\"Logo\" width=\"40px\" />\r\n                    {!showModal \r\n                        ? null \r\n                    : \r\n                        <Modal>\r\n                            <Link to=\"/admin/AdminMyPage\">\r\n                                <p>마이페이지</p>\r\n                            </Link>\r\n                            <p style={{\r\n                                cursor: 'pointer',\r\n                                fontSize: '1em'\r\n                            }} onClick={Logout}>로그아웃</p>\r\n                        </Modal>\r\n                    }\r\n            </Section>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default withRouter(NavigationAdmin);","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\Main\\MyPage\\AdminMyPage.tsx",["356","357"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminCourseMoreViewPage.tsx",["358","359"],"import React,{useState, useEffect} from 'react';\r\nimport queryString from 'query-string';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { SearchByCategory, SearchData } from '../_actions/user_action';\r\nimport Input1 from '../utils/Input/Input';\r\nimport Banner from '../teacher/DashBoard/Banner';\r\nimport { RootState } from '../_reducers';\r\nimport Button1 from '../utils/Button1';\r\nimport NavigationAdmin from '../components/NavigationAdmin';\r\n\r\n\r\nconst Container = styled.div`\r\n    overflow-y:scroll;\r\n`;\r\n\r\nconst SearchSection = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 50px;\r\n    :nth-child(2) {\r\n        margin-right:10px;\r\n    }\r\n    :last-child {\r\n        margin-left:10px;\r\n    }\r\n`;\r\n\r\nconst MainSection = styled.div`\r\n    margin-bottom: 10px;\r\n    margin-left: 10%;\r\n    margin-right: 10%;\r\n`;\r\n\r\nconst MainTitle = styled.div`\r\n    height: 50px;\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst MainBody = styled.div`\r\n    display:flex;\r\n`;\r\n\r\n\r\n\r\n\r\nconst AdminCourseMoreViewPage:React.FC = (props:any) => {\r\n\r\n    const query = queryString.parse(props.location.search);\r\n\r\n    const dispatch = useDispatch();\r\n    const Data = useSelector((state:RootState) => state?.user?.data?.data?.contents);\r\n    const CategoryData = useSelector((state:RootState) => state?.user.searchCategory?.data?.contents);\r\n\r\n    console.log(CategoryData,\"이거잉너아나\"); //category일때옴\r\n    \r\n    \r\n    \r\n    // auth hoc만들어서 한번에 검증해버릴거임 귀차나\r\n    const cookieValue = document.cookie.split('=');\r\n    \r\n    const [search, setSearch] = useState<string>(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        const selected = 0;\r\n        {query.keyword ? dispatch(SearchData(cookieValue[1],query.keyword)) :\r\n            dispatch(SearchByCategory(cookieValue[1],selected ,query.categoriespk));\r\n        }  \r\n    },[dispatch,SearchByCategory,SearchData])\r\n\r\n\r\n    const onSearch = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    //검색하면 데이터 불러옴\r\n    const onSearchButton = (e:any) => {\r\n        dispatch(SearchData(cookieValue[1],search))\r\n        props.history.push(`/admin/AdminCourseMoreViewPage?categoriespk=&categoriesname=&keyword=${search}&type=KEYWORD`);\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <NavigationAdmin />\r\n            <Container>\r\n                <Banner cookieValue={cookieValue}/> \r\n                <SearchSection>\r\n                    <div style={{\r\n                        border:\"1px solid black\",\r\n                        marginRight: \"10px\",\r\n                        padding: \"1px\"\r\n                    }}>\r\n                        <Input1 placeholder=\"검색어를 입력하세요\" size=\"500px\" onChange={onSearch} type=\"text\" value={search}/>\r\n                    </div>\r\n                    <Button1 onClick={onSearchButton} size=\"10%\" text=\"검색\" />\r\n                </SearchSection>\r\n                <MainSection>\r\n                    <>\r\n                        {query.keyword ? <>\r\n                        <MainTitle>\r\n                            <p>{query?.keyword}의 검색결과</p>\r\n                            <p>더보기</p>\r\n                        </MainTitle>\r\n                        <MainBody>\r\n                            <div style={{\r\n                                height:\"300px\",\r\n                                display:\"flex\",\r\n                                flexDirection:\"row\",\r\n                            }}>\r\n                                {Data && Data.map((content:any,index:any) => {\r\n                                    const suburl = content.url.slice(32,43);\r\n\r\n                                    return(\r\n                                        <div \r\n                                            key={index}\r\n                                        >\r\n                                            <img width=\"100%\" src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"Logo\" height=\"150px\" \r\n                                                style={{\r\n                                                    margin:\"10px\",\r\n                                                    padding:\"10px\"\r\n                                                }}/>\r\n                                            <p>{content?.title}</p>\r\n                                            <p>{content?.youtubeTitle?.slice(0,31)}...</p>\r\n                                            <div>\r\n                                                <label>단어</label>\r\n                                                <label>문장</label>\r\n                                                <label>더빙</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </MainBody></> :\r\n                            <>\r\n                            <MainTitle>\r\n                                <p>{query?.categoriesname}의 검색결과</p>\r\n                                <p>더보기</p>\r\n                            </MainTitle>\r\n                            <MainBody>\r\n                                <div style={{\r\n                                    height:\"300px\",\r\n                                    display:\"flex\",\r\n                                    flexDirection:\"row\",\r\n                                }}>\r\n                                    {CategoryData && CategoryData.map((content:any,index:any) => {\r\n                                        const suburl = content.url.slice(32,43);\r\n    \r\n                                        return(\r\n                                            <div \r\n                                                key={index}\r\n                                            >\r\n                                                <img width=\"100%\" src={`https://img.youtube.com/vi/${suburl}/0.jpg`} alt=\"Logo\" height=\"150px\" \r\n                                                    style={{\r\n                                                        margin:\"10px\",\r\n                                                        padding:\"10px\",\r\n                                                        maxWidth:\"220pt\"\r\n                                                    }}/>\r\n                                                <p>{content?.title}</p>\r\n                                                <p>{content?.youtubeTitle?.slice(0,31)}...</p>\r\n                                                <div>\r\n                                                    <label>단어</label>\r\n                                                    <label>문장</label>\r\n                                                    <label>더빙</label>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            </MainBody></>\r\n                        }\r\n                        </>\r\n                    </MainSection>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AdminCourseMoreViewPage;","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminMode.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminNaviLeft.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminCategoryModule.tsx",["360","361","362"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminMemberManage\\AdminMemberMainManage.tsx",["363","364"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminMemberManage\\AdminMemberManage.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminMemberManage\\HeaderAdmin.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Logo\\Logo.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminOrganizationManage\\AdminOrganizationManage.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminOrganizationManage\\HeaderAdminOrganization.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminOrganizationManage\\AdminOrganizationMainManage.tsx",["365","366"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminBanner\\AdminBannerManageMain.tsx",["367","368","369","370","371"],"import React,{useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport settingImg from '../../Images/images/images/setting.png';\r\nimport MovingButton from '../../utils/Button/MovingButton';\r\nimport { STATE_CHANGE } from '@material-ui/data-grid';\r\n\r\n\r\ninterface SizeUrl {\r\n    size: string\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n    height: 800px;\r\n`;\r\n\r\nconst Banner = styled.div`\r\n    height: 30%;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 74pt);\r\n    padding-left: 9pt;\r\n    padding-top: 80pt;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst SetImg = styled.img`\r\n    cursor: pointer;\r\n`;\r\n\r\nconst UpdateBannerWrap = styled.div`\r\n    box-sizing: border-box;\r\n    width: calc(100% - 95pt);\r\n    margin-top: 98.5px;\r\n    margin-left: 35px;\r\n    height: 800px;\r\n    display:flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst BannerUploadWrap = styled.div`\r\n    display:'flex';\r\n    width:100%;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst UploadImage = styled.div`\r\n    width: 100%;\r\n    height: 128px;\r\n    margin-bottom: 21px;\r\n    background-image: url(${(props:SizeUrl) => props.size});\r\n    background-color: #F4F4F4;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    box-shadow: 0pt 3pt 6pt #00000029;\r\n`;\r\n\r\nconst InputUrl = styled.input`\r\n    background: #F4F4F4 0% 0% no-repeat padding-box;\r\n    box-shadow: 0px 3px 6px #00000029;\r\n    border-radius: 5px;\r\n    width: 100%;\r\n    height: 47px;\r\n    border: 0;\r\n    margin-bottom: 62pt;\r\n    padding: 0 18pt;\r\n    font: normal normal 300 13px/16px Helvetica Neue;\r\n`;\r\n\r\nconst SPAN = styled.span`\r\n    &:hover {\r\n        color: white;\r\n        background-color: black;\r\n    }\r\n`;\r\n\r\ntype Props = {\r\n    type: boolean;\r\n    CookieValue: Number;\r\n    setState:any;\r\n}\r\n\r\n\r\nconst AdminBannerManageMain:React.FC<Props> = ({type,setState, CookieValue}) => {\r\n\r\n    const [page, setPage] = useState<number>(1);\r\n    const [bannerData, setBannerData] = useState<Object[]>([]);\r\n    const [isMenuOpen, setIsMenuOpen] = useState<number>(-1); //setting Menu bar\r\n    const [files, setFiles] = useState([]);\r\n    const [UploadData, setUploadFiles] = useState([]); //body에넣을것\r\n    const [url, setUploadFilesUrl] = useState<string>(\"\");\r\n    const [pk, setUploadFilesPk] = useState<number>(0);\r\n    const [Link, setLink] = useState<string>(\"\");\r\n\r\n    //취소버튼\r\n    const clickCancelHandler = () => {\r\n        // console.log(\"누름\");\r\n        setState(false);\r\n    }\r\n    \r\n   //위의 업로드버튼\r\n    const fileChangedHandler = (e:any) => {\r\n        // console.log(e.target.files[0]);\r\n        setFiles(e.target.filse);\r\n        const formData = new FormData();\r\n        formData.append(\"file\",e.target.files[0]);\r\n        \r\n        axios.post(`https://1hour.school/api/v1/file/upload`,formData,{\r\n            headers: {\r\n                Authorization: CookieValue\r\n            }\r\n        })\r\n            .then(response => {\r\n                if(response.data.status === 200) {\r\n                    setUploadFiles(response.data.data);\r\n                    setUploadFilesUrl(response.data.data.url);\r\n                    setUploadFilesPk(response.data.data.pk);\r\n                } else {\r\n                    console.log(\"Data를 업로드하는데 실패했습니다\");\r\n                }\r\n            });\r\n    }\r\n\r\n    const valueChangeHandler = (e:any) => {\r\n        setLink(e.target.value);\r\n    }\r\n    //배너 업로드\r\n    const onCreateBannerHandler = () => {\r\n        let body = {\r\n            banner_img: pk,\r\n            ref:Link\r\n        }\r\n        axios.post(`https://1hour.school/api/v1/banner/create`,body, {\r\n            headers: {\r\n                Authorization: CookieValue\r\n            }\r\n        }).then(response => {console.log(response.data)}); \r\n    }\r\n   \r\n    \r\n    const UpdateBannerComponent = () => {\r\n        return(\r\n            <>\r\n                <Helmet>\r\n                    <title>Admin | 배너관리 | 올리기</title>\r\n                </Helmet>\r\n                <UpdateBannerWrap>\r\n                    <BannerUploadWrap>\r\n                        <h3>배너올리기*</h3>\r\n                        <p>사이즈는 000 x 00 픽셀에 맞춰주세요</p>\r\n                        <UploadImage size={url}></UploadImage>\r\n                        <div style={{position:'relative'}}>\r\n                            <input onChange={fileChangedHandler} type=\"file\" name=\"add\" id=\"add\" style={{display:'none'}} multiple  />\r\n                            <label htmlFor=\"add\">\r\n                                <div style={{position:'absolute', border:'1px solid black',cursor:'pointer', right:'0px'}}>파일선택</div>\r\n                            </label>\r\n                        </div>\r\n                    </BannerUploadWrap>\r\n                    <BannerUploadWrap>\r\n                        <h3>연결링크*</h3>\r\n                        <InputUrl value={Link} onChange={valueChangeHandler} />\r\n                        <div style={{justifyContent:'space-between', display:'flex'}}>\r\n                            <button onClick={clickCancelHandler}>취소하기</button>\r\n                            <button onClick={onCreateBannerHandler}>등록하기</button>\r\n                        </div>\r\n                    </BannerUploadWrap>\r\n                </UpdateBannerWrap>\r\n            </>\r\n        );\r\n    }\r\n    \r\n    \r\n\r\n    // 배너 관리 목록\r\n    const request = async function getBanner() {\r\n        await axios.get(`https://1hour.school/api/v1/banner/list/${page}`, {\r\n            headers: {\r\n                Authorization: CookieValue\r\n            }\r\n        }).then(response => {\r\n            if(response.data.status === 200 ) {\r\n                setBannerData([...response.data.data.rows]);\r\n            } else {\r\n                alert(\"배너데이터 불러오는데 실패했습니다\");\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        request();\r\n    },[type])\r\n    \r\n\r\n    const settingClickHandler = (index:number) => {\r\n        setIsMenuOpen(index);\r\n        if(index === isMenuOpen) {\r\n            setIsMenuOpen(-1);\r\n        }\r\n    }\r\n\r\n    \r\n   const IsBannerPublicHandler = (pk:number) => {\r\n        let body = {\r\n            banner:pk\r\n        }\r\n        axios.post(`https://1hour.school/api/v1/banner/update/shown`,body, {\r\n            headers: {\r\n                Authorization: CookieValue\r\n            }\r\n        }).then(response => {\r\n            if(response.data.status === 200) {\r\n                request();\r\n            } else {\r\n                alert(\"데이터를 수정하는데 실패했습니다\");\r\n            }\r\n        });\r\n   }\r\n\r\n   //배너삭제하기\r\n   const BannerDelete = (pk:number) => {\r\n       let body = {\r\n           banner:pk\r\n       }\r\n       axios.post(`https://1hour.school/api/v1/banner/delete`, body, {\r\n            headers: {\r\n                Authorization: CookieValue\r\n            }\r\n       }).then(response => {console.log(response.data)}); //삭제성공 if response.data.status === 200 성공 else if 실패\r\n   }\r\n\r\n    //배너 목록 눌렀을때 보여주는 페이지\r\n    const ShowCurrentBannerComponent = () => {\r\n        return(\r\n            <>\r\n                <Helmet>\r\n                    <title>Admin | 배너관리 | 목록</title>\r\n                </Helmet>\r\n                <Banner>\r\n                    {bannerData && bannerData.map((Data:any,index) => {\r\n                        console.log(bannerData,\"배너배너\");\r\n                        return(\r\n                            <div key={index}>\r\n                                <div style={{display:'flex', justifyContent:'space-between', margin:'20pt auto', alignItems:'center'}}>\r\n                                    <div>\r\n                                        <span>#{index}</span>&nbsp;\r\n                                        <span>{Data.created} 생성</span>\r\n                                    </div>\r\n                                    <div style={{display:'flex',width:'250px',justifyContent:'space-evenly', position:'relative', marginBottom:'10pt', alignItems: 'center'}}>\r\n                                        <span>{Data.hidden === false ? \"배너 공개중\" : \"배너 비공개중\" }</span>\r\n                                        <div onClick={() => IsBannerPublicHandler(Data.pk)}><MovingButton hidden={Data.hidden} /></div>\r\n                                            <div>\r\n                                                <SetImg src={settingImg} alt=\"logo\" onClick={() => settingClickHandler(index)} />\r\n                                                {isMenuOpen !== index ? null : <div style={{display:'flex',flexDirection:'column',cursor:'pointer' ,border:'1px solid black',position:'absolute',top:'30px',right:'35px'}}>\r\n                                                    <SPAN>배너수정하기</SPAN>\r\n                                                    <SPAN onClick={() => BannerDelete(Data.pk)}>배너삭제하기</SPAN>\r\n                                                </div>}\r\n                                            </div>\r\n                                    </div>\r\n                                </div>\r\n                                <img src={Data.img} alt=\"logo\" width=\"100%\" height=\"140px\" />\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </Banner>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    return(\r\n        <Wrapper>\r\n            {type ? UpdateBannerComponent() : ShowCurrentBannerComponent()}\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default AdminBannerManageMain;","C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminBanner\\HeaderAdminBanner.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminBanner\\AdminBannerManage.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Button\\MovingButton.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminCategory\\AdminCategoryMainManage.tsx",["372"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminCategory\\AdminCategoryCreateModal.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminPlayListMainManage.tsx",["373","374"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminPlayListManage.tsx",["375"],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\HeaderAdminPlayList.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\admin\\AdminPlayListManage\\AdminPlayListCreateModal.tsx",[],"C:\\Users\\vkdnj\\Desktop\\SIZL0hours\\sizlzerohoursclone\\src\\utils\\Button\\PublicButton.tsx",["376"],{"ruleId":"377","replacedBy":"378"},{"ruleId":"379","replacedBy":"380"},{"ruleId":"381","severity":1,"message":"382","line":2,"column":8,"nodeType":"383","messageId":"384","endLine":2,"endColumn":13},{"ruleId":"381","severity":1,"message":"385","line":3,"column":9,"nodeType":"383","messageId":"384","endLine":3,"endColumn":13},{"ruleId":"386","severity":1,"message":"387","line":38,"column":7,"nodeType":"388","endLine":38,"endColumn":9,"suggestions":"389"},{"ruleId":"381","severity":1,"message":"390","line":42,"column":12,"nodeType":"383","messageId":"384","endLine":42,"endColumn":24},{"ruleId":"377","replacedBy":"391"},{"ruleId":"379","replacedBy":"392"},{"ruleId":"381","severity":1,"message":"393","line":2,"column":49,"nodeType":"383","messageId":"384","endLine":2,"endColumn":57},{"ruleId":"381","severity":1,"message":"394","line":6,"column":8,"nodeType":"383","messageId":"384","endLine":6,"endColumn":14},{"ruleId":"381","severity":1,"message":"395","line":28,"column":21,"nodeType":"383","messageId":"384","endLine":28,"endColumn":31},{"ruleId":"381","severity":1,"message":"396","line":1,"column":15,"nodeType":"383","messageId":"384","endLine":1,"endColumn":23},{"ruleId":"381","severity":1,"message":"397","line":1,"column":25,"nodeType":"383","messageId":"384","endLine":1,"endColumn":34},{"ruleId":"381","severity":1,"message":"398","line":6,"column":42,"nodeType":"383","messageId":"384","endLine":6,"endColumn":47},{"ruleId":"381","severity":1,"message":"399","line":13,"column":10,"nodeType":"383","messageId":"384","endLine":13,"endColumn":15},{"ruleId":"381","severity":1,"message":"400","line":24,"column":11,"nodeType":"383","messageId":"384","endLine":24,"endColumn":19},{"ruleId":"377","replacedBy":"401"},{"ruleId":"379","replacedBy":"402"},{"ruleId":"403","severity":1,"message":"404","line":35,"column":1,"nodeType":"405","endLine":58,"endColumn":10},{"ruleId":"377","replacedBy":"406"},{"ruleId":"379","replacedBy":"407"},{"ruleId":"377","replacedBy":"408"},{"ruleId":"379","replacedBy":"409"},{"ruleId":"377","replacedBy":"410"},{"ruleId":"379","replacedBy":"411"},{"ruleId":"381","severity":1,"message":"412","line":1,"column":8,"nodeType":"383","messageId":"384","endLine":1,"endColumn":13},{"ruleId":"377","replacedBy":"413"},{"ruleId":"379","replacedBy":"414"},{"ruleId":"381","severity":1,"message":"412","line":1,"column":8,"nodeType":"383","messageId":"384","endLine":1,"endColumn":13},{"ruleId":"381","severity":1,"message":"415","line":2,"column":8,"nodeType":"383","messageId":"384","endLine":2,"endColumn":19},{"ruleId":"377","replacedBy":"416"},{"ruleId":"379","replacedBy":"417"},{"ruleId":"381","severity":1,"message":"396","line":1,"column":27,"nodeType":"383","messageId":"384","endLine":1,"endColumn":35},{"ruleId":"386","severity":1,"message":"418","line":106,"column":7,"nodeType":"388","endLine":106,"endColumn":9,"suggestions":"419"},{"ruleId":"377","replacedBy":"420"},{"ruleId":"379","replacedBy":"421"},{"ruleId":"403","severity":1,"message":"404","line":2,"column":1,"nodeType":"405","endLine":67,"endColumn":2},{"ruleId":"386","severity":1,"message":"422","line":34,"column":11,"nodeType":"388","endLine":34,"endColumn":37,"suggestions":"423"},{"ruleId":"386","severity":1,"message":"424","line":34,"column":12,"nodeType":"425","endLine":34,"endColumn":26},{"ruleId":"381","severity":1,"message":"426","line":9,"column":10,"nodeType":"383","messageId":"384","endLine":9,"endColumn":23},{"ruleId":"381","severity":1,"message":"427","line":59,"column":11,"nodeType":"383","messageId":"384","endLine":59,"endColumn":15},{"ruleId":"381","severity":1,"message":"428","line":66,"column":12,"nodeType":"383","messageId":"384","endLine":66,"endColumn":16},{"ruleId":"386","severity":1,"message":"429","line":93,"column":7,"nodeType":"388","endLine":93,"endColumn":23,"suggestions":"430"},{"ruleId":"386","severity":1,"message":"424","line":93,"column":8,"nodeType":"425","endLine":93,"endColumn":22},{"ruleId":"431","severity":1,"message":"432","line":71,"column":9,"nodeType":"433","messageId":"434","endLine":73,"endColumn":10},{"ruleId":"386","severity":1,"message":"435","line":74,"column":7,"nodeType":"388","endLine":74,"endColumn":45,"suggestions":"436"},{"ruleId":"381","severity":1,"message":"427","line":54,"column":11,"nodeType":"383","messageId":"384","endLine":54,"endColumn":15},{"ruleId":"381","severity":1,"message":"428","line":58,"column":12,"nodeType":"383","messageId":"384","endLine":58,"endColumn":16},{"ruleId":"386","severity":1,"message":"429","line":81,"column":7,"nodeType":"388","endLine":81,"endColumn":16,"suggestions":"437"},{"ruleId":"438","severity":1,"message":"439","line":57,"column":39,"nodeType":"440","messageId":"441","endLine":57,"endColumn":40},{"ruleId":"431","severity":1,"message":"432","line":70,"column":9,"nodeType":"433","messageId":"434","endLine":72,"endColumn":10},{"ruleId":"386","severity":1,"message":"435","line":73,"column":7,"nodeType":"388","endLine":73,"endColumn":45,"suggestions":"442"},{"ruleId":"377","replacedBy":"443"},{"ruleId":"379","replacedBy":"444"},{"ruleId":"381","severity":1,"message":"382","line":2,"column":8,"nodeType":"383","messageId":"384","endLine":2,"endColumn":13},{"ruleId":"381","severity":1,"message":"385","line":3,"column":9,"nodeType":"383","messageId":"384","endLine":3,"endColumn":13},{"ruleId":"386","severity":1,"message":"387","line":39,"column":7,"nodeType":"388","endLine":39,"endColumn":9,"suggestions":"445"},{"ruleId":"381","severity":1,"message":"390","line":43,"column":12,"nodeType":"383","messageId":"384","endLine":43,"endColumn":24},{"ruleId":"381","severity":1,"message":"396","line":1,"column":27,"nodeType":"383","messageId":"384","endLine":1,"endColumn":35},{"ruleId":"386","severity":1,"message":"418","line":125,"column":7,"nodeType":"388","endLine":125,"endColumn":9,"suggestions":"446"},{"ruleId":"381","severity":1,"message":"382","line":9,"column":8,"nodeType":"383","messageId":"384","endLine":9,"endColumn":13},{"ruleId":"381","severity":1,"message":"447","line":111,"column":17,"nodeType":"383","messageId":"384","endLine":111,"endColumn":24},{"ruleId":"386","severity":1,"message":"448","line":118,"column":8,"nodeType":"388","endLine":118,"endColumn":10,"suggestions":"449"},{"ruleId":"377","replacedBy":"450"},{"ruleId":"379","replacedBy":"451"},{"ruleId":"438","severity":1,"message":"439","line":58,"column":39,"nodeType":"440","messageId":"441","endLine":58,"endColumn":40},{"ruleId":"377","replacedBy":"450"},{"ruleId":"379","replacedBy":"451"},{"ruleId":"386","severity":1,"message":"452","line":45,"column":7,"nodeType":"388","endLine":45,"endColumn":9,"suggestions":"453"},{"ruleId":"381","severity":1,"message":"427","line":56,"column":11,"nodeType":"383","messageId":"384","endLine":56,"endColumn":15},{"ruleId":"381","severity":1,"message":"428","line":63,"column":12,"nodeType":"383","messageId":"384","endLine":63,"endColumn":16},{"ruleId":"386","severity":1,"message":"429","line":92,"column":7,"nodeType":"388","endLine":92,"endColumn":23,"suggestions":"454"},{"ruleId":"386","severity":1,"message":"424","line":92,"column":8,"nodeType":"425","endLine":92,"endColumn":22},{"ruleId":"438","severity":1,"message":"439","line":58,"column":39,"nodeType":"440","messageId":"441","endLine":58,"endColumn":40},{"ruleId":"381","severity":1,"message":"396","line":1,"column":27,"nodeType":"383","messageId":"384","endLine":1,"endColumn":35},{"ruleId":"386","severity":1,"message":"418","line":106,"column":7,"nodeType":"388","endLine":106,"endColumn":9,"suggestions":"455"},{"ruleId":"431","severity":1,"message":"432","line":70,"column":9,"nodeType":"433","messageId":"434","endLine":72,"endColumn":10},{"ruleId":"386","severity":1,"message":"435","line":73,"column":7,"nodeType":"388","endLine":73,"endColumn":45,"suggestions":"456"},{"ruleId":"381","severity":1,"message":"385","line":2,"column":9,"nodeType":"383","messageId":"384","endLine":2,"endColumn":13},{"ruleId":"386","severity":1,"message":"387","line":38,"column":7,"nodeType":"388","endLine":38,"endColumn":9,"suggestions":"457"},{"ruleId":"381","severity":1,"message":"390","line":42,"column":12,"nodeType":"383","messageId":"384","endLine":42,"endColumn":24},{"ruleId":"381","severity":1,"message":"447","line":48,"column":18,"nodeType":"383","messageId":"384","endLine":48,"endColumn":25},{"ruleId":"386","severity":1,"message":"458","line":96,"column":7,"nodeType":"388","endLine":96,"endColumn":12,"suggestions":"459"},{"ruleId":"381","severity":1,"message":"447","line":48,"column":18,"nodeType":"383","messageId":"384","endLine":48,"endColumn":25},{"ruleId":"386","severity":1,"message":"458","line":96,"column":8,"nodeType":"388","endLine":96,"endColumn":14,"suggestions":"460"},{"ruleId":"381","severity":1,"message":"461","line":7,"column":10,"nodeType":"383","messageId":"384","endLine":7,"endColumn":22},{"ruleId":"381","severity":1,"message":"447","line":88,"column":18,"nodeType":"383","messageId":"384","endLine":88,"endColumn":25},{"ruleId":"381","severity":1,"message":"462","line":91,"column":12,"nodeType":"383","messageId":"384","endLine":91,"endColumn":17},{"ruleId":"381","severity":1,"message":"463","line":92,"column":12,"nodeType":"383","messageId":"384","endLine":92,"endColumn":22},{"ruleId":"386","severity":1,"message":"464","line":193,"column":7,"nodeType":"388","endLine":193,"endColumn":13,"suggestions":"465"},{"ruleId":"386","severity":1,"message":"466","line":68,"column":7,"nodeType":"388","endLine":68,"endColumn":20,"suggestions":"467"},{"ruleId":"381","severity":1,"message":"447","line":49,"column":18,"nodeType":"383","messageId":"384","endLine":49,"endColumn":25},{"ruleId":"386","severity":1,"message":"468","line":67,"column":7,"nodeType":"388","endLine":67,"endColumn":20,"suggestions":"469"},{"ruleId":"381","severity":1,"message":"396","line":1,"column":16,"nodeType":"383","messageId":"384","endLine":1,"endColumn":24},{"ruleId":"381","severity":1,"message":"396","line":1,"column":17,"nodeType":"383","messageId":"384","endLine":1,"endColumn":25},"no-native-reassign",["470"],"no-negated-in-lhs",["471"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cookieValue' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["472"],"'categoryname' is assigned a value but never used.",["470"],["471"],"'Redirect' is defined but never used.","'styled' is defined but never used.","'setMembers' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Input' is defined but never used.","'login' is defined but never used.","'dispatch' is assigned a value but never used.",["470"],["471"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["470"],["471"],["470"],["471"],["470"],["471"],"'React' is defined but never used.",["470"],["471"],"'queryString' is defined but never used.",["470"],["471"],"React Hook useEffect has missing dependencies: 'cookieValue', 'dispatch', and 'email'. Either include them or remove the dependency array.",["473"],["470"],["471"],"React Hook useEffect has missing dependencies: 'cookieValue' and 'props.history'. Either include them or remove the dependency array.",["474"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'DashBoardData' is defined but never used.","'Data' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'cookieValue'. Either include it or remove the dependency array.",["475"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'cookieValue', 'query.categoriespk', and 'query.keyword'. Either include them or remove the dependency array. Outer scope values like 'SearchByCategory' aren't valid dependencies because mutating them doesn't re-render the component.",["476"],["477"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["478"],["470"],["471"],["479"],["480"],"'setPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'closed', 'cookieValue', 'dispatch', and 'page'. Either include them or remove the dependency array.",["481"],["470"],["471"],"React Hook useEffect has a missing dependency: 'cookie'. Either include it or remove the dependency array.",["482"],["483"],["484"],["485"],["486"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["487"],["488"],"'STATE_CHANGE' is defined but never used.","'files' is assigned a value but never used.","'UploadData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'request'. Either include it or remove the dependency array.",["489"],"React Hook useEffect has a missing dependency: 'getCategoryList'. Either include it or remove the dependency array.",["490"],"React Hook useEffect has a missing dependency: 'getPlayList'. Either include it or remove the dependency array.",["491"],"no-global-assign","no-unsafe-negation",{"desc":"492","fix":"493"},{"desc":"494","fix":"495"},{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"500","fix":"504"},{"desc":"492","fix":"505"},{"desc":"494","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"498","fix":"511"},{"desc":"494","fix":"512"},{"desc":"500","fix":"513"},{"desc":"492","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},"Update the dependencies array to be: [cookieValue, dispatch]",{"range":"525","text":"526"},"Update the dependencies array to be: [cookieValue, dispatch, email]",{"range":"527","text":"528"},"Update the dependencies array to be: [authority, cookieValue, props.history]",{"range":"529","text":"530"},"Update the dependencies array to be: [cookieValue]",{"range":"531","text":"532"},"Update the dependencies array to be: [dispatch, query.keyword, query.categoriespk, cookieValue]",{"range":"533","text":"534"},"Update the dependencies array to be: [cookieValue, setData]",{"range":"535","text":"536"},{"range":"537","text":"534"},{"range":"538","text":"526"},{"range":"539","text":"528"},"Update the dependencies array to be: [closed, cookieValue, dispatch, page]",{"range":"540","text":"541"},"Update the dependencies array to be: [cookie]",{"range":"542","text":"543"},{"range":"544","text":"532"},{"range":"545","text":"528"},{"range":"546","text":"534"},{"range":"547","text":"526"},"Update the dependencies array to be: [getData, tab]",{"range":"548","text":"549"},"Update the dependencies array to be: [getData, type]",{"range":"550","text":"551"},"Update the dependencies array to be: [request, type]",{"range":"552","text":"553"},"Update the dependencies array to be: [getCategoryList, isModalOpen]",{"range":"554","text":"555"},"Update the dependencies array to be: [getPlayList, isModalOpen]",{"range":"556","text":"557"},[1044,1046],"[cookieValue, dispatch]",[2437,2439],"[cookieValue, dispatch, email]",[1311,1337],"[authority, cookieValue, props.history]",[2651,2667],"[cookieValue]",[1923,1961],"[dispatch, query.keyword, query.categoriespk, cookieValue]",[2217,2226],"[cookieValue, setData]",[1947,1985],[1052,1054],[2903,2905],[2599,2601],"[closed, cookieValue, dispatch, page]",[1249,1251],"[cookie]",[2647,2663],[2452,2454],[1941,1979],[1017,1019],[2575,2580],"[getData, tab]",[2623,2629],"[getData, type]",[5854,5860],"[request, type]",[1904,1917],"[getCategoryList, isModalOpen]",[1805,1818],"[getPlayList, isModalOpen]"]